#pragma once

// PUBG (9.1.5.3) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "PUBG_Basic.hpp"
#include "PUBG_UMG_classes.hpp"
#include "PUBG_Slate_classes.hpp"
#include "PUBG_Engine_classes.hpp"
#include "PUBG_TslCommon_classes.hpp"
#include "PUBG_SlateCore_classes.hpp"
#include "PUBG_InputCore_classes.hpp"
#include "PUBG_AnimGraphRuntime_classes.hpp"
#include "PUBG_AIModule_classes.hpp"
#include "PUBG_CoreUObject_classes.hpp"
#include "PUBG_PhysXVehicles_classes.hpp"
#include "PUBG_CoherentUIGTPlugin_classes.hpp"
#include "PUBG_EngineSettings_classes.hpp"
#include "PUBG_CustomizableObject_classes.hpp"
#include "PUBG_OnlineSubsystemUtils_classes.hpp"
#include "PUBG_AkAudio_classes.hpp"
#include "PUBG_GameplayTasks_classes.hpp"
#include "PUBG_OceanPlugin_classes.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Enums
//---------------------------------------------------------------------------

// Enum TslGame.EPopupButtonID
enum class EPopupButtonID : uint8_t
{
	Cancel_Or_No                   = 0,
	Yes_Or_OK                      = 1,
	EPopupButtonID_MAX             = 2
};


// Enum TslGame.ECastCancelReason
enum class ECastCancelReason : uint8_t
{
	Invalid                        = 0,
	CasterAiming                   = 1,
	CasterArming                   = 2,
	CasterApnea                    = 3,
	CasterSprinting                = 4,
	CasterJumping                  = 5,
	CasterFallingLong              = 6,
	CasterFiring                   = 7,
	CasterGroggy                   = 8,
	CasterGroggyOnZeroTimeCast     = 9,
	CasterHipped                   = 10,
	CasterInvalid                  = 11,
	CasterNotAlive                 = 12,
	CasterPickedUpDroppedItem      = 13,
	CasterPickedUpItemFromPackage  = 14,
	CasterReloading                = 15,
	CasterRolling                  = 16,
	CasterTargeting                = 17,
	CasterUnarmAttacking           = 18,
	CasterVault                    = 19,
	CastObjectInvalid              = 20,
	CastObjectNotExecutable        = 21,
	FailedCasterMovementDistCheckOnClient = 22,
	FailedCasterMovementDistCheckOnServer = 23,
	FailedCasterAndCastObjDistCheckOnClient = 24,
	FailedCasterAndCastObjDistCheckOnServer = 25,
	CharacterBeingRevivedDead      = 26,
	ManualCancel                   = 27,
	NewCastOnClient                = 28,
	NewCastOnServer                = 29,
	VehicleLanding                 = 30,
	VehicleSeatChanged             = 31,
	VehicleMoving                  = 32,
	VehicleUpsideDown              = 33,
	ECastCancelReason_MAX          = 34
};


// Enum TslGame.ESystemMessageType
enum class ESystemMessageType : uint8_t
{
	Debug                          = 0,
	Notify                         = 1,
	Warning                        = 2,
	Error                          = 3,
	Important                      = 4,
	NotifyCommand                  = 5,
	ESystemMessageType_MAX         = 6
};


// Enum TslGame.EOutGamePlatformProvider
enum class EOutGamePlatformProvider : uint8_t
{
	Unknown                        = 0,
	Bro                            = 1,
	PcSteam                        = 2,
	PcDmm                          = 3,
	PcMailRu                       = 4,
	PcKakao                        = 5,
	PcTencent                      = 6,
	ConsoleXbox                    = 7,
	ConsolePsn                     = 8,
	PcLiteGarena                   = 9,
	PcLiteGlobalAccount            = 10,
	ConsoleClgn                    = 11,
	AI                             = 12,
	Max                            = 13,
	EOutGamePlatformProvider_MAX   = 14
};


// Enum TslGame.EDamageReason
enum class EDamageReason : uint8_t
{
	None                           = 0,
	HeadShot                       = 1,
	TorsoShot                      = 2,
	PelvisShot                     = 3,
	ArmShot                        = 4,
	LegShot                        = 5,
	NonSpecific                    = 6,
	Blocked                        = 7,
	EDamageReason_MAX              = 8
};


// Enum TslGame.EDamageTypeCategory
enum class EDamageTypeCategory : uint8_t
{
	Damage_None                    = 0,
	Damage_Instant                 = 1,
	Damage_Gun                     = 2,
	Damage_Melee                   = 3,
	Damage_Punch                   = 4,
	Damage_ZombiePunch             = 5,
	Damage_Groggy                  = 6,
	Damage_BlueZone                = 7,
	Damage_VehicleHit              = 8,
	Damage_VehicleCrashHit         = 9,
	Damage_Molotov                 = 10,
	Damage_Explosion               = 11,
	Damage_Explosion_Grenade       = 12,
	Damage_Explosion_RedZone       = 13,
	Damage_Explosion_Vehicle       = 14,
	Damage_Instant_Fall            = 15,
	Damage_Drown                   = 16,
	Damage_BleedOut                = 17,
	Damage_Explosion_JerryCan      = 18,
	Damage_ZombieBuff              = 19,
	Damage_CPPWinExit              = 20,
	Damage_MeleeThrow              = 21,
	Damage_Explosion_C4            = 22,
	Damage_Explosion_StickyBomb    = 23,
	Damage_Explosion_Breach        = 24,
	Damage_Explosion_PanzerFaustWarhead = 25,
	Damage_Explosion_PanzerFaustWarheadVehicleArmorPenetration = 26,
	Damage_Explosion_PanzerFaustBackBlast = 27,
	Damage_Explosion_BlackZone     = 28,
	Damage_Explosion_Meteor        = 29,
	Damage_TrainHit                = 30,
	Damage_Explosion_PropaneTank   = 31,
	Damage_LootTruckHit            = 32,
	Damage_Explosion_LootTruck     = 33,
	Damage_ShipHit                 = 34,
	Damage_Lava                    = 35,
	Damage_MAX                     = 36
};


// Enum TslGame.ESkydiveState
enum class ESkydiveState : uint8_t
{
	Skydive_None                   = 0,
	Skydive_Freefall               = 1,
	Skydive_ParachuteDeploying     = 2,
	Skydive_ParachuteDeployed      = 3,
	Skydive_ParachuteCollapsing    = 4,
	Skydive_MAX                    = 5
};


// Enum TslGame.EMarkerType
enum class EMarkerType : uint8_t
{
	Normal                         = 0,
	Attack                         = 1,
	Danger                         = 2,
	Defend                         = 3,
	Loot                           = 4,
	Regroup                        = 5,
	Vehicle                        = 6,
	EMarkerType_MAX                = 7
};


// Enum TslGame.EPlatoonSupportRequestEventType
enum class EPlatoonSupportRequestEventType : uint8_t
{
	Start                          = 0,
	Interactible                   = 1,
	Finish                         = 2,
	EPlatoonSupportRequestEventType_MAX = 3
};


// Enum TslGame.EPlatoonCarePackageType
enum class EPlatoonCarePackageType : uint8_t
{
	NotDesignated                  = 0,
	WeaponPackage                  = 1,
	HealingPackage                 = 2,
	EPlatoonCarePackageType_MAX    = 3
};


// Enum TslGame.EBreathType
enum class EBreathType : uint8_t
{
	Apnea                          = 0,
	ADS                            = 1,
	EBreathType_MAX                = 2
};


// Enum TslGame.ERequestPartyState
enum class ERequestPartyState : uint8_t
{
	Wait                           = 0,
	Accept                         = 1,
	Decline                        = 2,
	ERequestPartyState_MAX         = 3
};


// Enum TslGame.EBlueBlockerState
enum class EBlueBlockerState : uint8_t
{
	Show                           = 0,
	Looping                        = 1,
	Hide                           = 2,
	Hidden                         = 3,
	EBlueBlockerState_MAX          = 4
};


// Enum TslGame.ETargetingType
enum class ETargetingType : uint8_t
{
	Targeting_None                 = 0,
	Targeting_Aiming               = 1,
	Targeting_Scoping              = 2,
	Targeting_MAX                  = 3
};


// Enum TslGame.EWeaponAttachmentSlotID
enum class EWeaponAttachmentSlotID : uint8_t
{
	None                           = 0,
	Muzzle                         = 1,
	LowerRail                      = 2,
	UpperRail                      = 3,
	Magazine                       = 4,
	Stock                          = 5,
	Angled                         = 6,
	EWeaponAttachmentSlotID_MAX    = 7
};


// Enum TslGame.ETslOvercastAction
enum class ETslOvercastAction : uint8_t
{
	Initialized                    = 0,
	Prolonged                      = 1,
	CreateThunder                  = 2,
	ETslOvercastAction_MAX         = 3
};


// Enum TslGame.EServerStatType
enum class EServerStatType : uint8_t
{
	UE                             = 0,
	NET                            = 1,
	EServerStatType_MAX            = 2
};


// Enum TslGame.EQualityType
enum class EQualityType : uint8_t
{
	EMainQuality                   = 0,
	EViewDistanceQuality           = 1,
	EShadowQuality                 = 2,
	EAntiAliasingQuality           = 3,
	ETextureQuality                = 4,
	EVisualEffectQuality           = 5,
	EPostProcessingQuality         = 6,
	EFoliageQuality                = 7,
	EQualityType_MAX               = 8
};


// Enum TslGame.EReadyToPlayState
enum class EReadyToPlayState : uint8_t
{
	AllFinished                    = 0,
	OnPreLoadMap                   = 1,
	OnPostLoadMap                  = 2,
	CheckMapLoadFinished           = 3,
	NotMapFullyLoaded              = 4,
	CheckPreloadingMap             = 5,
	EReadyToPlayState_MAX          = 6
};


// Enum TslGame.EDistanceBasedEvent
enum class EDistanceBasedEvent : uint8_t
{
	Weapon_Gun_Firing              = 0,
	Weapon_Grenade_Bounce          = 1,
	Weapon_Grenade_Explosion       = 2,
	Weapon_Grenade_ExplosionSound  = 3,
	Vehicle_Exhausting             = 4,
	Vehicle_Crash                  = 5,
	Character_FootStep             = 6,
	Character_Landing              = 7,
	MAX                            = 8,
	EDistanceBasedEvent_MAX        = 9
};


// Enum TslGame.EArenaState
enum class EArenaState : uint8_t
{
	Idle                           = 0,
	Active                         = 1,
	Finished                       = 2,
	EArenaState_MAX                = 3
};


// Enum TslGame.ERankType
enum class ERankType : uint8_t
{
	None                           = 0,
	InvalidSMS                     = 1,
	Penalty                        = 2,
	Restricted                     = 3,
	Unranked                       = 4,
	Bronze                         = 5,
	Silver                         = 6,
	Gold                           = 7,
	Platinum                       = 8,
	Diamond                        = 9,
	Master                         = 10,
	ERankType_MAX                  = 11
};


// Enum TslGame.ETirePunctureReason
enum class ETirePunctureReason : uint8_t
{
	Shot                           = 0,
	Environment                    = 1,
	Explosion                      = 2,
	PanzerFaustExplosion           = 3,
	Other                          = 4,
	ETirePunctureReason_MAX        = 5
};


// Enum TslGame.EThrownWeaponType
enum class EThrownWeaponType : uint8_t
{
	Thrown_Grenade                 = 0,
	Thrown_Molotov                 = 1,
	Thrown_Melee                   = 2,
	Thrown_Trap                    = 3,
	Thrown_StickyBomb              = 4,
	Thrown_C4                      = 5,
	Thrown_JerryCan                = 6,
	Thrown_BZ_Grenade              = 7,
	Thrown_Other                   = 8,
	Thrown_MAX                     = 9
};


// Enum TslGame.EHitDirection
enum class EHitDirection : uint8_t
{
	Hit_Front                      = 0,
	Hit_Back                       = 1,
	Hit_Left                       = 2,
	Hit_Right                      = 3,
	Hit_MAX                        = 4
};


// Enum TslGame.EPowerUpType
enum class EPowerUpType : uint8_t
{
	PowerUp_None                   = 0,
	Powerup_Bandage                = 1,
	PowerUp_FirstAid               = 2,
	Powerup_Medkit                 = 3,
	PowerUp_EnergyDrink            = 4,
	Powerup_Painkillers            = 5,
	PowerUp_Adrenaline             = 6,
	PowerUp_MAX                    = 7,
	EPowerUpType_MAX               = 8
};


// Enum TslGame.ECastAnim
enum class ECastAnim : uint8_t
{
	None                           = 0,
	Bandage                        = 1,
	FirstAid                       = 2,
	Medkit                         = 3,
	EnergyDrink                    = 4,
	Painkiller                     = 5,
	Adrenaline                     = 6,
	Door                           = 7,
	Battery                        = 8,
	Crafting                       = 9,
	SuperDrink                     = 10,
	Key                            = 11,
	ECastAnim_MAX                  = 12
};


// Enum TslGame.ECharacterNegativeEffects
enum class ECharacterNegativeEffects : uint8_t
{
	Blind                          = 0,
	Burning                        = 1,
	Total                          = 2,
	ECharacterNegativeEffects_MAX  = 3
};


// Enum TslGame.EEquipSlotID
enum class EEquipSlotID : uint8_t
{
	Head                           = 0,
	Hat                            = 1,
	Eyes                           = 2,
	Mask                           = 3,
	Torso                          = 4,
	TorsoArmor                     = 5,
	Outer                          = 6,
	Backpack                       = 7,
	Hands                          = 8,
	Legs                           = 9,
	Feet                           = 10,
	Belt                           = 11,
	WeaponPrimary                  = 12,
	WeaponSecondary                = 13,
	WeaponMelee                    = 14,
	WeaponThrowable                = 15,
	MaxOrNone                      = 16,
	EEquipSlotID_MAX               = 17
};


// Enum TslGame.ESubjectToReport
enum class ESubjectToReport : uint8_t
{
	None                           = 0,
	Killer                         = 1,
	Spectating_Player              = 2,
	Replay_Player                  = 3,
	Team_Member                    = 4,
	OtherTeam_Members              = 5,
	ESubjectToReport_MAX           = 6
};


// Enum TslGame.EWelcomeState
enum class EWelcomeState : uint8_t
{
	CopyrightAndWarning            = 0,
	PressAKey                      = 1,
	NowLoading                     = 2,
	EWelcomeState_MAX              = 3
};


// Enum TslGame.EFiremode
enum class EFiremode : uint8_t
{
	FullAuto                       = 0,
	ThreeRoundBurst                = 1,
	TwoRoundBurst                  = 2,
	SemiAuto                       = 3,
	Single                         = 4,
	FullAutoFast                   = 5,
	EFiremode_MAX                  = 6
};


// Enum TslGame.EConsoleHitDirections
enum class EConsoleHitDirections : uint8_t
{
	None                           = 0,
	Front_Right                    = 1,
	Front_Left                     = 2,
	Rear                           = 3,
	EConsoleHitDirections_MAX      = 4
};


// Enum TslGame.ERoundEndPointType
enum class ERoundEndPointType : uint8_t
{
	Empty                          = 0,
	Lost                           = 1,
	Won                            = 2,
	ERoundEndPointType_MAX         = 3
};


// Enum TslGame.EVehicleAIAvoidanceMode
enum class EVehicleAIAvoidanceMode : uint8_t
{
	Off                            = 0,
	SingleTrace                    = 1,
	MultiTrace                     = 2,
	EVehicleAIAvoidanceMode_MAX    = 3
};


// Enum TslGame.ESpawnType
enum class ESpawnType : uint8_t
{
	Single                         = 0,
	ContinuousOnTimer              = 1,
	ContinuousOnDeath              = 2,
	ESpawnType_MAX                 = 3
};


// Enum TslGame.TslAudioInterpolation
enum class ETslAudioInterpolation : uint8_t
{
	AudioInterpolation_Log3        = 0,
	AudioInterpolation_Sine        = 1,
	AudioInterpolation_Log1        = 2,
	AudioInterpolation_InvSCurve   = 3,
	AudioInterpolation_Linear      = 4,
	AudioInterpolation_SCurve      = 5,
	AudioInterpolation_Exp1        = 6,
	AudioInterpolation_SineRecip   = 7,
	AudioInterpolation_Exp3        = 8,
	AudioInterpolation_MAX         = 9
};


// Enum TslGame.eVehicleSpawnStatus
enum class EeVehicleSpawnStatus : uint8_t
{
	SpawnNone                      = 0,
	SpawnAlived                    = 1,
	SpawnDestroyed                 = 2,
	eVehicleSpawnStatus_MAX        = 3
};


// Enum TslGame.ESurfaceEffect
enum class ESurfaceEffect : uint8_t
{
	S_None                         = 0,
	S_Concrete_Roll                = 1,
	S_Concrete_Skid                = 2,
	S_Concrete_Spin                = 3,
	S_Dirt_Roll                    = 4,
	S_Dirt_Skid                    = 5,
	S_Dirt_Spin                    = 6,
	S_Water_Roll                   = 7,
	S_Water_Skid                   = 8,
	S_Water_Spin                   = 9,
	S_Metal_Roll                   = 10,
	S_Metal_Skid                   = 11,
	S_Metal_Spin                   = 12,
	S_Wood_Roll                    = 13,
	S_Wood_Skid                    = 14,
	S_Wood_Spin                    = 15,
	S_Rock_Roll                    = 16,
	S_Rock_Skid                    = 17,
	S_Rock_Spin                    = 18,
	S_Grass_Roll                   = 19,
	S_Grass_Skid                   = 20,
	S_Grass_Spin                   = 21,
	S_Sand_Roll                    = 22,
	S_Sand_Skid                    = 23,
	S_Sand_Spin                    = 24,
	S_Concrete_Brake               = 25,
	S_Dirt_Brake                   = 26,
	S_Water_Brake                  = 27,
	S_Metal_Brake                  = 28,
	S_Wood_Brake                   = 29,
	S_Rock_Brake                   = 30,
	S_Grass_Brake                  = 31,
	S_Sand_Brake                   = 32,
	S_Snow_Brake                   = 33,
	S_SnowRock_Brake               = 34,
	S_Ice_Brake                    = 35,
	S_Common_BrakeDisc             = 36,
	S_Concrete_Punctured_Roll      = 37,
	S_Concrete_Punctured_Skid      = 38,
	S_Concrete_Punctured_Spin      = 39,
	S_Concrete_Punctured_Brake     = 40,
	S_Snow_Roll                    = 41,
	S_Snow_Skid                    = 42,
	S_Snow_Spin                    = 43,
	S_SnowRock_Roll                = 44,
	S_SnowRock_Skid                = 45,
	S_SnowRock_Spin                = 46,
	S_Ice_Roll                     = 47,
	S_Ice_Skid                     = 48,
	S_Ice_Spin                     = 49,
	S_Mud_Roll                     = 50,
	S_Mud_Skid                     = 51,
	S_Mud_Spin                     = 52,
	S_Mud_Brake                    = 53,
	S_Common_Neutral               = 54,
	S_MAX                          = 55
};


// Enum TslGame.EWeaponDisplayZoomState
enum class EWeaponDisplayZoomState : uint8_t
{
	ZoomState_Default              = 0,
	ZoomState_Charm                = 1,
	ZoomState_MAX                  = 2
};


// Enum TslGame.EBlendSequenceByBoolStartType
enum class EBlendSequenceByBoolStartType : uint8_t
{
	Restart                        = 0,
	SameTime                       = 1,
	EBlendSequenceByBoolStartType_MAX = 2
};


// Enum TslGame.EJumpStartAnimationType
enum class EJumpStartAnimationType : uint8_t
{
	Stationary                     = 0,
	Forward                        = 1,
	Backward                       = 2,
	EJumpStartAnimationType_MAX    = 3
};


// Enum TslGame.ETslLocomotionNodeState
enum class ETslLocomotionNodeState : uint8_t
{
	Idle                           = 0,
	Locomotion                     = 1,
	Start                          = 2,
	Stop_Left                      = 3,
	Stop_Right                     = 4,
	Pivot_Left                     = 5,
	Pivot_Right                    = 6,
	FastTurn_Pivot                 = 7,
	ETslLocomotionNodeState_MAX    = 8
};


// Enum TslGame.ETslLocomotionStateChangeType
enum class ETslLocomotionStateChangeType : uint8_t
{
	None                           = 0,
	Blending                       = 1,
	NoBlending                     = 2,
	BlendingSameTime               = 3,
	ETslLocomotionStateChangeType_MAX = 4
};


// Enum TslGame.FPlaySequenceFromAnimDBMapAnimType
enum class EFPlaySequenceFromAnimDBMapAnimType : uint8_t
{
	Base                           = 0,
	Transition                     = 1,
	TransitionStance               = 2,
	FPlaySequenceFromAnimDBMapAnimType_MAX = 3
};


// Enum TslGame.ERotateBoneInputType
enum class ERotateBoneInputType : uint8_t
{
	Rotator                        = 0,
	AngleAxis                      = 1,
	ERotateBoneInputType_MAX       = 2
};


// Enum TslGame.ERotateBoneSpace
enum class ERotateBoneSpace : uint8_t
{
	BoneSpace                      = 0,
	LocalSpace                     = 1,
	WorldSpace                     = 2,
	ERotateBoneSpace_MAX           = 3
};


// Enum TslGame.EPreoccupiedTeamType
enum class EPreoccupiedTeamType : uint8_t
{
	NEUTRAL                        = 0,
	RED                            = 1,
	BLUE                           = 2,
	EPreoccupiedTeamType_MAX       = 3
};


// Enum TslGame.ECaptureState
enum class ECaptureState : uint8_t
{
	ENeutural                      = 0,
	EConfusion                     = 1,
	ECaptured                      = 2,
	ECaptureState_MAX              = 3
};


// Enum TslGame.EPopupStyle
enum class EPopupStyle : uint8_t
{
	Ok_Cancel                      = 0,
	Ok                             = 1,
	Yes_No                         = 2,
	Controller_KeyboardMouse       = 3,
	EPopupStyle_MAX                = 4
};


// Enum TslGame.EDualMatchingState
enum class EDualMatchingState : uint8_t
{
	NotMatchingState               = 0,
	Matching                       = 1,
	GamePrepared                   = 2,
	EDualMatchingState_MAX         = 3
};


// Enum TslGame.ELastTeamIconState
enum class ELastTeamIconState : uint8_t
{
	Normal                         = 0,
	Groggy                         = 1,
	Die                            = 2,
	ELastTeamIconState_MAX         = 3
};


// Enum TslGame.ESeatState
enum class ESeatState : uint8_t
{
	Empty                          = 0,
	Player                         = 1,
	Teammate                       = 2,
	Enemy                          = 3,
	ESeatState_MAX                 = 4
};


// Enum TslGame.ETslInputDeviceTypeBranch_BPOnly
enum class ETslInputDeviceTypeBranch_BPOnly : uint8_t
{
	KeyboardMouse                  = 0,
	XboxGamepad                    = 1,
	PS4Gamepad                     = 2,
	SwitchGamepad                  = 3,
	QuailGamepad                   = 4,
	ETslInputDeviceTypeBranch_MAX  = 5
};


// Enum TslGame.ETslInputDeviceGroupBranch_BPOnly
enum class ETslInputDeviceGroupBranch_BPOnly : uint8_t
{
	KeyboardMouse                  = 0,
	Gamepad                        = 1,
	ETslInputDeviceGroupBranch_MAX = 2
};


// Enum TslGame.ETslPlatformTypeBranch_BPOnly
enum class ETslPlatformTypeBranch_BPOnly : uint8_t
{
	PC                             = 0,
	Xbox                           = 1,
	PS4                            = 2,
	Quail                          = 3,
	Invalid                        = 4,
	ETslPlatformTypeBranch_MAX     = 5
};


// Enum TslGame.ETslPlatformGroupBranch_BPOnly
enum class ETslPlatformGroupBranch_BPOnly : uint8_t
{
	PC                             = 0,
	Console                        = 1,
	ETslPlatformGroupBranch_MAX    = 2
};


// Enum TslGame.EBuffPropertyType
enum class EBuffPropertyType : uint8_t
{
	CoolTime                       = 0,
	MeleeDamageRatio               = 1,
	OtherDamageRatio               = 2,
	GetBoostOnDeal                 = 3,
	MovementSpeedModifier          = 4,
	JumpVelocityModifier           = 5,
	MaxHpModifier                  = 6,
	DecreaseRevivalCastTime        = 7,
	ReloadingSpeedModifier         = 8,
	EBuffPropertyType_MAX          = 9
};


// Enum TslGame.EAutoSpectatePriority
enum class EAutoSpectatePriority : uint8_t
{
	None                           = 0,
	Vehicle                        = 1,
	Distance                       = 2,
	Combat                         = 3,
	EAutoSpectatePriority_MAX      = 4
};


// Enum TslGame.EFBRClass
enum class EFBRClass : uint8_t
{
	WARRIOR                        = 0,
	RANGER                         = 1,
	WIZARD                         = 2,
	PALADIN                        = 3,
	EFBRClass_MAX                  = 4
};


// Enum TslGame.EPartnerLevel
enum class EPartnerLevel : uint8_t
{
	None                           = 0,
	Normal                         = 1,
	Lead                           = 2,
	EPartnerLevel_MAX              = 3
};


// Enum TslGame.EObserverHudAnimType
enum class EObserverHudAnimType : uint8_t
{
	TeamWipeOutAnim                = 0,
	PersonalKillingSpreeAnim       = 1,
	TeamTotalKillingSpreeAnim      = 2,
	EObserverHudAnimType_MAX       = 3
};


// Enum TslGame.EPreviewPlatformIconType
enum class EPreviewPlatformIconType : uint8_t
{
	XboxOne                        = 0,
	PS4                            = 1,
	Switch                         = 2,
	Quail                          = 3,
	None                           = 4,
	EPreviewPlatformIconType_MAX   = 5
};


// Enum TslGame.EMovementBaseType
enum class EMovementBaseType : uint8_t
{
	None                           = 0,
	Train                          = 1,
	Ship                           = 2,
	COUNT                          = 3,
	EMovementBaseType_MAX          = 4
};


// Enum TslGame.EBlueZoneShape
enum class EBlueZoneShape : uint8_t
{
	None                           = 0,
	Circle                         = 1,
	Rectangle                      = 2,
	EBlueZoneShape_MAX             = 3
};


// Enum TslGame.ERespawnType
enum class ERespawnType : uint8_t
{
	Airborne                       = 0,
	DeadPoint                      = 1,
	StartPoint                     = 2,
	Selectable                     = 3,
	RandomPoint                    = 4,
	ERespawnType_MAX               = 5
};


// Enum TslGame.EPlatoonTeam
enum class EPlatoonTeam : uint8_t
{
	None                           = 0,
	Blue                           = 1,
	Red                            = 2,
	EPlatoonTeam_MAX               = 3
};


// Enum TslGame.EAutoRecoveryType
enum class EAutoRecoveryType : uint8_t
{
	None                           = 0,
	Human                          = 1,
	Zombie                         = 2,
	HumanAndZombie                 = 3,
	EAutoRecoveryType_MAX          = 4
};


// Enum TslGame.EZombieVirusType
enum class EZombieVirusType : uint8_t
{
	None                           = 0,
	Attacked                       = 1,
	All                            = 2,
	EZombieVirusType_MAX           = 3
};


// Enum TslGame.ERadioMessageInteractionType
enum class ERadioMessageInteractionType : uint8_t
{
	DroppedItem                    = 0,
	Vehicle                        = 1,
	CarepackageOrDeadbox           = 2,
	ERadioMessageInteractionType_MAX = 3
};


// Enum TslGame.ERadioMessageCategory
enum class ERadioMessageCategory : uint8_t
{
	Affirmative                    = 0,
	ThankYou                       = 1,
	NeedMed                        = 2,
	Negative                       = 3,
	Sorry                          = 4,
	NeedAmmo                       = 5,
	EnemySpotted                   = 6,
	ItemSpotted                    = 7,
	Ping                           = 8,
	HelpMe                         = 9,
	WayPoint                       = 10,
	Max                            = 11,
	ERadioMessageCategory_MAX      = 12
};


// Enum TslGame.EEquippedWeaponRTPC
enum class EEquippedWeaponRTPC : uint8_t
{
	None                           = 0,
	HandBomb_Bottle                = 1,
	HandBomb_Metal                 = 2,
	Melee                          = 3,
	Pistol                         = 4,
	SMG                            = 5,
	AR                             = 6,
	SR                             = 7,
	Max                            = 8,
	EEquippedWeaponRTPC_MAX        = 9
};


// Enum TslGame.EForceRefreshDummy
enum class EForceRefreshDummy : uint8_t
{
	Refresh1                       = 0,
	Refresh2                       = 1,
	EForceRefreshDummy_MAX         = 2
};


// Enum TslGame.EViewModeActorCenterPosition
enum class EViewModeActorCenterPosition : uint8_t
{
	None                           = 0,
	Center                         = 1,
	Bottom                         = 2,
	EViewModeActorCenterPosition_MAX = 3
};


// Enum TslGame.EViewModeCategory
enum class EViewModeCategory : uint8_t
{
	None                           = 0,
	Weapon                         = 1,
	Parachute                      = 2,
	Character                      = 3,
	Vehicle                        = 4,
	FloatingVehicle                = 5,
	EViewModeCategory_MAX          = 6
};


// Enum TslGame.ESystemMenuButtonType
enum class ESystemMenuButtonType : uint8_t
{
	RESUME                         = 0,
	SETTINGS                       = 1,
	TEAM_MANAGEMENT                = 2,
	KEY_GUIDE                      = 3,
	RESTART_LOBBY                  = 4,
	LEAVE_MATCH                    = 5,
	EXIT_TO_DESKTOP                = 6,
	GM_COMMAND_INGAME_HELPER       = 7,
	ESystemMenuButtonType_MAX      = 8
};


// Enum TslGame.ERankGuideType
enum class ERankGuideType : uint8_t
{
	ForElementaryRank              = 0,
	ForExpertRank                  = 1,
	ERankGuideType_MAX             = 2
};


// Enum TslGame.EUserRank
enum class EUserRank : uint8_t
{
	ElementaryRank                 = 0,
	IntermediateRank               = 1,
	HighRank                       = 2,
	ExpertRank                     = 3,
	EUserRank_MAX                  = 4
};


// Enum TslGame.EProjectileParticleClass
enum class EProjectileParticleClass : uint8_t
{
	PPC_None                       = 0,
	PPC_Frag                       = 1,
	PPC_Flash                      = 2,
	PPC_Smoke                      = 3,
	PPC_Molotov                    = 4,
	PPC_Other                      = 5,
	PPC_MAX                        = 6
};


// Enum TslGame.EReticleType
enum class EReticleType : uint8_t
{
	RedDot                         = 0,
	HoloSight                      = 1,
	Scope2x                        = 2,
	Scope3x                        = 3,
	Scope4x                        = 4,
	Scope6x                        = 5,
	Scope8x                        = 6,
	EReticleType_MAX               = 7
};


// Enum TslGame.EKeyHintType
enum class EKeyHintType : uint8_t
{
	Menu                           = 0,
	Parachuting                    = 1,
	Character                      = 2,
	Driver                         = 3,
	Rider                          = 4,
	WeaponUse                      = 5,
	WeaponChange                   = 6,
	ADS                            = 7,
	Aim                            = 8,
	ADS_8x15x                      = 9,
	ADS_6x                         = 10,
	ADS_1x2x3x                     = 11,
	ADS_CantedSight                = 12,
	ADS_IronSight                  = 13,
	Throwing                       = 14,
	Heal                           = 15,
	Swimming                       = 16,
	TeamSpectating                 = 17,
	KillerSpectating               = 18,
	WorldMap                       = 19,
	None                           = 20,
	FreefallNew                    = 21,
	ParachuteNew                   = 22,
	SpikeTrap                      = 23,
	MotorGlider                    = 24,
	JerryCan                       = 25,
	Melee                          = 26,
	MeleeThrowing                  = 27,
	ArenaModeHelpBox               = 28,
	Other                          = 29,
	EKeyHintType_MAX               = 30
};


// Enum TslGame.EInteractionPlatformType
enum class EInteractionPlatformType : uint8_t
{
	PC_FKey                        = 0,
	Console_X                      = 1,
	Console_B                      = 2,
	Console_XHold                  = 3,
	Console_BHold                  = 4,
	EInteractionPlatformType_MAX   = 5
};


// Enum TslGame.EObserverOutlineType
enum class EObserverOutlineType : uint8_t
{
	SpectatedCharacter             = 0,
	SpectatedCharacterTeam         = 1,
	SpectatedCharacterEnemy        = 2,
	WithoutSpectatedCharacter      = 3,
	WithoutSpectatedTeamCharacter  = 4,
	InteractionFocusingColor       = 5,
	SandboxOutline                 = 6,
	Invincible                     = 7,
	EObserverOutlineType_MAX       = 8
};


// Enum TslGame.EWeatherChange
enum class EWeatherChange : uint8_t
{
	NoChange                       = 0,
	Rainy                          = 1,
	Foggy                          = 2,
	EWeatherChange_MAX             = 3
};


// Enum TslGame.EMinimapColorType
enum class EMinimapColorType : uint8_t
{
	DESATURATED                    = 0,
	SATURATED                      = 1,
	EMinimapColorType_MAX          = 2
};


// Enum TslGame.EDamageZoneType
enum class EDamageZoneType : uint8_t
{
	Head                           = 0,
	Torso                          = 1,
	Arm                            = 2,
	Pelvis                         = 3,
	Leg                            = 4,
	EDamageZoneType_MAX            = 5
};


// Enum TslGame.ETslWidgetCreationMethod
enum class ETslWidgetCreationMethod : uint8_t
{
	CreateOnInit                   = 0,
	OnDemand                       = 1,
	OnDemandOnOnlyPC               = 2,
	OnDemandOnOnlyConsole          = 3,
	ETslWidgetCreationMethod_MAX   = 4
};


// Enum TslGame.ERedZoneGenerateType
enum class ERedZoneGenerateType : uint8_t
{
	None                           = 0,
	Uniform_Distribution           = 1,
	Ringtaw                        = 2,
	Outsider                       = 3,
	RingtawOrOutsider              = 4,
	ERedZoneGenerateType_MAX       = 5
};


// Enum TslGame.ETslHudType
enum class ETslHudType : uint8_t
{
	None                           = 0,
	CharacterHud                   = 1,
	SpectatorHud                   = 2,
	ObserverHud                    = 3,
	ReplayHud                      = 4,
	LeagueReplayHud                = 5,
	ETslHudType_MAX                = 6
};


// Enum TslGame.ETargetAnimDynamicsType
enum class ETargetAnimDynamicsType : uint8_t
{
	None                           = 0,
	Hair                           = 1,
	Coat                           = 2,
	ETargetAnimDynamicsType_MAX    = 3
};


// Enum TslGame.EAnimatableCustomizableTypes
enum class EAnimatableCustomizableTypes : uint8_t
{
	Hair                           = 0,
	Outer                          = 1,
	Legs                           = 2,
	Torso                          = 3,
	Head                           = 4,
	Mask                           = 5,
	Backpack                       = 6,
	Eyes                           = 7,
	TorsoArmor                     = 8,
	Hands                          = 9,
	Feet                           = 10,
	Belt                           = 11,
	Face                           = 12,
	EAnimatableCustomizableTypes_MAX = 13
};


// Enum TslGame.EGameEndState
enum class EGameEndState : uint8_t
{
	None                           = 0,
	CereMony                       = 1,
	Cinematic                      = 2,
	MatchFinish                    = 3,
	EGameEndState_MAX              = 4
};


// Enum TslGame.ELobbyBlurChangingStates
enum class ELobbyBlurChangingStates : uint8_t
{
	AlwaysOff                      = 0,
	AlwaysOn                       = 1,
	ELobbyBlurChangingStates_MAX   = 2
};


// Enum TslGame.ELobbyCameraStates
enum class ELobbyCameraStates : uint8_t
{
	XBox_Home                      = 0,
	Main                           = 1,
	Main01                         = 2,
	Menu                           = 3,
	Custom                         = 4,
	Custom01                       = 5,
	EventPass_Milestone            = 6,
	EventPass_Milestone01          = 7,
	EventPass_Missions             = 8,
	ViewMode_Character             = 9,
	ViewMode_Weapon                = 10,
	ViewMode_Parachute             = 11,
	EventPass_Milestone_0_Particle = 12,
	None                           = 13,
	ELobbyCameraStates_MAX         = 14
};


// Enum TslGame.EUiShowType
enum class EUiShowType : uint8_t
{
	AlwaysShow                     = 0,
	TpsOnlyShow                    = 1,
	FpsOnlyShow                    = 2,
	AlwaysHide                     = 3,
	EUiShowType_MAX                = 4
};


// Enum TslGame.ETslXpRewardLogicType
enum class ETslXpRewardLogicType : uint8_t
{
	None                           = 0,
	Public                         = 1,
	ETslXpRewardLogicType_MAX      = 2
};


// Enum TslGame.ETslBpRewardLogicType
enum class ETslBpRewardLogicType : uint8_t
{
	None                           = 0,
	Public                         = 1,
	ScoreBased                     = 2,
	ETslBpRewardLogicType_MAX      = 3
};


// Enum TslGame.EGamepadInputResponseForTapIconWidget
enum class EGamepadInputResponseForTapIconWidget : uint8_t
{
	None                           = 0,
	Hold                           = 1,
	DoubleTap                      = 2,
	EGamepadInputResponseForTapIconWidget_MAX = 3
};


// Enum TslGame.EActionType
enum class EActionType : uint8_t
{
	Action                         = 0,
	Axis                           = 1,
	Action_Combo                   = 2,
	EActionType_MAX                = 3
};


// Enum TslGame.EParachuteCutoffState
enum class EParachuteCutoffState : uint8_t
{
	Cutoff_None                    = 0,
	Cutoff_Manual                  = 1,
	Cutoff_Automatic               = 2,
	Cutoff_Ready                   = 3,
	Cutoff_MAX                     = 4
};


// Enum TslGame.EGamepadInputResponseTypes
enum class EGamepadInputResponseTypes : uint8_t
{
	Pressed                        = 0,
	Released                       = 1,
	Tap                            = 2,
	Hold                           = 3,
	DoubleTap                      = 4,
	EGamepadInputResponseTypes_MAX = 5
};


// Enum TslGame.EGamepadInputCombinationTypes
enum class EGamepadInputCombinationTypes : uint8_t
{
	Plus                           = 0,
	Slash                          = 1,
	EGamepadInputCombinationTypes_MAX = 2
};


// Enum TslGame.ERadioMessagePresets
enum class ERadioMessagePresets : uint8_t
{
	Preset1                        = 0,
	Preset2                        = 1,
	ERadioMessagePresets_MAX       = 2
};


// Enum TslGame.EGamepadPresets
enum class EGamepadPresets : uint8_t
{
	ControllerTypeA                = 0,
	ControllerTypeB                = 1,
	ControllerTypeC                = 2,
	CustomType                     = 3,
	Max                            = 4,
	EGamepadPresets_MAX            = 5
};


// Enum TslGame.EKeyGuideShowCases
enum class EKeyGuideShowCases : uint8_t
{
	Reload                         = 0,
	ExitVehicle                    = 1,
	EKeyGuideShowCases_MAX         = 2
};


// Enum TslGame.ETslInputModes
enum class ETslInputModes : uint8_t
{
	Toggle                         = 0,
	Hold                           = 1,
	DoubleTap                      = 2,
	ETslInputModes_MAX             = 3
};


// Enum TslGame.EGameplayClientReplay
enum class EGameplayClientReplay : uint8_t
{
	Replay                         = 0,
	Killcam                        = 1,
	KeyGuide                       = 2,
	EGameplayClientReplay_MAX      = 3
};


// Enum TslGame.EGameplayFunctionalities
enum class EGameplayFunctionalities : uint8_t
{
	FreeLookInterp                 = 0,
	EGameplayFunctionalities_MAX   = 1
};


// Enum TslGame.EInputModeSettingActions
enum class EInputModeSettingActions : uint8_t
{
	Crouch                         = 0,
	Prone                          = 1,
	Walk                           = 2,
	Sprint                         = 3,
	HoldRotation                   = 4,
	HoldBreath                     = 5,
	Peek                           = 6,
	Map                            = 7,
	ADS                            = 8,
	Aim                            = 9,
	HoldAngled                     = 10,
	EInputModeSettingActions_MAX   = 11
};


// Enum TslGame.EKeyBindingSlot
enum class EKeyBindingSlot : uint8_t
{
	FirstKey                       = 0,
	SecondKey                      = 1,
	EKeyBindingSlot_MAX            = 2
};


// Enum TslGame.EReportDetailCauseType
enum class EReportDetailCauseType : uint8_t
{
	AutoAim                        = 0,
	NoRecoil                       = 1,
	EspOrPenetration               = 2,
	Speedhack                      = 3,
	EReportDetailCauseType_MAX     = 4
};


// Enum TslGame.EReportedSessionType
enum class EReportedSessionType : uint8_t
{
	PublicOrCustomGame             = 0,
	Killcam                        = 1,
	Replay                         = 2,
	EReportedSessionType_MAX       = 3
};


// Enum TslGame.EReportCause
enum class EReportCause : uint8_t
{
	Default                        = 0,
	Cheat                          = 1,
	TeamKill                       = 2,
	Teaming                        = 3,
	InappropriateID                = 4,
	VerbalHarassment               = 5,
	Griefing                       = 6,
	EReportCause_MAX               = 7
};


// Enum TslGame.ItemPackageType
enum class EItemPackageType : uint8_t
{
	RootBox                        = 0,
	CarePackage                    = 1,
	DroppedPackage                 = 2,
	DroppedEventPackage            = 3,
	ItemPackageType_MAX            = 4
};


// Enum TslGame.ECarePackageIconType
enum class ECarePackageIconType : uint8_t
{
	Normal                         = 0,
	Flying                         = 1,
	Opened                         = 2,
	ECarePackageIconType_MAX       = 3
};


// Enum TslGame.ECharacterIconType
enum class ECharacterIconType : uint8_t
{
	Normal                         = 0,
	Vehicle                        = 1,
	Parachute                      = 2,
	Die                            = 3,
	Groggy                         = 4,
	Quitter                        = 5,
	Observer                       = 6,
	Aircraft                       = 7,
	ECharacterIconType_MAX         = 8
};


// Enum TslGame.EReportUiType
enum class EReportUiType : uint8_t
{
	Normal                         = 0,
	Respawn                        = 1,
	EReportUiType_MAX              = 2
};


// Enum TslGame.EZombieRuleType
enum class EZombieRuleType : uint8_t
{
	None                           = 0,
	BattleRoyale                   = 1,
	Survival                       = 2,
	Elimination                    = 3,
	EZombieRuleType_MAX            = 4
};


// Enum TslGame.EZombieModePlayerState
enum class EZombieModePlayerState : uint8_t
{
	None                           = 0,
	Human                          = 1,
	ReadyToRevive                  = 2,
	Zombie                         = 3,
	EZombieModePlayerState_MAX     = 4
};


// Enum TslGame.ETeamChangeZombieMode
enum class ETeamChangeZombieMode : uint8_t
{
	None                           = 0,
	LeaveTeam                      = 1,
	JoinTeam                       = 2,
	ETeamChangeZombieMode_MAX      = 3
};


// Enum TslGame.EFollowCameraMode
enum class EFollowCameraMode : uint8_t
{
	CharacterCamera                = 0,
	VehicleCamera                  = 1,
	AircraftCamera                 = 2,
	ParachutingCamera              = 3,
	FallingWithParachuteCamera     = 4,
	EFollowCameraMode_MAX          = 5
};


// Enum TslGame.EObserverCameraMode
enum class EObserverCameraMode : uint8_t
{
	FixedCamera                    = 0,
	FreeCamera                     = 1,
	PlayerCamera                   = 2,
	FollowCamera                   = 3,
	EObserverCameraMode_MAX        = 4
};


// Enum TslGame.EObserverAuthorityType
enum class EObserverAuthorityType : uint8_t
{
	None                           = 0,
	FromBeginning                  = 1,
	AfterDeath                     = 2,
	AfterExtermination             = 3,
	EagleEye                       = 4,
	EObserverAuthorityType_MAX     = 5
};


// Enum TslGame.EGameEndType
enum class EGameEndType : uint8_t
{
	RoundEnd                       = 0,
	MatchEnd                       = 1,
	EGameEndType_MAX               = 2
};


// Enum TslGame.EGameModeType
enum class EGameModeType : uint8_t
{
	BattleRoyale                   = 0,
	War                            = 1,
	TDM                            = 2,
	Zombie                         = 3,
	Conquest                       = 4,
	Training                       = 5,
	ESports                        = 6,
	Arena                          = 7,
	None                           = 8,
	EGameModeType_MAX              = 9
};


// Enum TslGame.EValueType
enum class EValueType : uint8_t
{
	Float                          = 0,
	Int                            = 1,
	String                         = 2,
	Bool                           = 3,
	EValueType_MAX                 = 4
};


// Enum TslGame.EPlatoonSupportRequestType
enum class EPlatoonSupportRequestType : uint8_t
{
	NoRequest                      = 0,
	FireSupportRequest             = 1,
	WeaponPackageRequest           = 2,
	HealingPackageRequest          = 3,
	EPlatoonSupportRequestType_MAX = 4
};


// Enum TslGame.ETeamVehicleType
enum class ETeamVehicleType : uint8_t
{
	Team_None                      = 0,
	Team_Vehicle                   = 1,
	Team_MAX                       = 2
};


// Enum TslGame.ENearClippingLevel
enum class ENearClippingLevel : uint8_t
{
	Default                        = 0,
	Low                            = 1,
	Middle                         = 2,
	High                           = 3,
	ENearClippingLevel_MAX         = 4
};


// Enum TslGame.EThingSpotGroupType
enum class EThingSpotGroupType : uint8_t
{
	GroupA                         = 0,
	GroupB                         = 1,
	GroupC                         = 2,
	GroupD                         = 3,
	GroupE                         = 4,
	GroupF                         = 5,
	GroupG                         = 6,
	GroupH                         = 7,
	GroupI                         = 8,
	GroupJ                         = 9,
	GroupK                         = 10,
	GroupL                         = 11,
	GroupM                         = 12,
	GroupN                         = 13,
	EThingSpotGroupType_MAX        = 14
};


// Enum TslGame.EPhysMaterialType
enum class EPhysMaterialType : uint8_t
{
	Unknown                        = 0,
	Asphalt                        = 1,
	Dirt                           = 2,
	Water                          = 3,
	Wood                           = 4,
	Stone                          = 5,
	Metal                          = 6,
	EPhysMaterialType_MAX          = 7
};


// Enum TslGame.EEquipableItemSoundType
enum class EEquipableItemSoundType : uint8_t
{
	None                           = 0,
	Vest                           = 1,
	LongCoat                       = 2,
	HipSack                        = 3,
	Cloth                          = 4,
	BackPack                       = 5,
	MilitaryShoes                  = 6,
	Sneakers                       = 7,
	EEquipableItemSoundType_MAX    = 8
};


// Enum TslGame.EEquipableItemSoundGroup
enum class EEquipableItemSoundGroup : uint8_t
{
	Default                        = 0,
	Shoes                          = 1,
	EEquipableItemSoundGroup_MAX   = 2
};


// Enum TslGame.EColorBlindType
enum class EColorBlindType : uint8_t
{
	Normal                         = 0,
	Deuteranopia                   = 1,
	Protanopia                     = 2,
	Tritanopia                     = 3,
	EColorBlindType_MAX            = 4
};


// Enum TslGame.EFrameRateLimitType
enum class EFrameRateLimitType : uint8_t
{
	Unlimited                      = 0,
	Fixed                          = 1,
	Fixed01                        = 2,
	Customizable                   = 3,
	DisplayBased                   = 4,
	EFrameRateLimitType_MAX        = 5
};


// Enum TslGame.ETslOutGameCloudRequestErrorType
enum class ETslOutGameCloudRequestErrorType : uint8_t
{
	Unknown                        = 0,
	InternalError                  = 1,
	ServerError                    = 2,
	RequestTimedOut                = 3,
	DataCorrupted                  = 4,
	CompressionFailed              = 5,
	DecompressionFailed            = 6,
	ETslOutGameCloudRequestErrorType_MAX = 7
};


// Enum TslGame.ETslOutGameCloudRequestType
enum class ETslOutGameCloudRequestType : uint8_t
{
	Invalid                        = 0,
	SaveToCloud                    = 1,
	LoadFromCloud                  = 2,
	ETslOutGameCloudRequestType_MAX = 3
};


// Enum TslGame.ETslPhysMaterialType
enum class ETslPhysMaterialType : uint8_t
{
	Unknown                        = 0,
	Concrete                       = 1,
	Dirt                           = 2,
	Water                          = 3,
	Metal                          = 4,
	Wood                           = 5,
	Grass                          = 6,
	Glass                          = 7,
	Flesh                          = 8,
	ETslPhysMaterialType_MAX       = 9
};


// Enum TslGame.EHoldButtonWidgetType
enum class EHoldButtonWidgetType : uint8_t
{
	EHoldButtonWidgetType_X        = 0,
	EHoldButtonWidgetType_Y        = 1,
	EHoldButtonWidgetType_A        = 2,
	EHoldButtonWidgetType_B        = 3,
	EHoldButtonWidgetType_MAX      = 4
};


// Enum TslGame.EPlayerArenaObserverState
enum class EPlayerArenaObserverState : uint8_t
{
	Off                            = 0,
	RoundPreview                   = 1,
	FinalRoundPreview              = 2,
	WonAlive                       = 3,
	WonDead                        = 4,
	RoundFinished                  = 5,
	RoundFinishedWhileLoot         = 6,
	RoundResultWithObserve         = 7,
	RoundResult                    = 8,
	Eliminated                     = 9,
	AfterRoundLoadout              = 10,
	EPlayerArenaObserverState_MAX  = 11
};


// Enum TslGame.EArenaMoneySource
enum class EArenaMoneySource : uint8_t
{
	Initial                        = 0,
	Kill                           = 1,
	Revive                         = 2,
	WinArena                       = 3,
	LoseArena                      = 4,
	Buy                            = 5,
	EArenaMoneySource_MAX          = 6
};


// Enum TslGame.EArenaScreenOpen
enum class EArenaScreenOpen : uint8_t
{
	Loadout                        = 0,
	Leaderboard                    = 1,
	EArenaScreenOpen_MAX           = 2
};


// Enum TslGame.EArenaCameraObserveState
enum class EArenaCameraObserveState : uint8_t
{
	Off                            = 0,
	FreeFly                        = 1,
	AttachedToPlayer               = 2,
	EArenaCameraObserveState_MAX   = 3
};


// Enum TslGame.ELoadoutNotificationMessageType
enum class ELoadoutNotificationMessageType : uint8_t
{
	PURCHASEDMSG                   = 0,
	NOTENOUGHSPACEMSG              = 1,
	ALREADYHAVEMSG                 = 2,
	ATTACHMENTSININVENTORYMSG      = 3,
	ATTACHMENTSDISCARDEDMSG        = 4,
	ATTACHMENTSDROPPEDMSG          = 5,
	NOTENOUGHMONEYMSG              = 6,
	LOOTRESTRICTIONMSG             = 7,
	ELoadoutNotificationMessageType_MAX = 8
};


// Enum TslGame.EStrictSelectObserveTarget
enum class EStrictSelectObserveTarget : uint8_t
{
	None                           = 0,
	Arena                          = 1,
	Player                         = 2,
	EStrictSelectObserveTarget_MAX = 3
};


// Enum TslGame.ECustomDamageEventReactionType
enum class ECustomDamageEventReactionType : uint8_t
{
	SpawnActor                     = 0,
	StopSpawnedParticles           = 1,
	HideMesh                       = 2,
	HideMeshInstance               = 3,
	HideBone                       = 4,
	ApplyPhysicalAnimationProfile  = 5,
	SetCollisionEnabled            = 6,
	ECustomDamageEventReactionType_MAX = 7
};


// Enum TslGame.ECustomDamageEventTriggerType
enum class ECustomDamageEventTriggerType : uint8_t
{
	OnPassedDamageThreshold        = 0,
	OnAnyDamage                    = 1,
	ECustomDamageEventTriggerType_MAX = 2
};


// Enum TslGame.EScmCollisionGroup
enum class EScmCollisionGroup : uint8_t
{
	Default                        = 0,
	FireField                      = 1,
	ExplosiveItem                  = 2,
	EScmCollisionGroup_MAX         = 3
};


// Enum TslGame.EDamageFieldType
enum class EDamageFieldType : uint8_t
{
	Default                        = 0,
	DirectTick                     = 1,
	EDamageFieldType_MAX           = 2
};


// Enum TslGame.EDynamicWeather
enum class EDynamicWeather : uint8_t
{
	NotInitialized                 = 0,
	Initialized                    = 1,
	BlendInStarted                 = 2,
	Saturated                      = 3,
	BlendOutStarted                = 4,
	BlendOutEnded                  = 5,
	Finished                       = 6,
	EDynamicWeather_MAX            = 7
};


// Enum TslGame.EEffectSpreadState
enum class EEffectSpreadState : uint8_t
{
	ESS_InitialTrace               = 0,
	ESS_InitialProcess             = 1,
	ESS_Spreading                  = 2,
	ESS_SpreadDone                 = 3,
	ESS_Ending                     = 4,
	ESS_MAX                        = 5
};


// Enum TslGame.EEmoteAnimType
enum class EEmoteAnimType : uint8_t
{
	EmoteFullBody                  = 0,
	EmoteUpperBody                 = 1,
	EmoteArm                       = 2,
	EEmoteAnimType_MAX             = 3
};


// Enum TslGame.EBuffCountType
enum class EBuffCountType : uint8_t
{
	HideCount                      = 0,
	ItemCount                      = 1,
	AmmoCount                      = 2,
	EBuffCountType_MAX             = 3
};


// Enum TslGame.ETslFenceSelector
enum class ETslFenceSelector : uint8_t
{
	None                           = 0,
	Use                            = 1,
	Use01                          = 2,
	Use02                          = 3,
	Use03                          = 4,
	ETslFenceSelector_MAX          = 5
};


// Enum TslGame.EReactionObjectType
enum class EReactionObjectType : uint8_t
{
	Fence                          = 0,
	Hay                            = 1,
	Camera                         = 2,
	EReactionObjectType_MAX        = 3
};


// Enum TslGame.EReactionType
enum class EReactionType : uint8_t
{
	Reaciton_None                  = 0,
	Reaction_Physics               = 1,
	Reaction_Destructible          = 2,
	EReactionType_MAX              = 3
};


// Enum TslGame.EWarModeCarePackageKitType
enum class EWarModeCarePackageKitType : uint8_t
{
	CarepackageKit_Off             = 0,
	CarepackageKit_Basic           = 1,
	CarepackageKit_ARKit           = 2,
	CarepackageKit_SRKit           = 3,
	CarepackageKit_MAX             = 4
};


// Enum TslGame.EOptionTab
enum class EOptionTab : uint8_t
{
	Graphics                       = 0,
	Audio                          = 1,
	Controls                       = 2,
	Gameplay                       = 3,
	KeyBindings                    = 4,
	EOptionTab_MAX                 = 5
};


// Enum TslGame.ETslGameOptionKeyBindingType
enum class ETslGameOptionKeyBindingType : uint8_t
{
	None                           = 0,
	Action                         = 1,
	Axis                           = 2,
	ETslGameOptionKeyBindingType_MAX = 3
};


// Enum TslGame.ETslGameOptionSupplementaryType
enum class ETslGameOptionSupplementaryType : uint8_t
{
	None                           = 0,
	KeyboardLayout                 = 1,
	PreviewImage                   = 2,
	PreviewCrosshair               = 3,
	VolumeUnitMeter                = 4,
	PreviewMaterial                = 5,
	ETslGameOptionSupplementaryType_MAX = 6
};


// Enum TslGame.ENaviGamepadInputType
enum class ENaviGamepadInputType : uint8_t
{
	DPad_Pressed                   = 0,
	DPad_Released                  = 1,
	Axis                           = 2,
	Axis_Hold                      = 3,
	ENaviGamepadInputType_MAX      = 4
};


// Enum TslGame.ETslGMCommandInGameHelperButtonType
enum class ETslGMCommandInGameHelperButtonType : uint8_t
{
	NO_PARAM                       = 0,
	ONE_PARAM                      = 1,
	ETslGMCommandInGameHelperButtonType_MAX = 2
};


// Enum TslGame.EVendingMachineState
enum class EVendingMachineState : uint8_t
{
	ACTIVATED                      = 0,
	DEACTIVATED_TEMPORARILY_BY_PICK_DELAY = 1,
	DEACTIVATED_TEMPORARILY_BY_DAMAGE = 2,
	DEACTIVATED_TEMPORARILY_BY_JACKPOT = 3,
	DEACTIVATED_PERMANANTLY_BY_EXCEEDED_MAX_PICK_COUNT = 4,
	EVendingMachineState_MAX       = 5
};


// Enum TslGame.EOutGameMontageState
enum class EOutGameMontageState : uint8_t
{
	Default                        = 0,
	Playing                        = 1,
	Interrupted                    = 2,
	Finished                       = 3,
	EOutGameMontageState_MAX       = 4
};


// Enum TslGame.EItemRequestType
enum class EItemRequestType : uint8_t
{
	None                           = 0,
	Heal                           = 1,
	Ammo                           = 2,
	EItemRequestType_MAX           = 3
};


// Enum TslGame.JukeBoxAnimState
enum class EJukeBoxAnimState : uint8_t
{
	OPEN                           = 0,
	CLOSED                         = 1,
	JukeBoxAnimState_MAX           = 2
};


// Enum TslGame.ELivingThingThreatLevel
enum class ELivingThingThreatLevel : uint8_t
{
	NoChanged                      = 0,
	IncrementThreatLevel           = 1,
	DecrementThreatLevel           = 2,
	Calm                           = 3,
	Fear                           = 4,
	Panic                          = 5,
	Dead                           = 6,
	MAX                            = 7,
	ELivingThingThreatLevel_MAX    = 8
};


// Enum TslGame.ELivingThingCustomEvent
enum class ELivingThingCustomEvent : uint8_t
{
	DeadByBullet                   = 0,
	DeadByExplosion                = 1,
	HittedByCar                    = 2,
	Custom1                        = 3,
	Custom2                        = 4,
	Custom3                        = 5,
	Custom4                        = 6,
	Custom5                        = 7,
	Custom6                        = 8,
	Custom7                        = 9,
	Custom8                        = 10,
	Custom9                        = 11,
	Custom10                       = 12,
	Custom11                       = 13,
	Custom12                       = 14,
	Custom13                       = 15,
	Custom14                       = 16,
	Custom15                       = 17,
	Custom16                       = 18,
	Custom17                       = 19,
	Custom18                       = 20,
	Custom19                       = 21,
	Custom20                       = 22,
	MAX                            = 23,
	ELivingThingCustomEvent_MAX    = 24
};


// Enum TslGame.ELobbyCharacterPosition
enum class ELobbyCharacterPosition : uint8_t
{
	Position1                      = 0,
	Position2                      = 1,
	Position3                      = 2,
	Position4                      = 3,
	ELobbyCharacterPosition_MAX    = 4
};


// Enum TslGame.ELobbyCharacterReadyType
enum class ELobbyCharacterReadyType : uint8_t
{
	Ready                          = 0,
	NotReady                       = 1,
	ReadyToNotReady                = 2,
	NotReadyToReady                = 3,
	ELobbyCharacterReadyType_MAX   = 4
};


// Enum TslGame.EObserverPlayerListType
enum class EObserverPlayerListType : uint8_t
{
	Distance                       = 0,
	Kill                           = 1,
	Survivor                       = 2,
	Score                          = 3,
	Max                            = 4,
	EObserverPlayerListType_MAX    = 5
};


// Enum TslGame.ETslParticleCullType
enum class ETslParticleCullType : uint8_t
{
	None                           = 0,
	Distance                       = 1,
	Frustum                        = 2,
	LastRenderedTime               = 3,
	SameTransform                  = 4,
	NearbyTransform                = 5,
	DistAndFrustumAndNear          = 6,
	All                            = 7,
	ETslParticleCullType_MAX       = 8
};


// Enum TslGame.ETslParticleGroupPriority
enum class ETslParticleGroupPriority : uint8_t
{
	High                           = 0,
	Low                            = 1,
	ETslParticleGroupPriority_MAX  = 2
};


// Enum TslGame.ECustomDamageZoneType
enum class ECustomDamageZoneType : uint8_t
{
	Head                           = 0,
	UpperBody                      = 1,
	LowerBody                      = 2,
	Arms                           = 3,
	Legs                           = 4,
	ECustomDamageZoneType_MAX      = 5
};


// Enum TslGame.ECustomDamageWeaponClass
enum class ECustomDamageWeaponClass : uint8_t
{
	Bullet                         = 0,
	Melee                          = 1,
	ECustomDamageWeaponClass_MAX   = 2
};


// Enum TslGame.EArenaStartType
enum class EArenaStartType : uint8_t
{
	Player                         = 0,
	AircraftStart                  = 1,
	AircraftEnd                    = 2,
	EArenaStartType_MAX            = 3
};


// Enum TslGame.EMolotovSimulationType
enum class EMolotovSimulationType : uint8_t
{
	Molotov_SimulationImpact       = 0,
	Molotov_SimulationProjectile   = 1,
	Molotov_SimulationFragment     = 2,
	Molotov_SimulationVolumetric   = 3,
	Molotov_MAX                    = 4
};


// Enum TslGame.ESpikeDeploymentState
enum class ESpikeDeploymentState : uint8_t
{
	PreDeploy                      = 0,
	Deploying                      = 1,
	PostDeploy                     = 2,
	Popped                         = 3,
	Idle                           = 4,
	ESpikeDeploymentState_MAX      = 5
};


// Enum TslGame.EWarheadExplodedState
enum class EWarheadExplodedState : uint8_t
{
	NotExploded                    = 0,
	Exploded                       = 1,
	EWarheadExplodedState_MAX      = 2
};


// Enum TslGame.ETslReferenceObjType
enum class ETslReferenceObjType : uint8_t
{
	GameMode                       = 0,
	Character                      = 1,
	Preload                        = 2,
	ETslReferenceObjType_MAX       = 3
};


// Enum TslGame.EReplayTimelineMode
enum class EReplayTimelineMode : uint8_t
{
	ReplayPlay                     = 0,
	ReplayEditor                   = 1,
	ReplayRender                   = 2,
	EReplayTimelineMode_MAX        = 3
};


// Enum TslGame.ETrainHeadingDir
enum class ETrainHeadingDir : uint8_t
{
	XPositive                      = 0,
	XNegative                      = 1,
	YPositive                      = 2,
	YNegative                      = 3,
	ETrainHeadingDir_MAX           = 4
};


// Enum TslGame.ESwitcherHideWhen
enum class ESwitcherHideWhen : uint8_t
{
	UsingKeyboardMouse             = 0,
	UsingGamepad                   = 1,
	ESwitcherHideWhen_MAX          = 2
};


// Enum TslGame.ENoReloadGuideType
enum class ENoReloadGuideType : uint8_t
{
	Alwyas                         = 0,
	WhenCurrentWeapon              = 1,
	ENoReloadGuideType_MAX         = 2
};


// Enum TslGame.EMeleeThrowState
enum class EMeleeThrowState : uint8_t
{
	Idle                           = 0,
	Prepare                        = 1,
	Throw                          = 2,
	EMeleeThrowState_MAX           = 3
};


// Enum TslGame.EHitCheckType
enum class EHitCheckType : uint8_t
{
	HitCheck_Once                  = 0,
	HitCheck_Multi                 = 1,
	HitCheck_MAX                   = 2
};


// Enum TslGame.EWeaponTransitionState
enum class EWeaponTransitionState : uint8_t
{
	Stable                         = 0,
	Arming                         = 1,
	UnArming                       = 2,
	EWeaponTransitionState_MAX     = 3
};


// Enum TslGame.EMinimapFocus
enum class EMinimapFocus : uint8_t
{
	CharacterFocus                 = 0,
	NextPlayzoneFocus              = 1,
	None                           = 2,
	EMinimapFocus_MAX              = 3
};


// Enum TslGame.ETslArenaLoadoutItemCategory
enum class ETslArenaLoadoutItemCategory : uint8_t
{
	Pistol                         = 0,
	Shotgun                        = 1,
	Smg                            = 2,
	Ar                             = 3,
	Dmr                            = 4,
	Sr                             = 5,
	Equipment                      = 6,
	ETslArenaLoadoutItemCategory_MAX = 7
};


// Enum TslGame.ETslArenaLoadoutDirections
enum class ETslArenaLoadoutDirections : uint8_t
{
	Up                             = 0,
	Right                          = 1,
	Down                           = 2,
	Left                           = 3,
	ETslArenaLoadoutDirections_MAX = 4
};


// Enum TslGame.EConditionOfDeath
enum class EConditionOfDeath : uint8_t
{
	HeadShot                       = 0,
	DBNO                           = 1,
	DBNOByHeadShot                 = 2,
	None                           = 3,
	EConditionOfDeath_MAX          = 4
};


// Enum TslGame.EControllerImageType
enum class EControllerImageType : uint8_t
{
	XboxOne                        = 0,
	PS4                            = 1,
	Quail                          = 2,
	Quail_ThirdParty               = 3,
	None                           = 4,
	EControllerImageType_MAX       = 5
};


// Enum TslGame.EBinaryStepperType
enum class EBinaryStepperType : uint8_t
{
	OFF                            = 0,
	ON                             = 1,
	EBinaryStepperType_MAX         = 2
};


// Enum TslGame.ETslWheelWidgetMouseCursorDirectionType
enum class ETslWheelWidgetMouseCursorDirectionType : uint8_t
{
	ABSOLUTE_COORD                 = 0,
	AREA_RESTRICTED_COORD          = 1,
	CIRCULAR_RESTRICTED_COORD      = 2,
	ETslWheelWidgetMouseCursorDirectionType_MAX = 3
};


// Enum TslGame.ETslWheelWidgetSelectType
enum class ETslWheelWidgetSelectType : uint8_t
{
	BY_CLICK                       = 0,
	BY_RELEASE                     = 1,
	BY_MAX                         = 2
};


// Enum TslGame.EBluezoneState
enum class EBluezoneState : uint8_t
{
	None                           = 0,
	Wait                           = 1,
	Release                        = 2,
	EBluezoneState_MAX             = 3
};


// Enum TslGame.ECounterWidgetType
enum class ECounterWidgetType : uint8_t
{
	Assist                         = 0,
	ECounterWidgetType_MAX         = 1
};


// Enum TslGame.EDisplayPlayerInfoType
enum class EDisplayPlayerInfoType : uint8_t
{
	PlayerList                     = 0,
	EngagedEnemies                 = 1,
	NearbyPlayers                  = 2,
	OtherEngagements               = 3,
	ObserverTeamInfoList           = 4,
	EDisplayPlayerInfoType_MAX     = 5
};


// Enum TslGame.EMarkStates
enum class EMarkStates : uint8_t
{
	Normal                         = 0,
	Groggy                         = 1,
	Dead                           = 2,
	Vehicle                        = 3,
	Parachute                      = 4,
	Quitter                        = 5,
	Aircraft                       = 6,
	ItemRequest                    = 7,
	EMarkStates_MAX                = 8
};


// Enum TslGame.ETeenageInfoType
enum class ETeenageInfoType : uint8_t
{
	Normal                         = 0,
	Season                         = 1,
	ETeenageInfoType_MAX           = 2
};


// Enum TslGame.EGuideKeyType
enum class EGuideKeyType : uint8_t
{
	None                           = 0,
	PickUp                         = 1,
	PickUpAndEquip                 = 2,
	PickUpAndPickUpAmount          = 3,
	Unequip                        = 4,
	DetachAll                      = 5,
	DetachAndDetachAll             = 6,
	Drop                           = 7,
	DropAndEquip                   = 8,
	DropAndDropAmount              = 9,
	DropAndDropAll                 = 10,
	Equip                          = 11,
	EquipAndQuickEquip             = 12,
	XQuickEquip                    = 13,
	XHoldQuickEquip                = 14,
	Swap                           = 15,
	Use                            = 16,
	Confirm                        = 17,
	Cancel                         = 18,
	SwitchSlot                     = 19,
	Charm                          = 20,
	CharmAndDetachAll              = 21,
	Apply                          = 22,
	EGuideKeyType_MAX              = 23
};


// Enum TslGame.EGuideLineType
enum class EGuideLineType : uint8_t
{
	Switch                         = 0,
	Upper                          = 1,
	Lower                          = 2,
	EGuideLineType_MAX             = 3
};


// Enum TslGame.ETppAimCameraPosition
enum class ETppAimCameraPosition : uint8_t
{
	LatestAimPosition              = 0,
	LastPeekingPosition            = 1,
	ResetToRightShoulderPosition   = 2,
	ResetToLeftShoulderPosition    = 3,
	ETppAimCameraPosition_MAX      = 4
};


// Enum TslGame.EAccessorySlot
enum class EAccessorySlot : uint8_t
{
	Slot_Primary                   = 0,
	Slot_Secondary                 = 1,
	Slot_SideArm                   = 2,
	Slot_Melee                     = 3,
	Slot_Thrown                    = 4,
	Slot_None                      = 5,
	Slot_MAX                       = 6
};


// Enum TslGame.EInventorySlotType
enum class EInventorySlotType : uint8_t
{
	Vicinity                       = 0,
	Inventory                      = 1,
	Crafting                       = 2,
	Equipment                      = 3,
	Weapon                         = 4,
	Max                            = 5,
	EInventorySlotType_MAX         = 6
};


// Enum TslGame.ELobbyCharacterCameraType
enum class ELobbyCharacterCameraType : uint8_t
{
	None                           = 0,
	WholeBodyCamera                = 1,
	TopCamera                      = 2,
	HeadCamera                     = 3,
	BodyCamera                     = 4,
	LegCamera                      = 5,
	FootCamera                     = 6,
	Max                            = 7,
	ELobbyCharacterCameraType_MAX  = 8
};


// Enum TslGame.EAnimWeaponSpecificClass
enum class EAnimWeaponSpecificClass : uint8_t
{
	None                           = 0,
	EAnimWeaponSpecificClass_MAX   = 1
};


// Enum TslGame.EContinuousHealItem
enum class EContinuousHealItem : uint8_t
{
	Continuous_On                  = 0,
	Bandaged_Only                  = 1,
	Continuous_Off                 = 2,
	EContinuousHealItem_MAX        = 3
};


// Enum TslGame.EWeaponClass
enum class EWeaponClass : uint8_t
{
	Class_None                     = 0,
	Class_Pistol                   = 1,
	Class_SMG                      = 2,
	Class_Rifle                    = 3,
	Class_Carbine                  = 4,
	Class_Shotgun                  = 5,
	Class_Sniper                   = 6,
	Class_DMR                      = 7,
	Class_LMG                      = 8,
	Class_Melee                    = 9,
	Class_Throwable                = 10,
	Class_Shield                   = 11,
	Class_Crossbow                 = 12,
	Class_Launcher                 = 13,
	EWeaponClass_MAX               = 14
};


// Enum TslGame.EAllowedThrowMode
enum class EAllowedThrowMode : uint8_t
{
	Any                            = 0,
	ThrowHigh                      = 1,
	ThrowLow                       = 2,
	EAllowedThrowMode_MAX          = 3
};


// Enum TslGame.ECharThrowMode
enum class ECharThrowMode : uint8_t
{
	ThrowHigh                      = 0,
	ThrowLow                       = 1,
	ECharThrowMode_MAX             = 2
};


// Enum TslGame.EAttachmentCalculateType
enum class EAttachmentCalculateType : uint8_t
{
	Addition                       = 0,
	Multiply                       = 1,
	EAttachmentCalculateType_MAX   = 2
};


// Enum TslGame.EAutoEquipAttachmentForScopeMode
enum class EAutoEquipAttachmentForScopeMode : uint8_t
{
	Off                            = 0,
	Sight_Only                     = 1,
	ALL                            = 2,
	EAutoEquipAttachmentForScopeMode_MAX = 3
};


// Enum TslGame.EItemCategory
enum class EItemCategory : uint8_t
{
	None                           = 0,
	Equipment                      = 1,
	Weapon                         = 2,
	Attachment                     = 3,
	Ammunition                     = 4,
	Use                            = 5,
	Skin                           = 6,
	Event                          = 7,
	EItemCategory_MAX              = 8
};


// Enum TslGame.EFiringMode
enum class EFiringMode : uint8_t
{
	Normal                         = 0,
	Burst                          = 1,
	FullAuto                       = 2,
	FullAutoFast                   = 3,
	EFiringMode_MAX                = 4
};


// Enum TslGame.ECharacterGait
enum class ECharacterGait : uint8_t
{
	Walk                           = 0,
	Run                            = 1,
	Sprint                         = 2,
	ECharacterGait_MAX             = 3
};


// Enum TslGame.EWeaponHand
enum class EWeaponHand : uint8_t
{
	Left                           = 0,
	Right                          = 1,
	Total                          = 2,
	EWeaponHand_MAX                = 3
};


// Enum TslGame.EWeaponArmState
enum class EWeaponArmState : uint8_t
{
	None                           = 0,
	NotArmed                       = 1,
	Arming                         = 2,
	Armed                          = 3,
	UnArming                       = 4,
	EWeaponArmState_MAX            = 5
};


// Enum TslGame.EPlatoonType
enum class EPlatoonType : uint8_t
{
	PlatoonA                       = 0,
	PlatoonB                       = 1,
	EPlatoonType_MAX               = 2
};


// Enum TslGame.EAnimVehicleSeatType
enum class EAnimVehicleSeatType : uint8_t
{
	BikeDriver                     = 0,
	BikePassenger                  = 1,
	VehicleDriver                  = 2,
	VehiclePassenger               = 3,
	Pilot                          = 4,
	AircraftPassenger              = 5,
	GliderPassenger                = 6,
	EAnimVehicleSeatType_MAX       = 7
};


// Enum TslGame.ETurningDirection
enum class ETurningDirection : uint8_t
{
	None                           = 0,
	Right                          = 1,
	Right01                        = 2,
	Right02                        = 3,
	Right03                        = 4,
	Left                           = 5,
	Left01                         = 6,
	Left02                         = 7,
	Left03                         = 8,
	ETurningDirection_MAX          = 9
};


// Enum TslGame.EMovementDirection
enum class EMovementDirection : uint8_t
{
	F_Direction                    = 0,
	L_Direction                    = 1,
	R_Direction                    = 2,
	B_Direction                    = 3,
	FL_Direction                   = 4,
	FR_Direction                   = 5,
	BL_Direction                   = 6,
	BR_Direction                   = 7,
	EMovementDirection_MAX         = 8
};


// Enum TslGame.EAnimStance
enum class EAnimStance : uint8_t
{
	Stand                          = 0,
	Crouch                         = 1,
	Prone                          = 2,
	Groggy                         = 3,
	EAnimStance_MAX                = 4
};


// Enum TslGame.EAnimWeaponType
enum class EAnimWeaponType : uint8_t
{
	None                           = 0,
	Rifle                          = 1,
	Launcher                       = 2,
	Pistol                         = 3,
	Throwable                      = 4,
	SpikeTrap                      = 5,
	Melee                          = 6,
	Shield                         = 7,
	MAX                            = 8,
	EAnimWeaponType_MAX            = 9
};


// Enum TslGame.ECameraViewBehaviour
enum class ECameraViewBehaviour : uint8_t
{
	FpsAndTps                      = 0,
	FpsOnly                        = 1,
	TpsOnly                        = 2,
	ECameraViewBehaviour_MAX       = 3
};


// Enum TslGame.EPlayerStartType
enum class EPlayerStartType : uint8_t
{
	OnePlace                       = 0,
	SeveralPlace                   = 1,
	EPlayerStartType_MAX           = 2
};


// Enum TslGame.EMatchStartType
enum class EMatchStartType : uint8_t
{
	Normal                         = 0,
	Airborne                       = 1,
	EMatchStartType_MAX            = 2
};


// Enum TslGame.EGender
enum class EGender : uint8_t
{
	Male                           = 0,
	Female                         = 1,
	EGender_MAX                    = 2
};


// Enum TslGame.EKillcamDisplayCode
enum class EKillcamDisplayCode : uint8_t
{
	NotVisible                     = 0,
	OptionDisabled                 = 1,
	Recording                      = 2,
	Playable                       = 3,
	Replay                         = 4,
	FailToLoad                     = 5,
	DemoFailure                    = 6,
	DetectedUnusualMovement        = 7,
	EKillcamDisplayCode_MAX        = 8
};


// Enum TslGame.EWidgetShowType
enum class EWidgetShowType : uint8_t
{
	Show                           = 0,
	Hide                           = 1,
	Toggle                         = 2,
	EWidgetShowType_MAX            = 3
};


// Enum TslGame.ESlotOffsetType
enum class ESlotOffsetType : uint8_t
{
	NoOffset                       = 0,
	BagLevel1                      = 1,
	BagLevel2                      = 2,
	BagLevel3                      = 3,
	ESlotOffsetType_MAX            = 4
};


// Enum TslGame.EItemSpotGroupType
enum class EItemSpotGroupType : uint8_t
{
	GroupA                         = 0,
	GroupB                         = 1,
	GroupC                         = 2,
	GroupD                         = 3,
	GroupE                         = 4,
	GroupF                         = 5,
	GroupG                         = 6,
	GroupH                         = 7,
	GroupI                         = 8,
	GroupJ                         = 9,
	EItemSpotGroupType_MAX         = 10
};


// Enum TslGame.EItemSpotType
enum class EItemSpotType : uint8_t
{
	TypeA                          = 0,
	TypeB                          = 1,
	TypeC                          = 2,
	TypeD                          = 3,
	TypeE                          = 4,
	TypeF                          = 5,
	EItemSpotType_MAX              = 6
};


// Enum TslGame.EAttackType
enum class EAttackType : uint8_t
{
	None                           = 0,
	Weapon                         = 1,
	VehicleCrash                   = 2,
	VehicleExplosion               = 3,
	Fall                           = 4,
	BlueZone                       = 5,
	RedZone                        = 6,
	BlackZone                      = 7,
	EAttackType_MAX                = 8
};


// Enum TslGame.EPlayerMoveType
enum class EPlayerMoveType : uint8_t
{
	OnFoot                         = 0,
	OnSwim                         = 1,
	OnVehicle                      = 2,
	OnParachute                    = 3,
	OnFreefall                     = 4,
	EPlayerMoveType_MAX            = 5
};


// Enum TslGame.EVaultRequirementType
enum class EVaultRequirementType : uint8_t
{
	VaultReqType_False             = 0,
	VaultReqType_True              = 1,
	VaultReqType_Any               = 2,
	VaultReqType_MAX               = 3
};


// Enum TslGame.EVaultAnimType
enum class EVaultAnimType : uint8_t
{
	VaultNone                      = 0,
	Vault200_Stationary            = 1,
	Vault200_Mobile                = 2,
	Vault200_Narrow                = 3,
	Vault160_Stationary            = 4,
	Vault160_Mobile                = 5,
	Vault160_Narrow                = 6,
	Vault120_Stationary            = 7,
	Vault120_Mobile                = 8,
	Vault120_Slide                 = 9,
	Vault120_Narrow                = 10,
	Vault90_Stationary             = 11,
	Vault90_Mobile                 = 12,
	Vault90_Slide                  = 13,
	Vault90_Narrow                 = 14,
	Climb200_Stationary            = 15,
	Climb200_Mobile                = 16,
	Climb200_Slide                 = 17,
	Climb200_Narrow                = 18,
	Climb160_Stationary            = 19,
	Climb160_Mobile                = 20,
	Climb160_Slide                 = 21,
	Climb160_Narrow                = 22,
	Climb120_Stationary            = 23,
	Climb120_Mobile                = 24,
	Climb120_Slide                 = 25,
	Climb120_Narrow                = 26,
	Climb90_Stationary             = 27,
	Climb90_Mobile                 = 28,
	Climb90_Slide                  = 29,
	Climb90_Narrow                 = 30,
	Vault90Roll                    = 31,
	Vault120Window                 = 32,
	Vault60_Stationary             = 33,
	Vault60_Mobile                 = 34,
	Vault60_Slide                  = 35,
	Vault60_Narrow                 = 36,
	Climb60_Stationary             = 37,
	Climb60_Mobile                 = 38,
	Climb60_Narrow                 = 39,
	LedgeGrab_Up_Climb             = 40,
	LedgeGrab_Up_Climb_Swing       = 41,
	LedgeGrab_Up_Climb_HalfSwing   = 42,
	LedgeGrab_Up_Vault             = 43,
	LedgeGrab_Up_Vault_Swing       = 44,
	LedgeGrab_Up_Vault_HalfSwing   = 45,
	LedgeGrab_High_Climb           = 46,
	LedgeGrab_High_Climb_Swing     = 47,
	LedgeGrab_High_Climb_HalfSwing = 48,
	LedgeGrab_High_Vault           = 49,
	LedgeGrab_High_Vault_Swing     = 50,
	LedgeGrab_High_Vault_HalfSwing = 51,
	LedgeGrab_Low_Climb            = 52,
	LedgeGrab_Low_Climb_Swing      = 53,
	LedgeGrab_Low_Climb_HalfSwing  = 54,
	LedgeGrab_Low_Vault            = 55,
	LedgeGrab_Low_Vault_Swing      = 56,
	LedgeGrab_Low_Vault_HalfSwing  = 57,
	LedgeGrab_Low_Vault_Narrow     = 58,
	LedgeGrab_Low_Vault_HalfSwing_Narrow = 59,
	LedgeGrab_Low_Vault_Swing_Narrow = 60,
	LedgeGrab_High_Vault_Narrow    = 61,
	LedgeGrab_High_Vault_HalfSwing_Narrow = 62,
	LedgeGrab_High_Vault_Swing_Narrow = 63,
	LedgeGrab_Up_Vault_Narrow      = 64,
	LedgeGrab_Up_Vault_HalfSwing_Narrow = 65,
	LedgeGrab_Up_Vault_Swing_Narrow = 66,
	EVaultAnimType_MAX             = 67
};


// Enum TslGame.EBuffOverlapSolveMethod
enum class EBuffOverlapSolveMethod : uint8_t
{
	IgnoreLater                    = 0,
	Overwrite                      = 1,
	RestartTimer                   = 2,
	Stack                          = 3,
	EBuffOverlapSolveMethod_MAX    = 4
};


// Enum TslGame.EDamageVictimActorType
enum class EDamageVictimActorType : uint8_t
{
	Character                      = 0,
	Vehicle                        = 1,
	Wheel                          = 2,
	DestructibleActor              = 3,
	ExplosiveItem                  = 4,
	EDamageVictimActorType_MAX     = 5
};


// Enum TslGame.ECastableItemType
enum class ECastableItemType : uint8_t
{
	None                           = 0,
	Bandage                        = 1,
	FirstAid                       = 2,
	Medkit                         = 3,
	EnergyDrink                    = 4,
	Painkiller                     = 5,
	Adrenaline                     = 6,
	GasCan                         = 7,
	Battery                        = 8,
	Key                            = 9,
	ECastableItemType_MAX          = 10
};


// Enum TslGame.ECastLevel
enum class ECastLevel : uint8_t
{
	None                           = 0,
	NoRestriction                  = 1,
	Restriction                    = 2,
	ECastLevel_MAX                 = 3
};


// Enum TslGame.ECastPriority
enum class ECastPriority : uint8_t
{
	None                           = 0,
	Low                            = 1,
	Normal                         = 2,
	High                           = 3,
	Max                            = 4,
	ECastPriority_MAX              = 5
};


// Enum TslGame.ELandingSoundSwitchState
enum class ELandingSoundSwitchState : uint8_t
{
	None                           = 0,
	Light                          = 1,
	Heavy                          = 2,
	VeryHeavy                      = 3,
	ELandingSoundSwitchState_MAX   = 4
};


// Enum TslGame.EStatTrakState
enum class EStatTrakState : uint8_t
{
	Run                            = 0,
	Locked                         = 1,
	Error                          = 2,
	EStatTrakState_MAX             = 3
};


// Enum TslGame.ESkinApplicationType
enum class ESkinApplicationType : uint8_t
{
	Application_InOrder            = 0,
	Application_Slot               = 1,
	Application_Index              = 2,
	Application_MAX                = 3
};


// Enum TslGame.ESkinMeshType
enum class ESkinMeshType : uint8_t
{
	SkeletalMesh                   = 0,
	AsyncStaticMesh                = 1,
	StaticMesh                     = 2,
	ESkinMeshType_MAX              = 3
};


// Enum TslGame.ESkinCategory
enum class ESkinCategory : uint8_t
{
	Skin_None                      = 0,
	Skin_Equipment                 = 1,
	Skin_Parachute                 = 2,
	Skin_Weapon                    = 3,
	Skin_MeleeWeapon               = 4,
	Skin_Vehicle                   = 5,
	Skin_MAX                       = 6
};


// Enum TslGame.ESandboxGroypType
enum class ESandboxGroypType : uint8_t
{
	Weapon                         = 0,
	Item                           = 1,
	Vehicle                        = 2,
	ESandboxGroypType_MAX          = 3
};


// Enum TslGame.ESandboxPowerType
enum class ESandboxPowerType : uint8_t
{
	None                           = 0,
	Fly                            = 1,
	InvulnerableEffect             = 2,
	CarePackage                    = 3,
	RedZone                        = 4,
	Revive                         = 5,
	TeamRevive                     = 6,
	GiveItemToEveryone             = 7,
	ESandboxPowerType_MAX          = 8
};


// Enum TslGame.ECharFlagsNormal
enum class ECharFlagsNormal : uint8_t
{
	IsGroggying                    = 0,
	IsActiveRagdollActive          = 1,
	HasShieldEquipped              = 2,
	IsOutsideBluezone              = 3,
	ECharFlagsNormal_MAX           = 4
};


// Enum TslGame.ELandingState
enum class ELandingState : uint8_t
{
	None                           = 0,
	Falling                        = 1,
	HeavyFalling                   = 2,
	ExtremeFalling                 = 3,
	FallingRecovery                = 4,
	PostLandingRecovery            = 5,
	ELandingState_MAX              = 6
};


// Enum TslGame.ECharFlagsSkipOwner
enum class ECharFlagsSkipOwner : uint8_t
{
	WantsToRun                     = 0,
	WantsToSprint                  = 1,
	WantsToSprintingAuto           = 2,
	WantsToRollingLeft             = 3,
	WantsToRollingRight            = 4,
	AimStateActive                 = 5,
	IsThirdPerson                  = 6,
	IsReviving                     = 7,
	IgnoreRotation                 = 8,
	IsWeaponObstructed             = 9,
	IsCoatEquipped                 = 10,
	IsThrowHigh                    = 11,
	WantsToCancelVault             = 12,
	IsScopingRemote                = 13,
	IsAimingRemote                 = 14,
	IsFirstPersonRemote            = 15,
	IsInVehicleRemote              = 16,
	IsPeekLeftRemote               = 17,
	IsPeekRightRemote              = 18,
	IsHoldingAngled                = 19,
	ECharFlagsSkipOwner_MAX        = 20
};


// Enum TslGame.EPunchDamageType
enum class EPunchDamageType : uint8_t
{
	PunchDamage_Light              = 0,
	PunchDamage_Heavy              = 1,
	PunchDamage_MAX                = 2
};


// Enum TslGame.EMovementType
enum class EMovementType : uint8_t
{
	M_StandWalk                    = 0,
	M_StandRun                     = 1,
	M_StandSprint                  = 2,
	M_CrouchWalk                   = 3,
	M_CrouchRun                    = 4,
	M_CrouchSprint                 = 5,
	M_ProneWalk                    = 6,
	M_ProneRun                     = 7,
	M_ProneSprint                  = 8,
	M_StandScope                   = 9,
	M_CrouchScope                  = 10,
	M_ProneScope                   = 11,
	M_StandAim                     = 12,
	M_CrouchAim                    = 13,
	M_ProneAim                     = 14,
	M_Swim                         = 15,
	M_UnderwaterSwim               = 16,
	M_DBNO                         = 17,
	M_MAX                          = 18
};


// Enum TslGame.ERaycastDirection
enum class ERaycastDirection : uint8_t
{
	Forward                        = 0,
	Down_45_Degrees                = 1,
	Down                           = 2,
	ERaycastDirection_MAX          = 3
};


// Enum TslGame.ECheatType
enum class ECheatType : uint8_t
{
	SpeedHack                      = 0,
	SpeedHack_UE                   = 1,
	IgnoreWall_Hit                 = 2,
	IgnoreWall_Sight               = 3,
	IgnoreVelocity_Hit             = 4,
	IgnoreVelocity                 = 5,
	IgnoreVelocity2                = 6,
	ItemPackage                    = 7,
	CarePackageMount               = 8,
	HitLag                         = 9,
	Aimbot                         = 10,
	InvalidImpact                  = 11,
	InvalidImpactZ                 = 12,
	InvalidImpact_Gun_C            = 13,
	InvalidOrigin_Gun              = 14,
	InvalidOrigin_Melee            = 15,
	InvalidOrigin_Punch            = 16,
	InvalidOrigin_Throwable        = 17,
	InvalidOrigin_MeleeThrow       = 18,
	InvalidSimStep_MeleeThrow      = 19,
	InvalidRange                   = 20,
	InvalidRange2                  = 21,
	InvalidSequence                = 22,
	InvalidAmmo                    = 23,
	InvalidReviving                = 24,
	InvalidKick                    = 25,
	InvalidA0                      = 26,
	InvalidB0                      = 27,
	InvalidB1                      = 28,
	InvalidB101                    = 29,
	InvalidH0                      = 30,
	InvalidOrigin_Gun_C            = 31,
	InvalidD0                      = 32,
	InvalidD1                      = 33,
	InvalidS0                      = 34,
	InvalidS1                      = 35,
	InvalidH1                      = 36,
	InvalidH2                      = 37,
	InvalidH3                      = 38,
	InvalidC0                      = 39,
	InvalidC1                      = 40,
	InvalidC2                      = 41,
	InvalidC3                      = 42,
	InvalidC4                      = 43,
	InvalidC5                      = 44,
	InvalidC6                      = 45,
	InvalidC7                      = 46,
	InvalidT0                      = 47,
	InvalidT1                      = 48,
	InvalidT2                      = 49,
	InvalidAimDir                  = 50,
	InvalidPelletDir               = 51,
	InvalidAmmoSpeed               = 52,
	InvalidAmmoDir                 = 53,
	InvalidCharacterFlag           = 54,
	InvalidPropertyCrc             = 55,
	InvalidWeaponCrc               = 56,
	InvalidWeaponRecoil            = 57,
	InvalidSwayBuffer              = 58,
	InvalidCameraYaw               = 59,
	InvalidWeaponPackageCrc        = 60,
	InvalidWeaponFlag              = 61,
	InvalidHitComponent            = 62,
	InvalidCollisionProfileCrc     = 63,
	InvalidPakListCrc              = 64,
	VerifyAim                      = 65,
	CHKSUM_GUN                     = 66,
	CHKSUM_PUNCH                   = 67,
	CHKSUM_MELEE                   = 68,
	CHKSUM_VEHICLE                 = 69,
	CHKSUM_A0                      = 70,
	CHKSUM_T0                      = 71,
	CHKSUM_S0                      = 72,
	CHKSUM_D0                      = 73,
	CHKSUM_V0                      = 74,
	CHKSUM_W0                      = 75,
	CHKSUM_T1                      = 76,
	CHKSUM_D1                      = 77,
	CHKSUM_CD                      = 78,
	CHKSUM_LC                      = 79,
	CHKSUM_V1                      = 80,
	CHKSUM_P0                      = 81,
	CHKSUM_BP                      = 82,
	CHKSUM_G0                      = 83,
	CHKSUM_G1                      = 84,
	CHKSUM_H2                      = 85,
	CHKSUM_H3                      = 86,
	CHKSUM_UO                      = 87,
	CHKSUM_UF                      = 88,
	VHC_RI                         = 89,
	VHC_SC                         = 90,
	VHC_MG                         = 91,
	VHC_MG_FF                      = 92,
	VHC_MG_FC                      = 93,
	VHC_MG_SW                      = 94,
	VHC_MG_OS                      = 95,
	VHC_MG_BC                      = 96,
	VHC_MG_TC                      = 97,
	VHC_MG_PL                      = 98,
	VHC_MG_HL                      = 99,
	VHC_MG_SD                      = 100,
	VHC_MGB                        = 101,
	VHC_MGB_FF                     = 102,
	VHC_MGB_FC                     = 103,
	VHC_MGB_OS                     = 104,
	VHC_MGB_BC                     = 105,
	VHC_MGB_TC                     = 106,
	VHC_MGB_PL                     = 107,
	VHC_MGB_HL                     = 108,
	VHC_MGF_OS                     = 109,
	VHC_MGF_TC                     = 110,
	VHC_MGF_SD                     = 111,
	VHC_KILL                       = 112,
	VHC_ED                         = 113,
	VHC_SIMULATION_ACTIVATE        = 114,
	VHC_SIMULATION_DEACTIVATE      = 115,
	VHC_TRY_BYPASS_SERVERSIMUL     = 116,
	VHC_BYPASSED_SERVERSIMUL       = 117,
	CK_ACTIVATE                    = 118,
	CK_DEACTIVATE                  = 119,
	CK_IWH                         = 120,
	CK_IWH_V3                      = 121,
	CK_IWS_V4                      = 122,
	CK_SP_K3                       = 123,
	CK_SP_K2                       = 124,
	CK_SP_K5                       = 125,
	CK_PLFC                        = 126,
	CK_TCFC                        = 127,
	CK_HL                          = 128,
	CK_OS                          = 129,
	CK_FF                          = 130,
	CK_FC                          = 131,
	QS_AA                          = 132,
	QS_NA                          = 133,
	QS_AL                          = 134,
	QS_AJ                          = 135,
	QS_AT                          = 136,
	QS_ADT                         = 137,
	QS_CJE                         = 138,
	QS_CWE                         = 139,
	CP_RZ                          = 140,
	CP_RZD                         = 141,
	KGB_AF                         = 142,
	ESP1                           = 143,
	ESP2                           = 144,
	ESP3                           = 145,
	SimilarHit                     = 146,
	DoubleKill                     = 147,
	B0Log                          = 148,
	InputLog                       = 149,
	FireInputLog                   = 150,
	HighLocationVehicle            = 151,
	HighLocationBoat               = 152,
	None                           = 153,
	ECheatType_MAX                 = 154
};


// Enum TslGame.ELobbyItemPointSellingType
enum class ELobbyItemPointSellingType : uint8_t
{
	Normal                         = 0,
	WeeklyDouble                   = 1,
	ELobbyItemPointSellingType_MAX = 2
};


// Enum TslGame.ELobbyItemPlatform
enum class ELobbyItemPlatform : uint8_t
{
	PC_Steam                       = 0,
	PC_NonSteam                    = 1,
	Xbox                           = 2,
	ELobbyItemPlatform_MAX         = 3
};


// Enum TslGame.ELobbyItemTier
enum class ELobbyItemTier : uint8_t
{
	Basic                          = 0,
	Common                         = 1,
	Classic                        = 2,
	Special                        = 3,
	Rare                           = 4,
	Elite                          = 5,
	Epic                           = 6,
	Legendary                      = 7,
	Ultimate                       = 8,
	Event                          = 9,
	ELobbyItemTier_MAX             = 10
};


// Enum TslGame.ELobbyItemCategory
enum class ELobbyItemCategory : uint8_t
{
	Belt                           = 0,
	Body                           = 1,
	Eyes                           = 2,
	Feet                           = 3,
	Head                           = 4,
	Jacket                         = 5,
	Legs                           = 6,
	Mask                           = 7,
	Hands                          = 8,
	Box                            = 9,
	Key                            = 10,
	WeaponSkin                     = 11,
	ParachuteSkin                  = 12,
	HelmetSkin                     = 13,
	BackpackSkin                   = 14,
	TorsoArmorSkin                 = 15,
	VehicleSkin                    = 16,
	Multislot                      = 17,
	ELobbyItemCategory_MAX         = 18
};


// Enum TslGame.EAttachParent
enum class EAttachParent : uint8_t
{
	None                           = 0,
	Character                      = 1,
	WeaponGun                      = 2,
	EAttachParent_MAX              = 3
};


// Enum TslGame.ERoamingActionType
enum class ERoamingActionType : uint8_t
{
	RAction_MoveToCenter           = 0,
	RAction_OcclusionCrouch        = 1,
	RAction_OcclusionProne         = 2,
	RActoin_Max                    = 3,
	ERoamingActionType_MAX         = 4
};


// Enum TslGame.EAIODealDoor
enum class EAIODealDoor : uint8_t
{
	Deal_None                      = 0,
	Deal_Wait                      = 1,
	Deal_MAX                       = 2
};


// Enum TslGame.ESurviveWeaponPropSlot
enum class ESurviveWeaponPropSlot : uint8_t
{
	SWPS_MainShootWeapon1          = 0,
	SWPS_MainShootWeapon2          = 1,
	SWPS_SubShootWeapon            = 2,
	SWPS_MeleeWeapon               = 3,
	SWPS_HandProp                  = 4,
	SWPS_Max                       = 5
};


// Enum TslGame.EWeatherStatusType
enum class EWeatherStatusType : uint8_t
{
	EWeatherStatusType_None        = 0,
	EWeatherStatusType_SunnyDay    = 1,
	EWeatherStatusType_Night       = 2,
	EWeatherStatusType_Fog         = 3,
	EWeatherStatusType_Rain        = 4,
	EWeatherStatusType_Snow        = 5,
	EWeatherStatusType_Blizzard    = 6,
	EWeatherStatusType_MAX         = 7
};


// Enum TslGame.UTPickerTargetType
enum class EUTPickerTargetType : uint8_t
{
	PTT_FRIEND                     = 0,
	PTT_ENEMY                      = 1,
	PTT_ALL                        = 2,
	PTT_Self                       = 3,
	PTT_MAX                        = 4
};


// Enum TslGame.ExtraPlayerLiveState
enum class ExtraPlayerLiveState : uint8_t
{
	InDefault                      = 0,
	InPlane                        = 1,
	InParachute                    = 2,
	InVehicle                      = 3,
	InDying                        = 4,
	InDied                         = 5,
	Offline                        = 6,
	ExtraPlayerLiveState_MAX       = 7
};


// Enum TslGame.EAIMoveType
enum class EAIMoveType : uint8_t
{
	StraightMove                   = 0,
	CurveMove                      = 1,
	EAIMoveType_MAX                = 2
};


// Enum TslGame.EAIWeaponShootType
enum class EAIWeaponShootType : uint8_t
{
	SingleShot                     = 0,
	Auto                           = 1,
	EAIWeaponShootType_MAX         = 2
};


// Enum TslGame.EAINewFocusPriority
enum class EAINewFocusPriority : uint8_t
{
	Default                        = 0,
	Move                           = 1,
	Gameplay                       = 2,
	EAINewFocusPriority_MAX        = 3
};


// Enum TslGame.EAIMovePose
enum class EAIMovePose : uint8_t
{
	Walk                           = 0,
	Run                            = 1,
	CrouchSprint                   = 2,
	KeepCurrentPose                = 3,
	EAIMovePose_MAX                = 4
};


// Enum TslGame.EAIPoseState
enum class EAIPoseState : uint8_t
{
	Stand                          = 0,
	Crouch                         = 1,
	Prone                          = 2,
	Jump                           = 3,
	Reload                         = 4,
	UnArmed                        = 5,
	EAIPoseState_MAX               = 6
};


// Enum TslGame.EAITriggerAttrType
enum class EAITriggerAttrType : uint8_t
{
	None                           = 0,
	Health                         = 1,
	Energy                         = 2,
	EAITriggerAttrType_MAX         = 3
};


// Enum TslGame.EAIAttrCompareType
enum class EAIAttrCompareType : uint8_t
{
	None                           = 0,
	Great                          = 1,
	Less                           = 2,
	EAIAttrCompareType_MAX         = 3
};


// Enum TslGame.EAIEquipSpawnItemType
enum class EAIEquipSpawnItemType : uint8_t
{
	Shoot_Weap                     = 0,
	Backpack                       = 1,
	other                          = 2,
	EAIEquipSpawnItemType_MAX      = 3
};


// Enum TslGame.EThownWeapon_AI
enum class EThownWeapon_AI : uint8_t
{
	GRENADE                        = 0,
	MOLOTOV                        = 1,
	SMOKEBOMB                      = 2,
	FLASHBANG                      = 3,
	EThownWeapon_MAX               = 4
};


// Enum TslGame.EThrowablePoseState_AI
enum class EThrowablePoseState_AI : uint8_t
{
	Idle                           = 0,
	PinOffStart                    = 1,
	Cooking                        = 2,
	WaitForThrow                   = 3,
	Throwing                       = 4,
	EThrowablePoseState_MAX        = 5
};


// Enum TslGame.ERoamingMoveType
enum class ERoamingMoveType : uint8_t
{
	RMoveCenter                    = 0,
	RMoveMax                       = 1,
	ERoamingMoveType_MAX           = 2
};


// Enum TslGame.EModifyBlackboardDataValueType
enum class EModifyBlackboardDataValueType : uint8_t
{
	Int                            = 0,
	Float                          = 1,
	Bool                           = 2,
	String                         = 3,
	Object                         = 4,
	Vector3                        = 5,
	EModifyBlackboardDataValueType_MAX = 6
};


// Enum TslGame.EArenaStageState
enum class EArenaStageState : uint8_t
{
	Prematch                       = 0,
	StageInProgress                = 1,
	BetweenStages                  = 2,
	FinishMatch                    = 3,
	EArenaStageState_MAX           = 4
};


// Enum TslGame.EParachuteLandingSurfaceType
enum class EParachuteLandingSurfaceType : uint8_t
{
	Surface_None                   = 0,
	Surface_Vertical               = 1,
	Surface_Horizontal             = 2,
	Surface_MAX                    = 3
};


// Enum TslGame.ERandomPointSelect
enum class ERandomPointSelect : uint8_t
{
	NavPoint                       = 0,
	NavPointInRadius               = 1,
	ReachableNavPointInRadius      = 2,
	ERandomPointSelect_MAX         = 3
};


// Enum TslGame.ENpcDirection
enum class ENpcDirection : uint8_t
{
	Forward                        = 0,
	Backward                       = 1,
	Left                           = 2,
	Right                          = 3,
	ForwardRight                   = 4,
	BackwardRight                  = 5,
	BackwardLeft                   = 6,
	ForwardLeft                    = 7,
	ENpcDirection_MAX              = 8
};


// Enum TslGame.ENpcWalkingSpeedType
enum class ENpcWalkingSpeedType : uint8_t
{
	Idle                           = 0,
	Walk                           = 1,
	Run                            = 2,
	Sprint                         = 3,
	ENpcWalkingSpeedType_MAX       = 4
};


// Enum TslGame.ENpcCharacterStateType
enum class ENpcCharacterStateType : uint8_t
{
	Default                        = 0,
	Respawn                        = 1,
	Fire1                          = 2,
	Fire2                          = 3,
	Fire3                          = 4,
	Knockback                      = 5,
	Knockdown                      = 6,
	Getup                          = 7,
	ENpcCharacterStateType_MAX     = 8
};


// Enum TslGame.ERandomType
enum class ERandomType : uint8_t
{
	Random                         = 0,
	Shuffle                        = 1,
	Ascending                      = 2,
	Descending                     = 3,
	ERandomType_MAX                = 4
};


// Enum TslGame.ECustomAnimDataType
enum class ECustomAnimDataType : uint8_t
{
	CustomAnimData                 = 0,
	AnimSequence                   = 1,
	ECustomAnimDataType_MAX        = 2
};


// Enum TslGame.ECustomAnimSlotType
enum class ECustomAnimSlotType : uint8_t
{
	FullBody                       = 0,
	UpperBody                      = 1,
	FullBodyInstance               = 2,
	UpperBodyInstance              = 3,
	LowerBody                      = 4,
	ECustomAnimSlotType_MAX        = 5
};


// Enum TslGame.ERetriggerCounter
enum class ERetriggerCounter : uint8_t
{
	First                          = 0,
	Sec                            = 1,
	Third                          = 2,
	Fourth                         = 3,
	ERetriggerCounter_MAX          = 4
};


// Enum TslGame.EPathDebugType
enum class EPathDebugType : uint8_t
{
	None                           = 0,
	Location                       = 1,
	SelectNpc                      = 2,
	EPathDebugType_MAX             = 3
};


// Enum TslGame.EScopeType
enum class EScopeType : uint8_t
{
	Main                           = 0,
	Right                          = 1,
	Total                          = 2,
	None                           = 3,
	EScopeType_MAX                 = 4
};


// Enum TslGame.EWeaponReloadCancelReason
enum class EWeaponReloadCancelReason : uint8_t
{
	Default                        = 0,
	PlayerInterrupted              = 1,
	PlayerMovement                 = 2,
	PlayerInteraction              = 3,
	WeaponSwitch                   = 4,
	PlayerIncapacitated            = 5,
	EWeaponReloadCancelReason_MAX  = 6
};


// Enum TslGame.EWeaponReloadAnimExec
enum class EWeaponReloadAnimExec : uint8_t
{
	Tactical                       = 0,
	Charge                         = 1,
	Single                         = 2,
	Loop                           = 3,
	EWeaponReloadAnimExec_MAX      = 4
};


// Enum TslGame.EWeaponState
enum class EWeaponState : uint8_t
{
	Idle                           = 0,
	Firing                         = 1,
	Reloading                      = 2,
	EWeaponState_MAX               = 3
};


// Enum TslGame.ECorrectedSpawnLocationTraceOriginMode
enum class ECorrectedSpawnLocationTraceOriginMode : uint8_t
{
	CapsuleAxis                    = 0,
	CapsuleOrigin                  = 1,
	ECorrectedSpawnLocationTraceOriginMode_MAX = 2
};


// Enum TslGame.ECorrectedSpawnLocationTraceType
enum class ECorrectedSpawnLocationTraceType : uint8_t
{
	Sweep                          = 0,
	Trace                          = 1,
	ECorrectedSpawnLocationTraceType_MAX = 2
};


// Enum TslGame.EThrowableState
enum class EThrowableState : uint8_t
{
	Idle                           = 0,
	PinOff                         = 1,
	Cooking                        = 2,
	Throw                          = 3,
	Dropped                        = 4,
	EThrowableState_MAX            = 5
};


// Enum TslGame.EProjectileExplosionStartType
enum class EProjectileExplosionStartType : uint8_t
{
	NotStart                       = 0,
	Impact                         = 1,
	Delay                          = 2,
	ImpactOrDelay                  = 3,
	EProjectileExplosionStartType_MAX = 4
};


// Enum TslGame.EProjectileExplodeState
enum class EProjectileExplodeState : uint8_t
{
	NotExplode                     = 0,
	ImpactExplode                  = 1,
	TimerExplode                   = 2,
	EProjectileExplodeState_MAX    = 3
};


// Enum TslGame.EProjectileExplosionRotationType
enum class EProjectileExplosionRotationType : uint8_t
{
	ProjectileUpVector             = 0,
	WorldUpVector                  = 1,
	ProjectileForwardVector        = 2,
	EProjectileExplosionRotationType_MAX = 3
};


// Enum TslGame.EHornSoundType
enum class EHornSoundType : uint8_t
{
	HornOn                         = 0,
	HornOff                        = 1,
	InstantHorn                    = 2,
	EHornSoundType_MAX             = 3
};


// Enum TslGame.EVehicleAnimType
enum class EVehicleAnimType : uint8_t
{
	DefaultDriver                  = 0,
	DefaultPassenger               = 1,
	BuggyDriver                    = 2,
	BuggyPassenger                 = 3,
	DaciaDriver                    = 4,
	DaciaPassengerFR               = 5,
	DaciaPassengerBL               = 6,
	DaciaPassengerBC               = 7,
	DaciaPassengerBR               = 8,
	UazDriver                      = 9,
	UazPassengerFR                 = 10,
	UazPassengerBL                 = 11,
	UazPassengerBC                 = 12,
	UazPassengerBR                 = 13,
	BoatDriver                     = 14,
	BoatPassengerFR                = 15,
	BoatPassengerBL                = 16,
	BoatPassengerBC                = 17,
	BoatPassengerBR                = 18,
	MotoDriver                     = 19,
	MotoPassenger                  = 20,
	MotoSidecar                    = 21,
	MotoDriverSidecar              = 22,
	MotoPassengerSidecar           = 23,
	AircraftPassenger              = 24,
	JetskiDriver                   = 25,
	JetskiPassenger                = 26,
	PickupTruckDriver              = 27,
	PickupTruckPassengerFR         = 28,
	PickupTruckPassengerBL_Open    = 29,
	PickupTruckPassengerBR_Open    = 30,
	PickupTruckPassengerBL_Closed  = 31,
	PickupTruckPassengerBR_Closed  = 32,
	MinibusDriver                  = 33,
	MinibusPassengerFR             = 34,
	MinibusPassengerML             = 35,
	MinibusPassengerMR             = 36,
	MinibusPassengerBL             = 37,
	MinibusPassengerBR             = 38,
	MiradoDriver                   = 39,
	MiradoFR                       = 40,
	MiradoRL                       = 41,
	MiradoRR                       = 42,
	ScooterPassenger               = 43,
	TukDriver                      = 44,
	RonyDriver                     = 45,
	Snowmobile_Passenger           = 46,
	YetiDriver                     = 47,
	YetiPassenger                  = 48,
	LadaNivaDriver                 = 49,
	BRDM_Driver                    = 50,
	BRDM_Passenger                 = 51,
	Motorglider_Pilot              = 52,
	Motorglider_Passenger          = 53,
	EVehicleAnimType_MAX           = 54
};


// Enum TslGame.ERiderType
enum class ERiderType : uint8_t
{
	Driver                         = 0,
	Passenger                      = 1,
	ERiderType_MAX                 = 2
};


// Enum TslGame.EMapColor
enum class EMapColor : uint8_t
{
	Undefined                      = 0,
	Red                            = 1,
	Green                          = 2,
	Blue                           = 3,
	Yellow                         = 4,
	EMapColor_MAX                  = 5
};


// Enum TslGame.EThingGroupSpawnType
enum class EThingGroupSpawnType : uint8_t
{
	None                           = 0,
	Probability                    = 1,
	TotalCount                     = 2,
	EThingGroupSpawnType_MAX       = 3
};


// Enum TslGame.EHelicopterState
enum class EHelicopterState : uint8_t
{
	Normal                         = 0,
	Smoke                          = 1,
	Explosion                      = 2,
	EHelicopterState_MAX           = 3
};


// Enum TslGame.EAnimShieldState
enum class EAnimShieldState : uint8_t
{
	SS_Hip                         = 0,
	SS_Block                       = 1,
	SS_ADS                         = 2,
	SS_MAX                         = 3
};


// Enum TslGame.EAnimPawnState
enum class EAnimPawnState : uint8_t
{
	PS_OnFoot                      = 0,
	PS_VehicleDriver               = 1,
	PS_VehiclePassenger            = 2,
	PS_Freefall                    = 3,
	PS_Parachute                   = 4,
	PS_Swim                        = 5,
	PS_DBNO                        = 6,
	PS_Reviving                    = 7,
	PS_Flying                      = 8,
	PS_ActiveRagdoll               = 9,
	PS_MAX                         = 10
};


// Enum TslGame.EVehicleEngineState
enum class EVehicleEngineState : uint8_t
{
	EEngineStateAutoOff            = 0,
	EEngineStateAutoOn             = 1,
	EEngineStateManualOff          = 2,
	EEngineStateManualOn           = 3,
	EVehicleEngineState_MAX        = 4
};


// Enum TslGame.EWheelContactType
enum class EWheelContactType : uint8_t
{
	WCT_Static                     = 0,
	WCT_Roll                       = 1,
	WCT_LatSlip                    = 2,
	WCT_LongSlip                   = 3,
	WCT_MAX                        = 4
};


// Enum TslGame.EFlareDeploymentType
enum class EFlareDeploymentType : uint8_t
{
	Deploy_None                    = 0,
	Deploy_InWhite                 = 1,
	Deploy_InBlue                  = 2,
	Deploy_Outside                 = 3,
	Deploy_MAX                     = 4
};


// Enum TslGame.ECustomCarepackageState
enum class ECustomCarepackageState : uint8_t
{
	Transporting                   = 0,
	Falling                        = 1,
	Landing                        = 2,
	ECustomCarepackageState_MAX    = 3
};


// Enum TslGame.EWeaponReloadMethod
enum class EWeaponReloadMethod : uint8_t
{
	Magazine                       = 0,
	OneByOne                       = 1,
	OneByOneAndClip                = 2,
	EWeaponReloadMethod_MAX        = 3
};


// Enum TslGame.EDecoyFiringState
enum class EDecoyFiringState : uint8_t
{
	Firing                         = 0,
	BetweenShots                   = 1,
	BetweenSequences               = 2,
	EDecoyFiringState_MAX          = 3
};


// Enum TslGame.EDecoyState
enum class EDecoyState : uint8_t
{
	Uninitialized                  = 0,
	Cooking                        = 1,
	DelayedFiring                  = 2,
	Firing                         = 3,
	Reloading                      = 4,
	DelayedEnding                  = 5,
	EndOfLife                      = 6,
	EDecoyState_MAX                = 7
};


// Enum TslGame.EDoorState
enum class EDoorState : uint8_t
{
	Closed                         = 0,
	Closing                        = 1,
	Opened                         = 2,
	Opening                        = 3,
	EDoorState_MAX                 = 4
};


// Enum TslGame.EDestrucibleSurfaceSourceType
enum class EDestrucibleSurfaceSourceType : uint8_t
{
	Unknown                        = 0,
	Projectile                     = 1,
	Grenade                        = 2,
	Warhead                        = 3,
	Slashing                       = 4,
	EDestrucibleSurfaceSourceType_MAX = 5
};


// Enum TslGame.EFExplosivePropDataType
enum class EFExplosivePropDataType : uint8_t
{
	Default                        = 0,
	PropaneTank                    = 1,
	SmallTank                      = 2,
	FutureUse                      = 3,
	EFExplosivePropDataType_MAX    = 4
};


// Enum TslGame.EMasteryItemType
enum class EMasteryItemType : uint8_t
{
	Charm                          = 0,
	Mesh                           = 1,
	EMasteryItemType_MAX           = 2
};


// Enum TslGame.EFlashbangDebuffCurveValueTypes
enum class EFlashbangDebuffCurveValueTypes : uint8_t
{
	Blindness_Duration_Direct      = 0,
	Blindness_Duration_Indirect    = 1,
	Tinnitus_Level                 = 2,
	EFlashbangDebuffCurveValueTypes_MAX = 3
};


// Enum TslGame.ETracerDisplayMode
enum class ETracerDisplayMode : uint8_t
{
	TracerDM_None                  = 0,
	TracerDM_Particle              = 1,
	TracerDM_Mesh                  = 2,
	TracerDM_Billboard             = 3,
	TracerDM_MAX                   = 4
};


// Enum TslGame.ELoadingScreenType
enum class ELoadingScreenType : uint8_t
{
	NONE                           = 0,
	ICE_BRAKE                      = 1,
	RULE_SET                       = 2,
	WEAPON                         = 3,
	ATTACHMENT                     = 4,
	EQUIPMENT                      = 5,
	ITEM                           = 6,
	VEHICLE                        = 7,
	SYSTEM                         = 8,
	DEFAULT                        = 9,
	GAME_MODE                      = 10,
	EXPOSE_WITH_HIGHEST_PRIORITY   = 11,
	ELoadingScreenType_MAX         = 12
};


// Enum TslGame.GamepadHudDataType
enum class EGamepadHudDataType : uint8_t
{
	EFloat                         = 0,
	EBool                          = 1,
	EFString                       = 2,
	GamepadHudDataType_MAX         = 3
};


// Enum TslGame.ETslControllerType
enum class ETslControllerType : uint8_t
{
	Mouse                          = 0,
	GamePad                        = 1,
	Total                          = 2,
	ETslControllerType_MAX         = 3
};


// Enum TslGame.EVoiceInterfaceType
enum class EVoiceInterfaceType : uint8_t
{
	VIVOX                          = 0,
	XIM                            = 1,
	GVOICE                         = 2,
	EVoiceInterfaceType_MAX        = 3
};


// Enum TslGame.EVoiceTransmissionType
enum class EVoiceTransmissionType : uint8_t
{
	None                           = 0,
	ToAll                          = 1,
	ToChannel                      = 2,
	EVoiceTransmissionType_MAX     = 3
};


// Enum TslGame.EVivoxResponseState
enum class EVivoxResponseState : uint8_t
{
	NotRequested                   = 0,
	Requested                      = 1,
	Fail                           = 2,
	Success                        = 3,
	EVivoxResponseState_MAX        = 4
};


// Enum TslGame.EVoiceChannelType
enum class EVoiceChannelType : uint8_t
{
	None                           = 0,
	All                            = 1,
	GlobalOnly                     = 2,
	TeamOnly                       = 3,
	EVoiceChannelType_MAX          = 4
};


// Enum TslGame.EVoiceChannelJoinState
enum class EVoiceChannelJoinState : uint8_t
{
	NotJoined                      = 0,
	Joining                        = 1,
	Leaving                        = 2,
	Joined                         = 3,
	EVoiceChannelJoinState_MAX     = 4
};


// Enum TslGame.EVoiceLoginState
enum class EVoiceLoginState : uint8_t
{
	NotLoggedin                    = 0,
	Loggingin                      = 1,
	Loggedin                       = 2,
	EVoiceLoginState_MAX           = 3
};


// Enum TslGame.EVoiceConnectionState
enum class EVoiceConnectionState : uint8_t
{
	NotConnected                   = 0,
	Connecting                     = 1,
	Connected                      = 2,
	EVoiceConnectionState_MAX      = 3
};


// Enum TslGame.EWeaponGripLeftHand
enum class EWeaponGripLeftHand : uint8_t
{
	NormalRifle                    = 0,
	Foregrip1                      = 1,
	Foregrip2                      = 2,
	Thompson                       = 3,
	EWeaponGripLeftHand_MAX        = 4
};


// Enum TslGame.EBeginningState
enum class EBeginningState : uint8_t
{
	Invalid                        = 0,
	Normal                         = 1,
	StartIsland                    = 2,
	Airplane                       = 3,
	Skydiving                      = 4,
	Parachuting                    = 5,
	EBeginningState_MAX            = 6
};


// Enum TslGame.ETslWeatherAction
enum class ETslWeatherAction : uint8_t
{
	NotDefined                     = 0,
	Initialized                    = 1,
	Prolonged                      = 2,
	ETslWeatherAction_MAX          = 3
};


// Enum TslGame.EBluezoneType
enum class EBluezoneType : uint8_t
{
	Normal                         = 0,
	Fast                           = 1,
	EBluezoneType_MAX              = 2
};


// Enum TslGame.EVendingMachineType
enum class EVendingMachineType : uint8_t
{
	AMMUNITION                     = 0,
	BOOSTING                       = 1,
	THROWABLE                      = 2,
	WEAPON                         = 3,
	HEALING                        = 4,
	EVendingMachineType_MAX        = 5
};


// Enum TslGame.EPlayerAuthState
enum class EPlayerAuthState : uint8_t
{
	None                           = 0,
	Login                          = 1,
	Logout                         = 2,
	EPlayerAuthState_MAX           = 3
};


// Enum TslGame.EInteractionPhase
enum class EInteractionPhase : uint8_t
{
	First                          = 0,
	Second                         = 1,
	EInteractionPhase_MAX          = 2
};


// Enum TslGame.EEquipableItemLevelType
enum class EEquipableItemLevelType : uint8_t
{
	None                           = 0,
	Level1                         = 1,
	Level2                         = 2,
	Level3                         = 3,
	Level4                         = 4,
	EEquipableItemLevelType_MAX    = 5
};


// Enum TslGame.EConstraintSlotType
enum class EConstraintSlotType : uint8_t
{
	Block                          = 0,
	Hide                           = 1,
	Max                            = 2,
	EConstraintSlotType_MAX        = 3
};


// Enum TslGame.EDurabilityConsumeType
enum class EDurabilityConsumeType : uint8_t
{
	TotalDamage                    = 0,
	AbsorbDamage                   = 1,
	EDurabilityConsumeType_MAX     = 2
};


// Enum TslGame.TableType
enum class ETableType : uint8_t
{
	Ammo                           = 0,
	Attachment                     = 1,
	Equipment                      = 2,
	Skin                           = 3,
	Weapon                         = 4,
	WeaponThrowable                = 5,
	WeaponShield                   = 6,
	Castable                       = 7,
	UsedByAction                   = 8,
	Event                          = 9,
	Craft                          = 10,
	TableType_MAX                  = 11
};


// Enum TslGame.ELobbyItemBundleType
enum class ELobbyItemBundleType : uint8_t
{
	Bundle                         = 0,
	Generator                      = 1,
	ELobbyItemBundleType_MAX       = 2
};


// Enum TslGame.EItemSpawnType
enum class EItemSpawnType : uint8_t
{
	FixedRatioAndAdjustableTotalNumber = 0,
	AdjustableRatioAndFixedTotalNumber = 1,
	AdjustableRatioAndAdjustableTotalNumber = 2,
	EItemSpawnType_MAX             = 3
};


// Enum TslGame.ELocationType
enum class ELocationType : uint8_t
{
	LANDMARK                       = 0,
	EXTRA_LANDMARK                 = 1,
	CITY                           = 2,
	CITY_DETAIL                    = 3,
	TOWN                           = 4,
	COMPOUNDS                      = 5,
	EXTRA                          = 6,
	TEST_SHOW_ALL                  = 7,
	ELocationType_MAX              = 8
};


// Enum TslGame.EClimate
enum class EClimate : uint8_t
{
	Climate_Normal                 = 0,
	Climate_Hot                    = 1,
	Climate_Cold                   = 2,
	Climate_Warm                   = 3,
	Climate_Humid                  = 4,
	Climate_HotAndHumid            = 5,
	Climate_ColdAndHumid           = 6,
	Climate_WarmAndHumid           = 7,
	Climate_Dry                    = 8,
	Climate_HotAndDry              = 9,
	Climate_ColdAndDry             = 10,
	Climate_WarmAndDry             = 11,
	Climate_MAX                    = 12
};


// Enum TslGame.ELobbyLinkState
enum class ELobbyLinkState : uint8_t
{
	Disconnect                     = 0,
	WaitInitialize                 = 1,
	WaitStart                      = 2,
	Gaming                         = 3,
	Finished                       = 4,
	ELobbyLinkState_MAX            = 5
};


// Enum TslGame.ELobbyCharacterAnimationType
enum class ELobbyCharacterAnimationType : uint8_t
{
	Default                        = 0,
	Wardrobe                       = 1,
	Appearance                     = 2,
	ELobbyCharacterAnimationType_MAX = 3
};


// Enum TslGame.EParameterLUTChannel
enum class EParameterLUTChannel : uint8_t
{
	R                              = 0,
	G                              = 1,
	B                              = 2,
	A                              = 3,
	RGBA                           = 4,
	Undefined                      = 5,
	EParameterLUTChannel_MAX       = 6
};


// Enum TslGame.EMaterialParameterType
enum class EMaterialParameterType : uint8_t
{
	Bool                           = 0,
	Scalar                         = 1,
	Vector                         = 2,
	Texture                        = 3,
	Undefined                      = 4,
	EMaterialParameterType_MAX     = 5
};


// Enum TslGame.EBlackZoneState
enum class EBlackZoneState : uint8_t
{
	BZ_WaitingForMatchStart        = 0,
	BZ_SelectNewBlackZone          = 1,
	BZ_BeginStrike                 = 2,
	BZ_FireMisile                  = 3,
	BZ_EndBombing                  = 4,
	BZ_MAX                         = 5
};



//---------------------------------------------------------------------------
//Script Structs
//---------------------------------------------------------------------------

// ScriptStruct TslGame.TslActionInputCallbackConfig
// 0x0018
struct FTslActionInputCallbackConfig
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CallbackName;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bConsume;                                                 // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInputEvent>                           InputEvent;                                               // 0x0011(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.TslAxisInputCallbackConfig
// 0x0020
struct FTslAxisInputCallbackConfig
{
	struct FName                                       AxisName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       CallbackName;                                             // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bConsume;                                                 // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.UmgWidgetBinder
// 0x0018
struct FUmgWidgetBinder
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 Parent;                                                   // 0x0010(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_Animation
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_Animation : public FUmgWidgetBinder
{
	class UWidgetAnimation*                            CachedAnimation;                                          // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_Panel
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_Panel : public FUmgWidgetBinder
{
	class UPanelWidget*                                CachedPanel;                                              // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_CanvasPanel
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_CanvasPanel : public FUmgWidgetBinder_Panel
{
	class UCanvasPanel*                                CachedCanvasPanel;                                        // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_Gerneral
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_Gerneral : public FUmgWidgetBinder
{
	class UWidget*                                     CachedWidget;                                             // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.SaveDataForLifegauge
// 0x0018
struct FSaveDataForLifegauge
{
	class ATslCharacter*                               ViewTargetTslCharacter;                                   // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HealthOrGroggyHealth;                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealthMaxOrGroggyHealthMax;                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealAmount;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsGroggy;                                                // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasEffect;                                               // 0x0015(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.FiremodeImage
// 0x0050
struct FFiremodeImage
{
	TMap<EFiremode, class UTexture2D*>                 TextureData;                                              // 0x0000(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ColorBlindColorData
// 0x0014
struct FColorBlindColorData
{
	EColorBlindType                                    Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FLinearColor                                Color;                                                    // 0x0004(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ColorBlindColorSet
// 0x0010
struct FColorBlindColorSet
{
	TArray<struct FColorBlindColorData>                ColorSet;                                                 // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemPerSlot
// 0x0018
struct FItemPerSlot
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                ItemStackCount;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UTslEventItemSlotWidget*                     SlotWidget;                                               // 0x0010(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.SpawnKitInstance
// 0x0010
struct FSpawnKitInstance
{
	TArray<class UItem*>                               Items;                                                    // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.BuffIconSetting
// 0x0020
struct FBuffIconSetting
{
	class UClass*                                      IconWidgetClass;                                          // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EEquipSlotID                                       EquipSlotID;                                              // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                EquipPositionIndex;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EBuffCountType                                     CountType;                                                // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.BuffIconDisplaySetting
// 0x0018
struct FBuffIconDisplaySetting
{
	EFBRClass                                          ClassType;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                SpacerIndex;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FBuffIconSetting>                    IconSettings;                                             // 0x0008(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.TslGameOptionSupplementaryData
// 0x0058
struct FTslGameOptionSupplementaryData
{
	ETslGameOptionSupplementaryType                    Type;                                                     // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FLinearColor                                Color;                                                    // 0x0004(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TAssetPtr<class UTexture2D>                        TextureData;                                              // 0x0018(0x0020) (Edit, DisableEditOnInstance)
	TAssetPtr<class UMaterialInterface>                MaterialData;                                             // 0x0038(0x0020) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.UmgWidgetBinder_TextBlock
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_TextBlock : public FUmgWidgetBinder
{
	class UTextBlock*                                  CachedTextBlock;                                          // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_Image
// 0x0010 (0x0028 - 0x0018)
struct FUmgWidgetBinder_Image : public FUmgWidgetBinder
{
	class UImage*                                      CachedImage;                                              // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CachedMaterial;                                           // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslInputKey
// 0x0020
struct FTslInputKey
{
	struct FKey                                        Key;                                                      // 0x0000(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      bShift : 1;                                               // 0x0018(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCtrl : 1;                                                // 0x0018(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAlt : 1;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.UmgWidgetBinder_Border
// 0x0010 (0x0030 - 0x0020)
struct FUmgWidgetBinder_Border : public FUmgWidgetBinder_Panel
{
	class UBorder*                                     CachedBorder;                                             // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CachedMaterial;                                           // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_SizeBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_SizeBox : public FUmgWidgetBinder_Panel
{
	class USizeBox*                                    CachedSizeBox;                                            // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.TslStickInputHelper
// 0x0014
struct FTslStickInputHelper
{
	float                                              Timestamp;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BlockingTime;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ContinuousCheckTime;                                      // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DeadZoneValueX;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DeadZoneValueY;                                           // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionItemStepperData
// 0x0030
struct FTslGameOptionItemStepperData
{
	struct FText                                       DisplayNameText;                                          // 0x0000(0x0018)
	struct FText                                       DetailedDescriptionText;                                  // 0x0018(0x0018)
};

// ScriptStruct TslGame.UmgWidgetBinder_HorizontalBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_HorizontalBox : public FUmgWidgetBinder_Panel
{
	class UHorizontalBox*                              CachedHorizontalBox;                                      // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionItemStepperData_EditorType
// 0x0088
struct FTslGameOptionItemStepperData_EditorType
{
	struct FText                                       DisplayNameText;                                          // 0x0000(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       DetailedDescriptionText;                                  // 0x0018(0x0018) (Edit, DisableEditOnInstance)
	struct FTslGameOptionSupplementaryData             SupplementData;                                           // 0x0030(0x0058) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.MaterialInfo
// 0x0010
struct FMaterialInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.UmgWidgetBinder_InvalidationBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_InvalidationBox : public FUmgWidgetBinder_Panel
{
	class UInvalidationBox*                            CachedInvalidationBox;                                    // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_UserWidget
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_UserWidget : public FUmgWidgetBinder
{
	class UUserWidget*                                 CachedWidget;                                             // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_WidgetSwitcher
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_WidgetSwitcher : public FUmgWidgetBinder_Panel
{
	class UWidgetSwitcher*                             CachedWidgetSwitcher;                                     // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_VerticalBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_VerticalBox : public FUmgWidgetBinder_Panel
{
	class UVerticalBox*                                CachedVerticalBox;                                        // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.HealItemSelectorData
// 0x0018
struct FHealItemSelectorData
{
	ECastableItemType                                  ItemType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  ItemTexture;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TakeHitInfo
// 0x0058
struct FTakeHitInfo
{
	float                                              ActualDamage;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class ATslPlayerState>              PlayerInstigator;                                         // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         DamageOrigin;                                             // 0x0018(0x000C)
	struct FVector_NetQuantize                         RelHitLocation;                                           // 0x0024(0x000C)
	struct FName                                       BoneName;                                                 // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DamageMaxRadius;                                          // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShotDirPitch;                                             // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShotDirYaw;                                               // 0x003D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPointDamage : 1;                                         // 0x003E(0x0001)
	unsigned char                                      bRadialDamage : 1;                                        // 0x003E(0x0001)
	unsigned char                                      bKilled : 1;                                              // 0x003E(0x0001)
	unsigned char                                      EnsureReplicationByte;                                    // 0x003F(0x0001) (ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackerWeaponName;                                       // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     AttackerLocation;                                         // 0x0048(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.UmgWidgetBinder_Overlay
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_Overlay : public FUmgWidgetBinder_Panel
{
	class UOverlay*                                    CachedOverlay;                                            // 0x0020(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_ScrollBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_ScrollBox : public FUmgWidgetBinder_Panel
{
	class UScrollBox*                                  CachedScrollBox;                                          // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.ActionOrAxis
// 0x0010
struct FActionOrAxis
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAxis;                                                  // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              Scale;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslKeyHintInfo
// 0x0070
struct FTslKeyHintInfo
{
	TArray<struct FActionOrAxis>                       ActionsAndAxes;                                           // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       DisplayName;                                              // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       InputModeText;                                            // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateColor                                 DisplayNameColor;                                         // 0x0040(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      AdditionalCondition;                                      // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.KillQueueInfo
// 0x0148
struct FKillQueueInfo
{
	unsigned char                                      UnknownData00[0x148];                                     // 0x0000(0x0148) MISSED OFFSET
};

// ScriptStruct TslGame.DeathMessage
// 0x0120
struct FDeathMessage
{
	struct FText                                       KillerName;                                               // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FText                                       KillerClanName;                                           // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FText                                       VictimName;                                               // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FText                                       VictimClanName;                                           // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FText                                       KillerUniqueId;                                           // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FUniqueNetIdRepl                            GroggyCauserUniqueId;                                     // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FText                                       VictimUniqueId;                                           // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      bKillerIsOwner : 1;                                       // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      bVictimIsOwner : 1;                                       // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                KillerTeamNum;                                            // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                VictimTeamNum;                                            // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	class UTslDamageType*                              DamageType;                                               // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FText                                       InsertMessage;                                            // 0x00C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	EDamageReason                                      DamageReason;                                             // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bGroggy;                                                  // 0x00D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00DA(0x0002) MISSED OFFSET
	int                                                AlivePlayerNum;                                           // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                AliveTeamNum;                                             // 0x00E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FText                                       DamageCauserName;                                         // 0x00E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	class UTexture*                                    DamageCauserIcon;                                         // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DamageCauserIconRatio;                                    // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsKillerExist;                                           // 0x010C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsStealKilled;                                           // 0x010D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsObserver;                                              // 0x010E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsObserverAndKillerIsSpectated;                          // 0x010F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsObserverAndVictimIsSpectated;                          // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsMidGameBanMessage;                                     // 0x0111(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0112(0x0002) MISSED OFFSET
	float                                              DistanceFromKillerToVictim;                               // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	EOutGamePlatformProvider                           KillerPlatform;                                           // 0x0118(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	EOutGamePlatformProvider                           VictimPlatform;                                           // 0x0119(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x011A(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.KillMessageSettings
// 0x0020
struct FKillMessageSettings
{
	TEnumAsByte<ETextJustify>                          TextAlignment;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FLinearColor                                TextColor;                                                // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData)
	int                                                TextSize;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Duration;                                                 // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bUseFadeIn : 1;                                           // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      bDetailKillMessage : 1;                                   // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.CauseOfDeathData
// 0x0018 (0x0020 - 0x0008)
struct FCauseOfDeathData : public FTableRowBase
{
	EDamageTypeCategory                                DamageTypeCategory;                                       // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	class UTexture*                                    CauseOfDeathIcon;                                         // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconRatio;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ConditionOfDeathData
// 0x0018 (0x0020 - 0x0008)
struct FConditionOfDeathData : public FTableRowBase
{
	EConditionOfDeath                                  ConditionOfDeathCategory;                                 // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	class UTexture*                                    ConditionOfDeathIcon;                                     // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconRatio;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SystemMessageInfo
// 0x0038
struct FSystemMessageInfo
{
	ESystemMessageType                                 MessageType;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Duration;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentDeltaTime;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FText                                       Message;                                                  // 0x0010(0x0018)
	int                                                EliminatorTeamNum;                                        // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EliminatedTeamNum;                                        // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsWipedOut;                                              // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTeamKillMessage;                                         // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.ObserverHudAnimData
// 0x0050
struct FObserverHudAnimData
{
	EObserverHudAnimType                               AnimType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                EliminatorTeamNum;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                EliminatedTeamNum;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     KillingSpreePlayerName;                                   // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	struct FString                                     KillingSpreeClanName;                                     // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	struct FString                                     KillingSpreeTeamName;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	int                                                KillingSpreeTeamNum;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                KillingSpreeKillCount;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	EOutGamePlatformProvider                           KillingSpreePlayerPlatform;                               // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.PlatoonSupportState
// 0x0010
struct FPlatoonSupportState
{
	EPlatoonSupportRequestEventType                    EventType;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                IssuedBy;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bNotifyToAll;                                             // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonFireSupportState
// 0x0010 (0x0020 - 0x0010)
struct FPlatoonFireSupportState : public FPlatoonSupportState
{
	struct FVector                                     SpawnPosition;                                            // 0x0010(0x000C) (IsPlainOldData)
	float                                              AreaRadius;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonCarePackageState
// 0x0014 (0x0024 - 0x0010)
struct FPlatoonCarePackageState : public FPlatoonSupportState
{
	EPlatoonCarePackageType                            CarePackageType;                                          // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                CarePackageId;                                            // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DropPosition;                                             // 0x0018(0x000C) (IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonSupportRequestManifestItem
// 0x0008
struct FPlatoonSupportRequestManifestItem
{
	bool                                               bEnable;                                                  // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CooldownTime;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonSupportRequestManifest
// 0x0018
struct FPlatoonSupportRequestManifest
{
	struct FPlatoonSupportRequestManifestItem          FireSupport;                                              // 0x0000(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FPlatoonSupportRequestManifestItem          WeaponPackage;                                            // 0x0008(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FPlatoonSupportRequestManifestItem          HealingPackage;                                           // 0x0010(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.NicknameIsigniaInfo
// 0x0028
struct FNicknameIsigniaInfo
{
	struct FVector                                     pcValues;                                                 // 0x0000(0x000C) (Edit, IsPlainOldData)
	float                                              PcBorderWidth;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PcSizeBoxWidth;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     consoleValues;                                            // 0x0014(0x000C) (Edit, IsPlainOldData)
	float                                              ConsoleBorderWidth;                                       // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConsoleSizeBoxWidth;                                      // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.FBRTeamInfoImageData
// 0x0060
struct FFBRTeamInfoImageData
{
	TAssetPtr<class UTexture2D>                        IconBackground;                                           // 0x0000(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UTexture2D>                        MemberIndexBackground;                                    // 0x0020(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UTexture2D>                        FullWidgetBackground;                                     // 0x0040(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.TslReportUserInfo
// 0x0048
struct FTslReportUserInfo
{
	struct FString                                     PlayerName;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     ClanName;                                                 // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     NetId;                                                    // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                TeamId;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESubjectToReport                                   SubjectToReport;                                          // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EOutGamePlatformProvider                           PlayerPlatform;                                           // 0x0045(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAIPlayer;                                              // 0x0046(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.PartyInfo
// 0x0028
struct FPartyInfo
{
	struct FString                                     PartyId;                                                  // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsPartyLeader;                                            // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ERequestPartyState                                 PartyState;                                               // 0x0011(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x0012(0x0016) MISSED OFFSET
};

// ScriptStruct TslGame.WebPopupParam
// 0x0038
struct FWebPopupParam
{
	struct FString                                     PopupId;                                                  // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Uri;                                                      // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              X;                                                        // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Width;                                                    // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      BackgroundColor;                                          // 0x0030(0x0004) (BlueprintVisible, IsPlainOldData)
	bool                                               UseBackgroundColor;                                       // 0x0034(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShowButtonGroup;                                          // 0x0035(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.MarkerUIInfo
// 0x0028
struct FMarkerUIInfo
{
	class UTexture2D*                                  MapMarkerTexture;                                         // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EMarkerType                                        MarkerIndex;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FText                                       MarkerName;                                               // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.StartModeProperties
// 0x0050
struct FStartModeProperties
{
	float                                              TimeLimitSeconds;                                         // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastRespawnTimeSeconds;                                   // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        TeamIds;                                                  // 0x0008(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        TeamIndices;                                              // 0x0018(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             TeamLeaderNames;                                          // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             TeamLeaderClanNames;                                      // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TeamCount;                                                // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.InitModeProperties
// 0x0008
struct FInitModeProperties
{
	int                                                GoalScore;                                                // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTeamElimination;                                       // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWarRoyaleBluezone;                                    // 0x0005(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUsingTeamXRay;                                           // 0x0006(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.UmgWidgetBinder_RetainerBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_RetainerBox : public FUmgWidgetBinder_Panel
{
	class URetainerBox*                                CachedRetainerBox;                                        // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.RankingItemWidgets
// 0x0010
struct FRankingItemWidgets
{
	TArray<class UWarModeRankingItemWidget*>           Items;                                                    // 0x0000(0x0010) (ExportObject, ZeroConstructor)
};

// ScriptStruct TslGame.SequenceBase
// 0x0098
struct FSequenceBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
	class UUserWidget*                                 Widget;                                                   // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0020(0x0078) MISSED OFFSET
};

// ScriptStruct TslGame.Sequence_Float
// 0x0008 (0x00A0 - 0x0098)
struct FSequence_Float : public FSequenceBase
{
	class UCurveFloat*                                 FloatCurve;                                               // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.SpawnFilter
// 0x0028
struct FSpawnFilter
{
	bool                                               bLimitSpawnPoints;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FName>                               ValidSpawnPoints;                                         // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FName>                               InvalidSpawnPoints;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.QueuedVehicleSpawn
// 0x0060
struct FQueuedVehicleSpawn
{
	struct FGuid                                       ID;                                                       // 0x0000(0x0010) (IsPlainOldData)
	struct FString                                     SpawnId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	class UClass*                                      VehicleClass;                                             // 0x0020(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               BehaviorTree;                                             // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlackboardData*                             BlackboardData;                                           // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSpawnFilter                                SpawnSettings;                                            // 0x0038(0x0028) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.PathPoint
// 0x0010
struct FPathPoint
{
	class ATslAIWaypointSegment*                       path;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                InputKey;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PathInputPlayZoneDistanceQuery
// 0x0010
struct FPathInputPlayZoneDistanceQuery
{
	int                                                ForwardDistance;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bForwardQueryMade;                                        // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                ReverseDistance;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bReverseQueryMade;                                        // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.WaypointNetworkConnection
// 0x0010
struct FWaypointNetworkConnection
{
	class ATslAIWaypointSegment*                       ConnectedSegment;                                         // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaypointIndex;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanPathSegmentInReverse;                                 // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMustPathSegmentInReverse;                                // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.TslImpactSoundInfo
// 0x0060
struct FTslImpactSoundInfo
{
	class UAkAudioEvent*                               DefaultSoundAk;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               ConcreteSoundAk;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               DirtSoundAk;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               WaterSoundAk;                                             // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               MetalSoundAk;                                             // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               WoodSoundAk;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               GrassSoundAk;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               GlassSoundAk;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               FleshSoundAk;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               RockSoundAk;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               SandSoundAk;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               MudSoundAk;                                               // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AnimUpdateRateSettings
// 0x0078
struct FAnimUpdateRateSettings
{
	bool                                               bUseLookAheadMode;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldUseLodMap;                                         // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	TMap<int, int>                                     LODToFrameSkipMap;                                        // 0x0008(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                BaseNonRenderedUpdateRate;                                // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<float>                                      BaseVisibleDistanceFactorThesholds;                       // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                MaxEvalRateForInterpolation;                              // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.StickyConstraintConfig
// 0x0010
struct FStickyConstraintConfig
{
	float                                              ForwardDamping;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SideDamping;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowForwardSpeedTime;                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowSideSpeedTime;                                         // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslVehicleEngine
// 0x0024
struct FTslVehicleEngine
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
	EVehicleEngineState                                ServerState;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xA];                                       // 0x0002(0x000A) MISSED OFFSET
	float                                              PersistenceTimeDriver;                                    // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              PersistenceTimeNoDriver;                                  // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              ToggleTime;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              StartTime;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x001C(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.AudioEventController
// 0x0018
struct FAudioEventController
{
	float                                              AttenuationDistance;                                      // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StopDistanceAttenuationScale;                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.AirVehicleAudioConfig
// 0x0030
struct FAirVehicleAudioConfig
{
	struct FAudioEventController                       WindEffectController;                                     // 0x0000(0x0018) (Edit, DisableEditOnInstance)
	struct FAudioEventController                       PropellerEffectController;                                // 0x0018(0x0018) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.RotorDamageConfig
// 0x0040
struct FRotorDamageConfig
{
	float                                              DamageCheckInterval;                                      // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRPMForDamage;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedInKmForTrace;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Damage;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaunchSpeed;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaunchUpScale;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RotorDamageBone;                                          // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ComponentTraceOffset;                                     // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // 0x002C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.MappedData
// 0x0010
struct FMappedData
{
	struct FVector2D                                   InputMap;                                                 // 0x0000(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   OutputMap;                                                // 0x0008(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.VehicleSurfaceImpactData
// 0x0010
struct FVehicleSurfaceImpactData
{
	class UParticleSystem*                             ParticleSystem;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.VehicleScrapeEvent
// 0x0028
struct FVehicleScrapeEvent
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
	class UAkComponent*                                ScrapeAkComp;                                             // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleComp;                                             // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.VehicleImpactSettings
// 0x0138
struct FVehicleImpactSettings
{
	bool                                               bUseNewImpactSettings;                                    // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              MaxAbsScrapeDOT;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactThreshold;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactTimeout;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactSpeed;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxImpactSpeed;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFloatRange                                 ScrapeRange;                                              // 0x0018(0x0010) (Edit, DisableEditOnInstance)
	float                                              ScrapeTimeout;                                            // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinScrapeSpeed;                                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScrapeDuration;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScrapeInterpSpeed;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScrapeFadeOutMs;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x003C(0x000C) MISSED OFFSET
	TMap<TEnumAsByte<EPhysicalSurface>, struct FVehicleSurfaceImpactData> SurfaceScrapeMap;                                         // 0x0048(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<TEnumAsByte<EPhysicalSurface>, struct FVehicleSurfaceImpactData> SurfaceImpactMap;                                         // 0x0098(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<TEnumAsByte<EPhysicalSurface>, struct FVehicleScrapeEvent> ActiveScrapeInstances;                                    // 0x00E8(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.VehicleEffectInfo
// 0x0140
struct FVehicleEffectInfo
{
	class UClass*                                      Explosion;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagedPercentMax;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UClass*                                      Damaged;                                                  // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Destroyed;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               EngineSound;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               EngineSound_Remote;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               EngineSound_Stop;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               DelayedExplosion;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Muffler;                                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Muffler2;                                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Boost;                                                    // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Boost2;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FrontTrail;                                               // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      RearTrail;                                                // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Thruster;                                                 // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Thruster2;                                                // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FrontFoamLeft;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FrontFoamRight;                                           // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SpashEffectOverride;                                      // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 Rotor;                                                    // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 RotorDamaged;                                             // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      WingEffect;                                               // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      GroundEffect;                                             // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFloatRange                                 ImpactNormalForceRange;                                   // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      ImpactDefault;                                            // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactConcrete;                                           // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactDirt;                                               // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactWater;                                              // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactMetal;                                              // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactWood;                                               // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactGlass;                                              // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactGrass;                                              // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactRock;                                               // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactSand;                                               // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactFlesh;                                              // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactSnow;                                               // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactSnowRock;                                           // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactIce;                                                // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxImpactCount;                                           // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleLightSettings
// 0x0078
struct FVehicleLightSettings
{
	struct FName                                       HeadLampEmissiveParameter;                                // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeadLampEmissiveValue;                                    // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       TailLampEmissiveParameter;                                // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TailLampEmissiveValue;                                    // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       BoostLampEmissiveParameter;                               // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BoostLampEmissiveValue;                                   // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       LowFuelLampEmissiveParameter;                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowFuelLampEmissiveValue;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowFuelLightPercentage;                                   // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 CurveEngineOn;                                            // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 CurveEngineOff;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineSwitchMaxTime;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FName                                       HeadLightIntensityParamName;                              // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeadLightIntensity_Mat;                                   // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       TailLightIntensityParamName;                              // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TailLightIntensity_Mat;                                   // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleCameraEffectSettings
// 0x0090
struct FVehicleCameraEffectSettings
{
	bool                                               bCalculateVelocityAtHeadPoint;                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              AccelerationInterpSpeed;                                  // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CameraPointName;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   PitchToOffsetInMap;                                       // 0x0010(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   PitchToOffsetOutMap;                                      // 0x0018(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StaticOffset;                                             // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   StaticOffsetPitchMapIn;                                   // 0x002C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   StaticOffsetPitchMapOut;                                  // 0x0034(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ZOffset;                                                  // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelerationMovementScalar;                               // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelerationMovementSizeClamp;                            // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PostClampAccelerationScale;                               // 0x0048(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AccelerationTargetScale;                                  // 0x0054(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   VelocityToFovInMap;                                       // 0x0060(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityToFovMaxOffset;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInterpolateCameraOffset;                                 // 0x006C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              CameraOffsetInterpSpeed;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseStaticOffsetYawMap;                                   // 0x0074(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	struct FVector2D                                   StaticOffsetYawMapIn;                                     // 0x0078(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.TempComponentInfo
// 0x0028
struct FTempComponentInfo
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
	class USceneComponent*                             ParentComponent;                                          // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             CurrentComponent;                                         // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.MatchPreparerClass
// 0x0010
struct FMatchPreparerClass
{
	EMatchStartType                                    Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UClass*                                      Class;                                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ModeStringParameter
// 0x0020
struct FModeStringParameter
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.CustomGameUpdateCharacterInfo
// 0x000C
struct FCustomGameUpdateCharacterInfo
{
	float                                              ReviveCastingTime;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierGroggyDamagePerSecond;                          // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierPunchDamage;                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LimitCustomStringParameter
// 0x0018
struct FLimitCustomStringParameter
{
	struct FString                                     CustomStringParameter;                                    // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MinLimit;                                                 // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxLimit;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.RedZoneCustomOption
// 0x001C
struct FRedZoneCustomOption
{
	bool                                               bIsActive;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              MultiplierRedZoneExplosionDensity;                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierRedZoneStartTime;                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierRedZoneEndTime;                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierRedZoneExplosionDelay;                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierRedZoneDuration;                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiplierRedZoneArea;                                    // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.BlackZoneCustomOption
// 0x0040
struct FBlackZoneCustomOption
{
	bool                                               bIsActive;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              PlayerNearBuildingMaxDamage;                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerNearBuildingMaxDistance;                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StrikeInnerRadius;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StrikeMidRadius;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StrikeOuterRadius;                                        // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDelay;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StandbyDelay;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RequestedStandbyDelay;                                    // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BombingDelay;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxMidCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxFarCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MinimumBuildingsToDestroy;                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BombingInterval;                                          // 0x0034(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bUseBlackZoneCurves;                                      // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.BlueZoneCustomOption
// 0x0024
struct FBlueZoneCustomOption
{
	int                                                PhaseNum;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDelay;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WarningDuration;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReleaseDuration;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PoisonGasDamagePerSecond;                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RadiusRate;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpreadRatio;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandRatio;                                                // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CircleAlgorithm;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LootTruckCustomOption
// 0x0010
struct FLootTruckCustomOption
{
	bool                                               bEnabled;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Health;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseRandomizedWeaponKits;                                 // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseUniqueWeaponKits;                                     // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.PlayerStartsUserCount
// 0x0010
struct FPlayerStartsUserCount
{
	int                                                PlayerCount;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class ATslPlayerStart*                             PlayerStart;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.RankingInfo
// 0x0018
struct FRankingInfo
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0004(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                IncreaseRanking;                                          // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                Score;                                                    // 0x000C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                Order;                                                    // 0x0010(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTeamElimination;                                       // 0x0014(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsConnection;                                            // 0x0015(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.PointInfo
// 0x0008
struct FPointInfo
{
	int                                                TeamCount;                                                // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                RoundPoint;                                               // 0x0004(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.Teams
// 0x0018
struct FTeams
{
	int                                                TeamNum;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<class ATeam*>                               Members;                                                  // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerRating
// 0x0018
struct FWuLogPlayerRating
{
	struct FString                                     AccountId;                                                // 0x0000(0x0010) (ZeroConstructor)
	int                                                Rating;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogMatchRating
// 0x0010 (0x0070 - 0x0060)
struct FWuLogMatchRating : public FLogBase
{
	TArray<struct FWuLogPlayerRating>                  PlayerRatings;                                            // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslTransportValue
// 0x0010
struct FTslTransportValue
{
	struct FName                                       TransportType;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnable;                                                  // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.NpcSpawnPointInfo
// 0x001C
struct FNpcSpawnPointInfo
{
	int                                                NpcType;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0004(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (IsPlainOldData)
};

// ScriptStruct TslGame.NpcWaveInfo
// 0x0018
struct FNpcWaveInfo
{
	float                                              InitDelay;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SpawnNum;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FNpcSpawnPointInfo>                  SpawnPointArray;                                          // 0x0008(0x0010) (ZeroConstructor, Transient)
};

// ScriptStruct TslGame.WeaponData
// 0x0190
struct FWeaponData
{
	float                                              TargetingFOV;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HoldBreathFOV;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Rarity;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SocketOffset_Shoulder;                                    // 0x0010(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SocketRotationOffset_Shoulder;                            // 0x001C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SocketOffset_Hand;                                        // 0x0028(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SocketRotationOffset_Hand;                                // 0x0034(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyLocationOffset;                                     // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyRotationOffset;                                     // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyGripPoseLeft;                                       // 0x0042(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponGripLeftHand                                WeaponGripLeft;                                           // 0x0043(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAnimWeaponSpecificClass                           AnimWeaponSpecificClass;                                  // 0x0045(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponClass                                       AnimationWeaponClassOverride;                             // 0x0046(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAlwaysArmed;                                             // 0x0047(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDefaultScoreMultiplier;                               // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              ScoreMultiplierByDamage;                                  // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreMultiplierByKill;                                    // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_Pitch;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_YawOffset;                                   // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_Movement;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_Stand;                                       // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_Crouch;                                      // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayModifier_Prone;                                       // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDynamicReverbAK;                                      // 0x006C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	TArray<float>                                      IronSightZeroingDistances;                                // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              AnimationKick;                                            // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class UAnimMontage*                                RecoilMontage;                                            // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DestructibleDoor;                                         // 0x0090(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EThrownWeaponType                                  ThrownType;                                               // 0x0091(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	float                                              WeaponEquipDuration;                                      // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponUnequipDuration;                                    // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponBoltActionTrigger;                                  // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponReadyDuration;                                      // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceFireAfterEquip;                                     // 0x00A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	float                                              PhysicalBodyHitImpactPower;                               // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	struct FName                                       WeaponSensitivityOverride;                                // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x50];                                      // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty TslGame.WeaponData.RestrictedStances
	float                                              MovementModifierRunning;                                  // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementModifierSprinting;                                // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementModifierJumpVelocity;                             // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlockPeeking;                                            // 0x0114(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVisibleWhenUnarmed;                                      // 0x0115(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0116(0x0002) MISSED OFFSET
	class UStaticMesh*                                 WeaponStaticMesh;                                         // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               WeaponDropHitSound;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	struct FTransform                                  AddTransformOnBackpack_Primary;                           // 0x0130(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  AddTransformOnBackpack_Secondary;                         // 0x0160(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAttachmentTagPositionData
// 0x0010
struct FWeaponAttachmentTagPositionData
{
	struct FName                                       AttachmentTag;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AttachmentPoint;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAttachmentPositionData
// 0x0020
struct FWeaponAttachmentPositionData
{
	EWeaponAttachmentSlotID                            AttachmentSlotID;                                         // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       AttachmentPoint;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FWeaponAttachmentTagPositionData>    AttachmentPointByTag;                                     // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.WeaponAttachmentAssetData
// 0x0040
struct FWeaponAttachmentAssetData
{
	EWeaponAttachmentSlotID                            AttachmentSlotID;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       AttachmentTag;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UStaticMesh>                       AttachmentMeshAsset;                                      // 0x0010(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       AttachmentMeshName;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      AttachmentTemplate;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponBasicAnim
// 0x0018
struct FWeaponBasicAnim
{
	class UAnimMontage*                                PullOut;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                PutIn;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Pickup;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponRollAnim
// 0x0010
struct FWeaponRollAnim
{
	class UAnimMontage*                                RollLeft;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RollRight;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AnimMontageData
// 0x0010
struct FAnimMontageData
{
	class UAnimMontage*                                Montage;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SkinParam
// 0x0010
struct FSkinParam
{
	ESkinCategory                                      SkinCategory;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       SkinName;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ReplicatedSkinParam
// 0x0020
struct FReplicatedSkinParam
{
	struct FName                                       SkinItemID;                                               // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSkinParam                                  SkinParam;                                                // 0x0008(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient)
	int                                                SkinOwnerPlayerId;                                        // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ReplicatedMasteryItem
// 0x0004
struct FReplicatedMasteryItem
{
	uint16_t                                           CharmId;                                                  // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           MeshId;                                                   // 0x0002(0x0002) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.BrightnessConfig
// 0x0020
struct FBrightnessConfig
{
	class UCurveVector*                                ReticleBrightnessSettingsCurve;                           // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ReticleBrightnessParamX;                                  // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ReticleBrightnessParamY;                                  // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ReticleBrightnessParamZ;                                  // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ReticleTextureData
// 0x0040
struct FReticleTextureData
{
	float                                              ReticleAngularSize;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   ReticleCenter;                                            // 0x0004(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UTexture2D*                                  ReticleTexture;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseHaloTexture;                                          // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              HaloTextureScale;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ReticleColor;                                             // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ReticleScale;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BrightSceneLuminanceMultiplier;                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BrightSceneOpacityMultiplier;                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BrightSceneOpacityMultiplierLowResolution;                // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ScopeGlintConfig
// 0x003C
struct FScopeGlintConfig
{
	bool                                               GlintEnabled;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector2D                                   GlintStartFade;                                           // 0x0004(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ScopeEndPositionLS;                                       // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeRadiusLS;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GlintRadiusScreen;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeRadiusScreen;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                GlintColor;                                               // 0x0024(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   GlintVisibilityArcLength;                                 // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAttachmentData
// 0x0258
struct FWeaponAttachmentData
{
	EWeaponAttachmentSlotID                            AttachmentSlotID;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       AttachmentTag;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Name;                                                     // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       MouseSensitiveName;                                       // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MagnificationFOVMaxIncrement;                             // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MagnificationFOVSteps;                                    // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MagnificationFOV;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FBrightnessConfig                           ReticleBrightnessConfig;                                  // 0x0030(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<float>                                      ZeroingDistances;                                         // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, class UMaterialInstance*>       ReticleMaterialOverrides;                                 // 0x0060(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, class UReticleSettings*>        ReticleSettingsOverrides;                                 // 0x00B0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UReticlePostprocessData*                     ScopePostprocessData;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecreaseRecoilPatternScale;                               // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoPerClip;                                              // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadAnimationPlayRate;                                  // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MultipleFiringBulletsSpread;                              // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MultipleFiringSpreadBase;                                 // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilMultiplierHorizontal;                               // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilMultiplierVertical;                                 // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilRecoveryMultiplier;                                 // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwayMultiplier;                                           // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimationKickMultiplier;                                  // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMultiplier;                                      // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ADSSpeedMultiplier;                                       // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     FPPSocketOffset;                                          // 0x0138(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	int                                                GripType_MN;                                              // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BarrelLengthAdditive;                                     // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UParticleSystem*                             MuzzleFx;                                                 // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MuzzleAttachPoint;                                        // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponGripLeftHand                                WeaponGripLeft;                                           // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsSuppressor;                                            // 0x0161(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0162(0x0006) MISSED OFFSET
	struct FStringAssetReference                       MuzzleSound;                                              // 0x0168(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UAnimMontage*                                CharacterReloadTactical;                                  // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                WeaponReloadTactical;                                     // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadCharge;                                    // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                WeaponReloadCharge;                                       // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsePelletGridOverride;                                   // 0x0198(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	TMap<int, struct FVector2D>                        PelletGridOverride;                                       // 0x01A0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              StabilitySpeedScalar;                                     // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StabilityMinForceAdditive;                                // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilEarlyExitScale;                                     // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CantedWeaponRotation;                                     // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseReticleTypeOverride;                                  // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDefaultReticleCaching;                                // 0x0201(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0202(0x0006) MISSED OFFSET
	TArray<struct FReticleTextureData>                 ReticleTextureDataArray;                                  // 0x0208(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FScopeGlintConfig                           ScopeGlintConfig;                                         // 0x0218(0x003C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ReticleBrightSceneVisibility
// 0x000C
struct FReticleBrightSceneVisibility
{
	float                                              LuminanceMultiplier;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OpacityMultiplier;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OpacityMultiplierLowResolution;                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponPPSettings
// 0x00A8
struct FWeaponPPSettings
{
	float                                              BlurLevel;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeRadiusNear;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeRadiusFar;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   ReticleRect;                                              // 0x000C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ReticleAngularSize;                                       // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ReticleTint;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ReticleGamma;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UTexture*                                    ReticleTexture;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReticleExtendTextureBorder;                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UReticleSettings*                            ReticleSettings;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeLensDistortion;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeLensCA;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ScopeLensTint;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ScopeOuterBrightness;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DepthBlurPower;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DepthBlurWhitePoint;                                      // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DepthBlurBlackPoint;                                      // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RelativeOffsetMap;                                        // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ParallaxMovementScale;                                    // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParallaxRadiusScale;                                      // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BloomIntensity;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearClipStaticOffset;                                     // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearClipMinClamp;                                         // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     WeaponCycleCameraOffset;                                  // 0x008C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FReticleBrightSceneVisibility               BrightSceneVisibility;                                    // 0x0098(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WeaponGunConfigReplacement
// 0x01F8
struct FWeaponGunConfigReplacement
{
	struct FName                                       AmmoItemID;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             TracerClass;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TracerAmmoMod;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TracerAmmoMin;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoPerClip;                                              // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeBetweenShots;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<EFiringMode, float>                           TimeBetweenShotsOverride;                                 // 0x0020(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bUseTimeBetweenBursts;                                    // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	float                                              TimeBetweenBursts;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoAnimReloadDuration;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<EFiringMode>                                FiringModes;                                              // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                BurstShots;                                               // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BurstDelay;                                               // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BulletPerFiring;                                          // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringBulletsSpread;                                      // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsArrowProjectile;                                       // 0x00A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRotationFromBarrelWhenScoped;                            // 0x00A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponReloadMethod                                ReloadMethod;                                             // 0x00A2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x00A3(0x0001) MISSED OFFSET
	float                                              ReloadDurationByOneInitial;                               // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadDurationByOneLoop;                                  // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementModifierAim;                                      // 0x00AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementModifierScope;                                    // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponLength;                                             // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShoulderLength;                                           // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponToShoulderOffset;                                   // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponSuppressorLength;                                   // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TraceRadius;                                              // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TraceAdditiveZ;                                           // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DebugWeaponCollision;                                     // 0x00CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	struct FVector                                     HandWeaponOffset;                                         // 0x00D0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HandWeaponOffsetFPP;                                      // 0x00DC(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bManualCycleAfterShot;                                    // 0x00E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bManualCycleInitialStateReady;                            // 0x00E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanScopeDuringWeaponCycle;                               // 0x00EA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x00EB(0x0001) MISSED OFFSET
	float                                              LongTailDelay;                                            // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseConstScope;                                           // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseGridPelletSpread;                                     // 0x00F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x00F2(0x0006) MISSED OFFSET
	TMap<int, struct FVector2D>                        PelletGrid;                                               // 0x00F8(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              PelletGridScale;                                          // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GridPelletSpreadHalfAngle;                                // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsePelletManager;                                        // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	float                                              PelletScale;                                              // 0x0154(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PelletRandomScale;                                        // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSweepDistance;                                         // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StabilitySpeedModifier;                                   // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StabilityForceModifier;                                   // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseReloadScalarOverride;                                 // 0x0168(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0169(0x0003) MISSED OFFSET
	float                                              ReloadSpeedScalar;                                        // 0x016C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ADSTimeMultiplier;                                        // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseInertiaPitchAdditive;                                 // 0x0174(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0175(0x0003) MISSED OFFSET
	float                                              InertiaPitchAdditiveInterpSpeed;                          // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseTracerParticle;                                       // 0x017C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExplodeOnImpact;                                         // 0x017D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x017E(0x0002) MISSED OFFSET
	int                                                ExplosionDamage;                                          // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionRadius;                                          // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageCurve;                                              // 0x0188(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0190(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAmmoAttachedToWeapon;                                    // 0x0198(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	class UClass*                                      ExplosionTemplate;                                        // 0x01A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<EFiringMode, class UAkAudioEvent*>            GunshotFiremodeMap;                                       // 0x01A8(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.WeaponDeviationConfig
// 0x0044
struct FWeaponDeviationConfig
{
	float                                              DeviationBase;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationBaseAim;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationBaseADS;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MOA;                                                      // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGain;                                      // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainAim;                                   // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainADS;                                   // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMax;                                             // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMinMove;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMaxMove;                                         // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMultiplier;                                  // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMinReferenceVelocity;                        // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMaxReferenceVelocity;                        // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceStand;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceCrouch;                                    // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceProne;                                     // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceJump;                                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAnimConfig
// 0x01C8
struct FWeaponAnimConfig
{
	class UAnimMontage*                                Fire;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bLoopedFire : 1;                                          // 0x0008(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	class UAnimMontage*                                Reload;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace1D*                               CharacterGripBlendspace;                                  // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpaceBase*                             CharacterLHGripBlendspace;                                // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterFire;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterFireCycle;                                       // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterFireSelector;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadTactical;                                  // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadCharge;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadByOneStart;                                // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadByOneStop;                                 // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CharacterReloadByOneSingle;                               // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                WeaponReloadTactical;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                WeaponReloadCharge;                                       // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                WeaponInspectMontage;                                     // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponClass                                       LobbyAnimClassOverride;                                   // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseLobbyAnimClassOverride;                               // 0x0081(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0082(0x0002) MISSED OFFSET
	float                                              ReloadDurationTactical;                                   // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadDurationCharge;                                     // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadDurationStart;                                      // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadDurationLoop;                                       // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadDurationMagOut;                                     // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseBoltAction;                                           // 0x0098(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	float                                              FireCycleDelay;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireCycleDuration;                                        // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CycleAfterReloadDelay;                                    // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCycleAfterLastShot;                                      // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCycleDuringReload;                                       // 0x00A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	int                                                ShotsPerBoltAction;                                       // 0x00AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ShotCameraShake;                                          // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ShotCameraShakeIronsight;                                 // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ShotCameraShakeHolo;                                      // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ShotCameraShakeADS;                                       // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 CycleCameraAnim;                                          // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKickADS;                                            // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKick_MovementSpeedMax;                              // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKick_MovementMaxMultiplier;                         // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RecoilADSSocketOffsetScale;                               // 0x00E4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MagDropLinearVelocity;                                    // 0x00F0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MagDropAngularVelocity;                                   // 0x00FC(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              InertiaInterpMultiplier;                                  // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InertiaClampMultiplier;                                   // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseBurstRecoilMap;                                       // 0x0110(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	struct FVector2D                                   BurstRecoilInMap;                                         // 0x0114(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   BurstRecoilOutMap;                                        // 0x011C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DiscardWeaponDuration;                                    // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<EAnimStance, float>                           ShakeScaleStanceMap;                                      // 0x0128(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<EAnimStance, float>                           ADSAnimRecoilStanceMap;                                   // 0x0178(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.BlastConfig
// 0x0028
struct FBlastConfig
{
	int                                                BlastDamage;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlastRadius;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlastHalfHeight;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DamageCurve;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageCurveStaticImpactPressure;                          // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.DecalEffectData
// 0x0060
struct FDecalEffectData
{
	class UMaterial*                                   Material;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   RicochetMaterial;                                         // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFloatRange                                 Size;                                                     // 0x0010(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFloatRange                                 NormalFadeAngle;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              FadeScreenSize;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeStartDelay;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeDuration;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRandomInput;                                          // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRandomRoll;                                           // 0x003D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReversal;                                                // 0x003E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRicochet;                                             // 0x003F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DotProductLongScaleMapIn;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DotProductLongScaleMapOut;                                // 0x0048(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DotProductLatScaleMapIn;                                  // 0x0050(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DotProductLatScaleMapOut;                                 // 0x0058(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.DecalEffectDataSet
// 0x0788
struct FDecalEffectDataSet
{
	struct FDecalEffectData                            DefaultDecal;                                             // 0x0000(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            ConcreteDecal;                                            // 0x0060(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            RockDecal;                                                // 0x00C0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            DirtDecal;                                                // 0x0120(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            SandDecal;                                                // 0x0180(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            WaterDecal;                                               // 0x01E0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            MetalDecal;                                               // 0x0240(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            WoodDecal;                                                // 0x02A0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            GlassDecal;                                               // 0x0300(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            GrassDecal;                                               // 0x0360(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            FleshDecal;                                               // 0x03C0(0x0060) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDecalEffectData                            MudDecal;                                                 // 0x0420(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            CropsDecal;                                               // 0x0480(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            CactusDecal;                                              // 0x04E0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            PaperDecal;                                               // 0x0540(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            RubberDecal;                                              // 0x05A0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            FabricDecal;                                              // 0x0600(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            SnowDecal;                                                // 0x0660(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            SnowRockDecal;                                            // 0x06C0(0x0060) (Edit, DisableEditOnInstance)
	struct FDecalEffectData                            IceDecal;                                                 // 0x0720(0x0060) (Edit, DisableEditOnInstance)
	bool                                               bHideOnMovableObjects;                                    // 0x0780(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSearchForStaticSurface;                                  // 0x0781(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0782(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.MeleeWeaponAnim
// 0x0790
struct FMeleeWeaponAnim
{
	class UAnimMontage*                                AttackAnim;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FDecalEffectDataSet                         AttackDecalEffectDataSet;                                 // 0x0008(0x0788) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemThrowParams
// 0x0048
struct FItemThrowParams
{
	struct FRotator                                    MeshRotation;                                             // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x000C(0x000C) (IsPlainOldData)
	struct FVector                                     Direction;                                                // 0x0018(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	class UThrowableItemDataAsset*                     ThrowableConfig;                                          // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                FakeProjectileIndex;                                      // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class ATslCharacter*                               TargetCharacter;                                          // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         MovingBase;                                               // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.ThrowableAnim
// 0x0018
struct FThrowableAnim
{
	class UAnimMontage*                                PinOff;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Cooking;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Release;                                                  // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ThrowableWeaponData
// 0x00B0
struct FThrowableWeaponData
{
	class UClass*                                      ProjectileClass;                                          // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowTrajectory;                                          // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       CookingSocketName;                                        // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CookingEffectClass;                                       // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Ring;                                                     // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RingAttachSocket;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EProjectileExplosionStartType                      ExplosionStartType;                                       // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              ExplosionDelay;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCustomCookingExplosionDelay;                          // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              CookingExplosionDelay;                                    // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireDelay;                                                // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActivationTimeLimit;                                      // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              StandAnim;                                                // 0x0048(0x0018) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              CrouchAnim;                                               // 0x0060(0x0018) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              ProneAnim;                                                // 0x0078(0x0018) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 SpeedCurve;                                               // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 PitchCurve;                                               // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThrowTime;                                                // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThrowCooldownDuration;                                    // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanBeCooked;                                             // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ShowWeaponParams
// 0x0020
struct FShowWeaponParams
{
	struct FString                                     ItemID;                                                   // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SkinId;                                                   // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.DynamicWeatherSetting
// 0x0068
struct FDynamicWeatherSetting
{
	struct FString                                     WeatherName;                                              // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	class ATslDynamicWeather*                          DynamicWeather;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              Weight;                                                   // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DirectionalLightIntensity;                                // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DirectionalLightTemperature;                              // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DirectionalLightVolumetricScattering;                     // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              SkyLightIntensity;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UTextureCube*                                SkyLightCubemap;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              SkyLightCubemapAngle;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              SkyLightCubemapResolution;                                // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      bUseBlendSkyBox : 1;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      bRefreshLightSetting : 1;                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      bOverrideDurationTime : 1;                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              OverrideDurationTimeMin;                                  // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              OverrideDurationTimeMax;                                  // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      bUseDistanceDepthBlur : 1;                                // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              DepthBlurIntensity;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DepthBlurCurveAsset;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      bClearFootprints : 1;                                     // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.DynamicWeatherReplicationData
// 0x0010
struct FDynamicWeatherReplicationData
{
	float                                              DirectionalLightIntensity;                                // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DirectionalLightTemperature;                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DirectionalLightVolumetricScattering;                     // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              SkyLightIntensity;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct TslGame.LocalWeatherSetting
// 0x0028
struct FLocalWeatherSetting
{
	float                                              FogDensity;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                FogColor;                                                 // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	float                                              FogStartDistance;                                         // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              VolFogExtinctionScale;                                    // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              WeatherParticleSpawnScale;                                // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      bUseWetEffectWithSpawnScale : 1;                          // 0x0020(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              SoundScale;                                               // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct TslGame.TslLocalWeatherVolume
// 0x0030
struct FTslLocalWeatherVolume
{
	class APostProcessVolume*                          PostProcessVolume;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FLocalWeatherSetting                        LocalWeatherSetting;                                      // 0x0008(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
};

// ScriptStruct TslGame.MotoRollDampSettings
// 0x001C
struct FMotoRollDampSettings
{
	bool                                               bVelDampening;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              StabilizeAirPercentage;                                   // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StabilizeAirTorquePercentage;                             // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollVelDampeningContact;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollVelDampeningNoContact;                                // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollVelDampeningInterp;                                   // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseLinearInterp;                                         // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.IdleAnimationSettings
// 0x0020
struct FIdleAnimationSettings
{
	class UAnimSequence*                               AnimAsset;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FInt32Range                                 LoopingCounter;                                           // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ChanceToPlay;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.IdleAnimationList
// 0x0010
struct FIdleAnimationList
{
	TArray<struct FIdleAnimationSettings>              IdleAnimations;                                           // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.StatTrakData
// 0x0004
struct FStatTrakData
{
	int                                                NumKills;                                                 // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.StatTrakDataPair
// 0x0018
struct FStatTrakDataPair
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FStatTrakData                               BeginStatTrakData;                                        // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FStatTrakData                               CountStatTrakData;                                        // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, Transient)
};

// ScriptStruct TslGame.WuStringBoolPair
// 0x0018
struct FWuStringBoolPair
{
	struct FString                                     First;                                                    // 0x0000(0x0010) (ZeroConstructor)
	bool                                               second;                                                   // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuStringFloatPair
// 0x0018
struct FWuStringFloatPair
{
	struct FString                                     First;                                                    // 0x0000(0x0010) (ZeroConstructor)
	float                                              second;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuStringStringPair
// 0x0020
struct FWuStringStringPair
{
	struct FString                                     First;                                                    // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     second;                                                   // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuCharacterCustomizationOptions
// 0x0060
struct FWuCharacterCustomizationOptions
{
	TArray<struct FWuStringBoolPair>                   BoolOptions;                                              // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FWuStringFloatPair>                  FloatOptions;                                             // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FWuStringStringPair>                 StringOptions;                                            // 0x0020(0x0010) (ZeroConstructor)
	TArray<struct FString>                             ItemIDs;                                                  // 0x0030(0x0010) (ZeroConstructor)
	struct FString                                     Emotes;                                                   // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FString>                             IngameEquipableItemIds;                                   // 0x0050(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.VoiceConnectionInfo
// 0x0078
struct FVoiceConnectionInfo
{
	struct FString                                     ServerURL;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Domain;                                                   // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     Issuer;                                                   // 0x0020(0x0010) (ZeroConstructor)
	bool                                               bIsEnableGVoice;                                          // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     GVoiceServerUrl;                                          // 0x0038(0x0010) (ZeroConstructor)
	struct FString                                     GVoiceAppKey;                                             // 0x0048(0x0010) (ZeroConstructor)
	struct FString                                     GVoiceAppId;                                              // 0x0058(0x0010) (ZeroConstructor)
	int                                                GVoiceProximalMaxRange;                                   // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                GVoiceDistNear;                                           // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                GVoiceDistFar;                                            // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GVoiceVolPercentage;                                      // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslWeaponAnimInfo
// 0x0020
struct FTslWeaponAnimInfo
{
	unsigned char                                      bIsArmed : 1;                                             // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsGun : 1;                                               // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsHipped : 1;                                            // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	EWeaponClass                                       WeaponClass;                                              // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       LobbyAnimationClass;                                      // 0x0005(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EThrownWeaponType                                  ThrownWeaponClass;                                        // 0x0006(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EAnimWeaponType                                    AnimWeaponType;                                           // 0x0007(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlendSpace1D*                               GripBlendspace;                                           // 0x0008(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UBlendSpaceBase*                             LHGripBlendspace;                                         // 0x0010(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GripTypeIndex;                                            // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PhysicalMaterialPenetrationConfig
// 0x0008
struct FPhysicalMaterialPenetrationConfig
{
	float                                              Resistanse;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Deflection;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponPenetrationConfig
// 0x0050
struct FWeaponPenetrationConfig
{
	TMap<TEnumAsByte<EPhysicalSurface>, float>         PowerMultipliers;                                         // 0x0000(0x0050) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.WheelTypeInfo
// 0x0028
struct FWheelTypeInfo
{
	unsigned char                                      AtlasIndex;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<class UClass*>                              WheelTypes;                                               // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UClass*>                              ExemptedWheelTypes;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.WindowGlassVariant
// 0x0060
struct FWindowGlassVariant
{
	TAssetPtr<class UStaticMesh>                       StaticMesh;                                               // 0x0000(0x0020)
	TAssetPtr<class UDestructibleMesh>                 DestructibleMesh;                                         // 0x0020(0x0020)
	class UAkAudioEvent*                               DestructSound;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           PhysicalMaterial;                                         // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DestroyDelayAfterDestructed;                              // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EIndoorOutdoorMask>                    IndoorOutdoorMask;                                        // 0x0054(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      LightingChannel1 : 1;                                     // 0x0055(0x0001)
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                         // 0x0056(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0057(0x0001) MISSED OFFSET
	struct FName                                       CollisionProfileName;                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DeadPlayerRespawnInfo
// 0x0008
struct FDeadPlayerRespawnInfo
{
	class ATslWarPlayerState*                          PlayerState;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIControllerCachedData
// 0x0098
struct FAIControllerCachedData
{
	class ATslNewBotCharacter*                         ControlledPawn;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x0008(0x0090) MISSED OFFSET
};

// ScriptStruct TslGame.SpecialAmmo
// 0x0018
struct FSpecialAmmo
{
	struct FName                                       AmmoItemID;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoItemSubType;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RandomMin;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RandomMax;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AIShootingInfo
// 0x0010
struct FAIShootingInfo
{
	float                                              ProbabilityFirstHit;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DurationTime;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DurationDamageMax;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DurationEmptyShot;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AITargetingData
// 0x0008
struct FAITargetingData
{
	float                                              Distance;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETargetingType                                     TargetingMode;                                            // 0x0004(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.AttackMode
// 0x0020
struct FAttackMode
{
	float                                              AttackDistance;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AttackId;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SwapIntervalTime;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<EWeaponClass>                               WeaponSortedBestToWorst;                                  // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.RoamingActionGroup
// 0x0010
struct FRoamingActionGroup
{
	TArray<ERoamingActionType>                         ActionList;                                               // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslWidgetConfig
// 0x0030
struct FTslWidgetConfig
{
	struct FStringAssetReference                       WidgetClassReference;                                     // 0x0000(0x0010) (Edit, BlueprintVisible)
	bool                                               bDefaultShow;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseMouse;                                                // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCloseByEscape;                                           // 0x0012(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRemovedByHiding;                                         // 0x0013(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZOrder;                                                   // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUsePcOnly;                                               // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConsoleOnly;                                          // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCharacterHudUi;                                          // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSpectatorHudUi;                                          // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bObserverHudUi;                                           // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReplayHudUi;                                             // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeagueReplayHudUi;                                       // 0x001E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETslWidgetCreationMethod                           WidgetCreationMethod;                                     // 0x001F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             HideWidgetList;                                           // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TslWidgetState
// 0x0060
struct FTslWidgetState
{
	struct FTslWidgetConfig                            Config;                                                   // 0x0000(0x0030)
	class UClass*                                      WidgetClass;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	class UUserWidget*                                 Widget;                                                   // 0x0040(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0048(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.ViewModeActorAsyncLoadCacheData
// 0x0050
struct FViewModeActorAsyncLoadCacheData
{
	TAssetPtr<class UClass>                            VehicleClass;                                             // 0x0000(0x0020) (Transient)
	struct FName                                       SkinItemID;                                               // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	EViewModeCategory                                  ViewModeCategory;                                         // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     ViewModeScene;                                            // 0x0040(0x0010) (ZeroConstructor, Transient)
};

// ScriptStruct TslGame.TslPlayerStateSummary
// 0x0040
struct FTslPlayerStateSummary
{
	struct FString                                     UniqueId;                                                 // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TeamNumber;                                               // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HeadShots;                                                // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumKills;                                                 // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TotalGivenDamages;                                        // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LongestDistanceKill;                                      // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TotalMovedDistanceMeter;                                  // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslReplaySummary
// 0x0090
struct FTslReplaySummary
{
	struct FString                                     MatchId;                                                  // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bIsServerRecording;                                       // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     RecordUserId;                                             // 0x0018(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RecordAccountId;                                          // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RecordUserNickName;                                       // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MapName;                                                  // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WeatherName;                                              // 0x0058(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RegionName;                                               // 0x0068(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NumPlayers;                                               // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumTeams;                                                 // 0x007C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslPlayerStateSummary>              PlayerStateSummaries;                                     // 0x0080(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.LobbyItemPair
// 0x0028
struct FLobbyItemPair
{
	struct FText                                       ItemName;                                                 // 0x0000(0x0018) (Edit, BlueprintVisible)
	struct FString                                     BlueprintId;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.LobbyWeaonItemPair
// 0x0010 (0x0038 - 0x0028)
struct FLobbyWeaonItemPair : public FLobbyItemPair
{
	EWeaponClass                                       WeaponClassEnum;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       SkinTag;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LobbySkinPair
// 0x0010 (0x0038 - 0x0028)
struct FLobbySkinPair : public FLobbyItemPair
{
	TArray<struct FName>                               SkinnableTagList;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.NearClippingLevelOverZ
// 0x0008
struct FNearClippingLevelOverZ
{
	float                                              Z;                                                        // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	ENearClippingLevel                                 Level;                                                    // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.AutoSpectateInfo
// 0x0020
struct FAutoSpectateInfo
{
	EAutoSpectatePriority                              AutoSpectatePriority;                                     // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                TeamId;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerNetId;                                              // 0x0008(0x0010) (Edit, ZeroConstructor)
	float                                              SortingSize;                                              // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.OptionSyncData
// 0x0005
struct FOptionSyncData
{
	bool                                               bAutoEquipAttachment;                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoEquipAttachmentFromInventory;                        // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	EAutoEquipAttachmentForScopeMode                   AutoEquipAttachmentForScope;                              // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoReplaceAttachment;                                   // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoWeaponSkinReplacement;                               // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LostPacketDataForNet
// 0x0006
struct FLostPacketDataForNet
{
	uint16_t                                           NumLoss;                                                  // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           SizeBitsPlain;                                            // 0x0002(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           SizeBitsEncryped;                                         // 0x0004(0x0002) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LostBunchDataForNet
// 0x0010
struct FLostBunchDataForNet
{
	uint16_t                                           NumSent;                                                  // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           NumLoss;                                                  // 0x0002(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Content;                                                  // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.OutPacketLossReportForNet
// 0x0030
struct FOutPacketLossReportForNet
{
	float                                              ElapsedTimeSec;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           NumOutBunch;                                              // 0x0004(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           NumOutPacket;                                             // 0x0006(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           NumOutPacketNaked;                                        // 0x0008(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	TArray<struct FLostPacketDataForNet>               NakedPacketDataList;                                      // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FLostBunchDataForNet>                NakedBunchDataList;                                       // 0x0020(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslInputData
// 0x0006
struct FTslInputData
{
	int16_t                                            DeltaX;                                                   // 0x0000(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
	int16_t                                            DeltaY;                                                   // 0x0002(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
	uint16_t                                           PassedMillisec;                                           // 0x0004(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslPackedInputData
// 0x0028
struct FTslPackedInputData
{
	TArray<struct FTslInputData>                       InputDataList;                                            // 0x0000(0x0010) (ZeroConstructor, Transient)
	TArray<uint16_t>                                   FireList;                                                 // 0x0010(0x0010) (ZeroConstructor, Transient)
	float                                              LastFireRealTimeSec;                                      // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuMemoryStat
// 0x0018
struct FWuMemoryStat
{
	struct FString                                     Name;                                                     // 0x0000(0x0010) (ZeroConstructor)
	float                                              Value;                                                    // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuDevLogElement
// 0x0020
struct FWuDevLogElement
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuDevLog
// 0x0020 (0x0080 - 0x0060)
struct FWuDevLog : public FLogBase
{
	struct FString                                     DevLogKey;                                                // 0x0060(0x0010) (ZeroConstructor)
	TArray<struct FWuDevLogElement>                    DevLogs;                                                  // 0x0070(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslClientTeamActorValidityCheckData_TeamInfo
// 0x0018
struct FTslClientTeamActorValidityCheckData_TeamInfo
{
	int                                                MemberCount;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FString>                             MemberNames;                                              // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslClientTeamActorValidityCheckData
// 0x0090
struct FTslClientTeamActorValidityCheckData
{
	struct FString                                     Situation;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     KillerAccountId;                                          // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     GroggyAccountId;                                          // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     VictimAccountId;                                          // 0x0030(0x0010) (ZeroConstructor)
	struct FTslClientTeamActorValidityCheckData_TeamInfo ClientTeam;                                               // 0x0040(0x0018)
	struct FTslClientTeamActorValidityCheckData_TeamInfo ClientTeamFromPlayerArray;                                // 0x0058(0x0018)
	TArray<int>                                        ClientTeamCountRepHistory;                                // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     ClientTeamListRepHistory;                                 // 0x0080(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslItemStringClass
// 0x0008
struct FTslItemStringClass
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPlayerMatchResultInfo
// 0x0048
struct FTslPlayerMatchResultInfo
{
	struct FString                                     PlayerName;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     FullPlayerName;                                           // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     ClanName;                                                 // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                NumKills;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamId;                                                   // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumStartTeamMember;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsZombie;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EOutGamePlatformProvider                           PlayerPlatform;                                           // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.MapMarker
// 0x0010
struct FMapMarker
{
	bool                                               Show;                                                     // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector2D                                   MarkerPosition;                                           // 0x0004(0x0008) (BlueprintVisible, IsPlainOldData)
	EMarkerType                                        MarkerType;                                               // 0x000C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TeamMemberIdentification
// 0x000C
struct FTeamMemberIdentification
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SquadIndex;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SquadMemberIndex;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPlayerStatistics
// 0x0008
struct FTslPlayerStatistics
{
	int                                                NumKills;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAssists;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPlayerStatisticsForOwner
// 0x0010
struct FTslPlayerStatisticsForOwner
{
	float                                              TotalMovedDistanceMeter;                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TotalGivenDamages;                                        // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LongestDistanceKill;                                      // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                HeadShots;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DestructibleHitStripped
// 0x0030
struct FDestructibleHitStripped
{
	struct FVector_NetQuantize                         HitLocation;                                              // 0x0000(0x000C)
	struct FVector_NetQuantizeNormal                   ShotDirection;                                            // 0x000C(0x000C)
	int                                                InstanceIndex;                                            // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	EDestrucibleSurfaceSourceType                      DamageType;                                               // 0x001C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         ExplosionOrigin;                                          // 0x0024(0x000C)
};

// ScriptStruct TslGame.DestructiblePenetrationState
// 0x0034
struct FDestructiblePenetrationState
{
	uint16_t                                           SurfaceID;                                                // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FDestructibleHitStripped                    Hit;                                                      // 0x0004(0x0030)
};

// ScriptStruct TslGame.DestructibleBreachState
// 0x0008
struct FDestructibleBreachState
{
	uint16_t                                           SurfaceID;                                                // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                InstanceIndex;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DestroyedBuilding
// 0x0018
struct FDestroyedBuilding
{
	bool                                               ProcessedLocally;                                         // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FGuid                                       ID;                                                       // 0x0004(0x0010) (IsPlainOldData)
	float                                              TimeDestroyed;                                            // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DebugVehicleLoation
// 0x0010
struct FDebugVehicleLoation
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	bool                                               bIsInAir;                                                 // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.DisplayActorNames
// 0x0020
struct FTslGame_FDisplayActorNames
{
	struct FString                                     ActorName;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FVector                                     ActorLocation;                                            // 0x0010(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ReplicatedCastableItem
// 0x0010
struct FReplicatedCastableItem
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	ECastableItemType                                  ItemType;                                                 // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                ItemCount;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.EmoteBitArray
// 0x0020
struct FEmoteBitArray
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.MapWayPoint
// 0x0020
struct FMapWayPoint
{
	bool                                               bSpawnWayPoint;                                           // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowWayPoint_PS;                                         // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCancelWayPoint;                                          // 0x0002(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	int                                                MaxWayPointNum_PS;                                        // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector2D>                           WayPointPosArr_PS;                                        // 0x0008(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.ReplicatedEquipableItem
// 0x0018
struct FReplicatedEquipableItem
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Durability;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Space;                                                    // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxSpace;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ReplicatedThrowableItem
// 0x0010
struct FReplicatedThrowableItem
{
	class UClass*                                      ThrowableWeaponClass;                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PlayerHitInfo
// 0x000C
struct FPlayerHitInfo
{
	int                                                Hits;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Damages;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Kills;                                                    // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PlayerAttackInfo
// 0x0058
struct FPlayerAttackInfo
{
	int                                                Shots;                                                    // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TMap<EDamageReason, struct FPlayerHitInfo>         HitInfoMap;                                               // 0x0008(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.TslPlayerStatisticsNotReplicated
// 0x0168
struct FTslPlayerStatisticsNotReplicated
{
	float                                              MovedDistanceOnFeetMeter;                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MovedDistanceOnSwimMeter;                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MovedDistanceOnVehicleMeter;                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MovedDistanceOnParchuteMeter;                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MovedDistanceOnFreefallMeter;                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAssistToRevive;                                        // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumGunShots;                                              // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumGunShotHits;                                           // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	TMap<struct FString, struct FPlayerAttackInfo>     AttacksGivenInfos;                                        // 0x0020(0x0050) (ZeroConstructor)
	TMap<struct FString, struct FPlayerAttackInfo>     AttacksTakenInfos;                                        // 0x0070(0x0050) (ZeroConstructor)
	float                                              DamageDealtOnEnemy;                                       // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	TMap<struct FString, int>                          WeaponFireCounts;                                         // 0x00C8(0x0050) (ZeroConstructor)
	TMap<EMovementBaseType, float>                     BaseMovedDistance;                                        // 0x0118(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.TslPlayTime
// 0x0010
struct FTslPlayTime
{
	float                                              SurvivalTimeStart;                                        // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TeamSpectatingTimeStart;                                  // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SurvivalTimeAccumulated;                                  // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TeamSpectatingTimeAccumulated;                            // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPerUserBpRewardRuleData
// 0x000C
struct FTslPerUserBpRewardRuleData
{
	float                                              AntiAddictionSystemFactor;                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BpBoost;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              bIsBpGrinder;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPerUserXpRewardRuleData
// 0x0014
struct FTslPerUserXpRewardRuleData
{
	bool                                               bIsMaxLevel;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CurrDailyXp;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxDailyXp;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              XpMultiplier;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              bIsXpGrinder;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslBpRewardDetail_Public
// 0x0014
struct FTslBpRewardDetail_Public
{
	float                                              ByPlayTime;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ByRanking;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ByKills;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ByDamageDealt;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BoostAmount;                                              // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslXpRewardDetail_Public
// 0x0010
struct FTslXpRewardDetail_Public
{
	float                                              BySurvivalTime;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ByTeamSpectatingTime;                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BoostAmount;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ExcessAmount;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.StatTrakManager
// 0x0020
struct FStatTrakManager
{
	TArray<struct FStatTrakDataPair>                   StatTrakDataPairs;                                        // 0x0000(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnStatTrakDataUpdated;                                    // 0x0010(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
};

// ScriptStruct TslGame.CommunicationPrivilege
// 0x0008
struct FCommunicationPrivilege
{
	int                                                CommunicationPrivilege_Multiplay;                         // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CommunicationPrivilege_CrossPlay;                         // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuStringIntPair
// 0x0018
struct FWuStringIntPair
{
	struct FString                                     First;                                                    // 0x0000(0x0010) (ZeroConstructor)
	int                                                second;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuMissionProgressUpdateData
// 0x0010
struct FWuMissionProgressUpdateData
{
	TArray<struct FWuStringIntPair>                    Updates;                                                  // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslKillCauserData
// 0x0038
struct FTslKillCauserData
{
	class ATslPlayerState*                             KillCauserPlayerState;                                    // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      DamageCauserClass;                                        // 0x0008(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FReplicatedSkinParam                        ReplicatedSkinParam;                                      // 0x0010(0x0020) (Transient)
	struct FDateTime                                   KillTime;                                                 // 0x0030(0x0008) (Transient)
};

// ScriptStruct TslGame.ObservingPlayerData
// 0x0008
struct FObservingPlayerData
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MemberIndex;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslGamepadInputKey
// 0x0040
struct FTslGamepadInputKey
{
	struct FKey                                        Key;                                                      // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EGamepadInputResponseTypes                         ResponseType;                                             // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              ResponseTime;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bBlockDuplicatedKeyAction;                                // 0x0020(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FKey                                        CombinationKey;                                           // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.TslGamepadInputKeySet
// 0x0010
struct FTslGamepadInputKeySet
{
	TArray<struct FTslGamepadInputKey>                 GamepadInputKeys;                                         // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.SaveTeamMemberData
// 0x0018
struct FSaveTeamMemberData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.ArenaTeam
// 0x0010
struct FArenaTeam
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MembersCount;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              StartLootTimeSec;                                         // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ArenaState
// 0x0060
struct FArenaState
{
	TArray<struct FArenaTeam>                          ArenaTeams;                                               // 0x0000(0x0010) (ZeroConstructor)
	TArray<int>                                        LosingTeamIds;                                            // 0x0010(0x0010) (ZeroConstructor)
	int                                                WinnerTeamId;                                             // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ArenaID;                                                  // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	EArenaState                                        ArenaState;                                               // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              ArenaDurationTimeSec;                                     // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArenaStartTimeSec;                                        // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArenaDurationLastLootTimeSec;                             // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArenaFinishTimeSec;                                       // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RemainingTime;                                            // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ServerTimeToDeploy;                                       // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0048(0x0010) (ZeroConstructor)
	int                                                NumAlivePlayers;                                          // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.StageData
// 0x0018
struct FStageData
{
	TArray<struct FArenaState>                         Arenas;                                                   // 0x0000(0x0010) (ZeroConstructor)
	bool                                               bIsLastStage;                                             // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                ExpectedRoundsLeft;                                       // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.StagesHistoryData
// 0x0018
struct FStagesHistoryData
{
	int                                                MaxStage;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentStage;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FStageData>                          StagesData;                                               // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.LeaderboardDynamicPlayerInfo
// 0x0014
struct FLeaderboardDynamicPlayerInfo
{
	int                                                Kills;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Deaths;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DamageDealt;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                money;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MemberIndex;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LeaderboardDynamicTeamInfo
// 0x0028
struct FLeaderboardDynamicTeamInfo
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Chances;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<bool>                                       RoundHistory;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLeaderboardDynamicPlayerInfo>       DynamicPlayersInfo;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.LeaderboardDynamicData
// 0x0010
struct FLeaderboardDynamicData
{
	TArray<struct FLeaderboardDynamicTeamInfo>         DynamicTeamsInfo;                                         // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.BattleVisualizationInfo
// 0x0010
struct FBattleVisualizationInfo
{
	struct FStringAssetReference                       DataTable;                                                // 0x0000(0x0010) (Edit)
};

// ScriptStruct TslGame.BuildingSearchPathLink
// 0x0018
struct FBuildingSearchPathLink
{
	TArray<struct FVector>                             WayPointList;                                             // 0x0000(0x0010) (ZeroConstructor)
	int                                                TargetSpotIndex;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.BuildingSearchPath
// 0x0018
struct FBuildingSearchPath
{
	TArray<struct FBuildingSearchPathLink>             ItemPosLinkList;                                          // 0x0000(0x0010) (ZeroConstructor)
	int8_t                                             BuildingPartIndext;                                       // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.AkRTPCInfo
// 0x0018
struct FAkRTPCInfo
{
	struct FString                                     RTPCName;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              RTPCValueOnStart;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RTPCValueOnStop;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PostProcessEffectParameter
// 0x0018
struct FPostProcessEffectParameter
{
	struct FString                                     Name;                                                     // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Value;                                                    // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleDebugHit
// 0x0028
struct FVehicleDebugHit
{
	struct FVector                                     RelativeNormalImpulse;                                    // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     RelativeImpactPoint;                                      // 0x000C(0x000C) (IsPlainOldData)
	struct FVector                                     AbsoluteImpactPoint;                                      // 0x0018(0x000C) (IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0024(0x0004) (IsPlainOldData)
};

// ScriptStruct TslGame.VehicleCustomImpulseFilter
// 0x0028
struct FVehicleCustomImpulseFilter
{
	class UClass*                                      ImpulseAbsorberType;                                      // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyRadialImpulse;                                      // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseAsVelocityChange;                            // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              MaxDamagingImpulseMagnituge;                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxImpulseDamage;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseStrength;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadialImpulseStrength;                                    // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseRadius;                                            // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERadialImpulseFalloff>                 ImpulseFalloffType;                                       // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleCustomImpulse
// 0x0030
struct FVehicleCustomImpulse
{
	TArray<class UClass*>                              IgnoreClasses;                                            // 0x0000(0x0010) (Edit, ZeroConstructor)
	TArray<struct FVehicleCustomImpulseFilter>         ImpulseFilters;                                           // 0x0010(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      DamageType;                                               // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseWhileDestroyed;                              // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseWhileStopped;                                // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseHitActorAsDamageInstigator;                           // 0x002A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.BinaryData
// 0x0010
struct FBinaryData
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.SandboxMasterPSC
// 0x0010
struct FSandboxMasterPSC
{
	ESandboxPowerType                                  Type;                                                     // 0x0000(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0000(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               bEnableRelVelEffect;                                      // 0x0004(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	class UParticleSystemComponent*                    PSC;                                                      // 0x0008(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.ItemOffsetData
// 0x0078
struct FItemOffsetData
{
	struct FVector                                     SlotOffset_Primary_Location;                              // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SlotOffset_Secondary_Location;                            // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SlotOffset_SideArm_Location;                              // 0x0018(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SlotOffset_Melee_Location;                                // 0x0024(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SlotOffset_Thrown_Location;                               // 0x0030(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SlotOffset_Primary_Rotation;                              // 0x003C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SlotOffset_Secondary_Rotation;                            // 0x0048(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SlotOffset_SideArm_Rotation;                              // 0x0054(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SlotOffset_Melee_Rotation;                                // 0x0060(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SlotOffset_Thrown_Rotation;                               // 0x006C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.RepAcceleration
// 0x000C
struct FRepAcceleration
{
	struct FVector                                     Acceleration;                                             // 0x0000(0x000C) (Transient, IsPlainOldData)
};

// ScriptStruct TslGame.CharacterAnim
// 0x0010
struct FCharacterAnim
{
	class UAnimMontage*                                PickUpAnim;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                DeathAnim;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.FaceRotationStanceSettings
// 0x0010
struct FFaceRotationStanceSettings
{
	float                                              RotationSpeed;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeed02;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeed03;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeed04;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.FaceRotationSettings
// 0x0030
struct FFaceRotationSettings
{
	struct FFaceRotationStanceSettings                 Stand;                                                    // 0x0000(0x0010) (Edit, DisableEditOnInstance)
	struct FFaceRotationStanceSettings                 Crouch;                                                   // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	struct FFaceRotationStanceSettings                 Prone;                                                    // 0x0020(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.BuffWithBoostGauge
// 0x0018
struct FBuffWithBoostGauge
{
	float                                              BoostGauge;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UClass*                                      Buff;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverlapId;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.BreathValue
// 0x0008
struct FBreathValue
{
	float                                              BreathApnea;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BreathAds;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CharacterBreath
// 0x00B8
struct FCharacterBreath
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	class UClass*                                      RestorationBuff;                                          // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      RestorationAdsBuff;                                       // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ApneaDebuff;                                              // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HoldBreathDebuff;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SprintDebuff;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0038(0x0010) MISSED OFFSET
	struct FBreathValue                                MaxBreath;                                                // 0x0048(0x0008) (Edit, DisableEditOnInstance)
	struct FVector                                     BreathPointOffsetAtStand;                                 // 0x0050(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BreathPointOffsetAtCrouch;                                // 0x005C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BreathPointOffsetAtProne;                                 // 0x0068(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BreathPointOffsetAtGroggy;                                // 0x0074(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FBreathValue                                MinimumBreathStartHoldingBreath;                          // 0x0080(0x0008) (Edit, DisableEditOnInstance)
	float                                              MinimumBreathStartSprinting;                              // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2C];                                      // 0x008C(0x002C) MISSED OFFSET
};

// ScriptStruct TslGame.CharacterStance
// 0x0028
struct FCharacterStance
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
	TEnumAsByte<EStanceMode>                           CurrentStance;                                            // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.BodyTypeDef
// 0x0008
struct FBodyTypeDef
{
	int                                                UpThreshold;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DownThreshold;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslClientTeamMarkWidgetValidityCheckData
// 0x0038
struct FTslClientTeamMarkWidgetValidityCheckData
{
	struct FVector2D                                   TeamMarkLocation2D;                                       // 0x0000(0x0008) (IsPlainOldData)
	struct FVector2D                                   HitLocation2D;                                            // 0x0008(0x0008) (IsPlainOldData)
	struct FMargin                                     CanvasOffset;                                             // 0x0010(0x0010)
	struct FVector2D                                   IndicatorWidgetSize;                                      // 0x0020(0x0008) (IsPlainOldData)
	TArray<struct FVector2D>                           IndicatorWidgetSizeChangeHistory;                         // 0x0028(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.VaultingTask
// 0x0068
struct FVaultingTask
{
	struct FVector                                     V_Start;                                                  // 0x0000(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     V_Apex;                                                   // 0x000C(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     V_ApexAdditive;                                           // 0x0018(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     V_End;                                                    // 0x0024(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	EVaultAnimType                                     InVaultType;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEndToFall;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              Direction;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerSpeed;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceFromObject;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEndZOffset;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          BaseComp;                                                 // 0x0044(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	struct FVector                                     BaseWorldLoc;                                             // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    BaseWorldDir;                                             // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslChatStyle
// 0x0980 (0x0988 - 0x0008)
struct FTslChatStyle : public FSlateWidgetStyle
{
	struct FEditableTextBoxStyle                       TextEntryStyle;                                           // 0x0008(0x0870) (Edit)
	struct FSlateBrush                                 BackingBrush;                                             // 0x0878(0x0090) (Edit)
	struct FSlateColor                                 BoxBorderColor;                                           // 0x0908(0x0028) (Edit)
	struct FSlateColor                                 TextColor;                                                // 0x0930(0x0028) (Edit)
	struct FSlateSound                                 RxMessgeSound;                                            // 0x0958(0x0018) (Edit)
	struct FSlateSound                                 TxMessgeSound;                                            // 0x0970(0x0018) (Edit)
};

// ScriptStruct TslGame.TslCinematicLightParams
// 0x0034
struct FTslCinematicLightParams
{
	bool                                               bCastShadows;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseTemperature;                                          // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseInverseSquaredFalloff;                                // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	float                                              Temperature;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SourceRadius;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SourceLength;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              InnerConeAngle;                                           // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OuterConeAngle;                                           // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AttenuationRadius;                                        // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LightFalloffExponent;                                     // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0024(0x0010) (IsPlainOldData)
};

// ScriptStruct TslGame.CustomDamageEvent
// 0x00D0 (0x00D8 - 0x0008)
struct FCustomDamageEvent : public FTableRowBase
{
	bool                                               bProcessedLocally;                                        // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FGuid                                       EventID;                                                  // 0x000C(0x0010) (Edit, EditConst, IsPlainOldData)
	bool                                               bEnabled;                                                 // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bClientOnly;                                              // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bReplicate;                                               // 0x001E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyReplicateWhenRelevant;                               // 0x001F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomDamageEventTriggerType                      EventTriggerType;                                         // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              TriggerCooldown;                                          // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPercentageThreshold;                                // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggerWhenDead;                                         // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomDamageEventReactionType                     EventReactionType;                                        // 0x002D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TAssetPtr<class UClass>                            ActorClassToSpawn;                                        // 0x0030(0x0020) (Edit)
	bool                                               bTriggersGlobalCooldown;                                  // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLockedByGlobalCooldown;                                  // 0x0051(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TAssetPtr<class UClass>                            OnCooldownActorClassToSpawn;                              // 0x0058(0x0020) (Edit)
	bool                                               bDestroySpawnedParticlesWithOwner;                        // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FName                                       AttachComponentTag;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpawnSocketName;                                          // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CustomSpawnTransformTag;                                  // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAtRandomPointInBoundingBox;                         // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomSpawnRotation;                                  // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinToSpawn;                                               // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxToSpawn;                                               // 0x009B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FName                                       ActorSpawnTag;                                            // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MeshComponentTag;                                         // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MeshInstanceIndex;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FName                                       BoneName;                                                 // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhysicsAssetProfileName;                                  // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CollisionPrimitiveTag;                                    // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabledType;                                     // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TriggeredCustomDamageEvent
// 0x00E0
struct FTriggeredCustomDamageEvent
{
	struct FCustomDamageEvent                          Event;                                                    // 0x0000(0x00D8)
	float                                              TimeTriggered;                                            // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCollisionSphere
// 0x0010
struct FSimpleCollisionSphere
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleSpherePersistentChecker
// 0x0020
struct FSimpleSpherePersistentChecker
{
	class UPrimitiveComponent*                         TargetComponent;                                          // 0x0000(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FSimpleCollisionSphere                      Sphere;                                                   // 0x0008(0x0010) (Transient)
	float                                              PassedTime;                                               // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCollisionCapsule
// 0x001C
struct FSimpleCollisionCapsule
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCollisionEvent
// 0x0010
struct FSimpleCollisionEvent
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.DamageFieldLayout
// 0x0018
struct FDamageFieldLayout
{
	float                                              CreationDelay;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   LocationOffset;                                           // 0x0004(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x000C(0x000C) MISSED OFFSET
};

// ScriptStruct TslGame.EmoteTraceCheck
// 0x001C
struct FEmoteTraceCheck
{
	struct FVector                                     InitialActorOffset;                                       // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TraceVector;                                              // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              SphereRadius;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ExplosionShakeInstanceConfig
// 0x0018
struct FExplosionShakeInstanceConfig
{
	class UClass*                                      ShakeClass;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InnerRadius;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Falloff;                                                  // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOrientShake;                                             // 0x0014(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.ExplosionShakeConfig
// 0x0010
struct FExplosionShakeConfig
{
	TArray<struct FExplosionShakeInstanceConfig>       ShakeArray;                                               // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ExplosionAudioConfig
// 0x0028
struct FExplosionAudioConfig
{
	struct FName                                       VisibilitySocket;                                         // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               DirectEffect;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               ProxyEffect;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDirectEffect;                                         // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseProxyEffect;                                          // 0x0019(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseProxyObstructedOnly;                                  // 0x001A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001B(0x0001) MISSED OFFSET
	float                                              DirectEffectDistance;                                     // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProxyEffectDistance;                                      // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleReactionData
// 0x000C
struct FVehicleReactionData
{
	EReactionType                                      ReactionType;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ReactionForceFactor;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReactionMinSpeed;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.RadialDamageReactionData
// 0x000C
struct FRadialDamageReactionData
{
	EReactionType                                      ReactionType;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ReactionForceFactor;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReactionMinDamage;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DamageDataByCategory
// 0x000C
struct FDamageDataByCategory
{
	EDamageTypeCategory                                DamageType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              DamageFactor;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageAccumulateTimeout;                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PointDamageReactionData
// 0x0020
struct FPointDamageReactionData
{
	EReactionType                                      ReactionType;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ReactionForceFactor;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReactionMinDamage;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageAccumulateTimeout;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FDamageDataByCategory>               DamageDataByCategory;                                     // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.AirInput
// 0x0010
struct FAirInput
{
	float                                              Throttle;                                                 // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AxisControls;                                             // 0x0004(0x000C) (Transient, IsPlainOldData)
};

// ScriptStruct TslGame.InputInterpSetting
// 0x0008
struct FInputInterpSetting
{
	float                                              RiseRate;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FallRate;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AirInputConfig
// 0x0024
struct FAirInputConfig
{
	struct FInputInterpSetting                         RollInterpolation;                                        // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         PitchInterpolation;                                       // 0x0008(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleForwardInterpolation;                             // 0x0010(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleBackwardInterpolation;                            // 0x0018(0x0008) (Edit, DisableEditOnInstance)
	bool                                               bUseStickyInput;                                          // 0x0020(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.AirControlLimitConfig
// 0x000C
struct FAirControlLimitConfig
{
	float                                              MaxRoll;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPitch;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxYaw;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AirEngineConfig
// 0x00B0
struct FAirEngineConfig
{
	float                                              TorqueMassScale;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UCurveVector*                                EngineCurve;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToTorqueMap;                                         // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     StaticCOMOffset;                                          // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RollInputOffsetVector;                                    // 0x002C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 RollInputOffsetMap;                                       // 0x0038(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     PitchInputOffsetVector;                                   // 0x0048(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 PitchInputOffsetMap;                                      // 0x0054(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ElevationScalarSpeedMap;                                  // 0x0064(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ReverseRelativeAltMap;                                    // 0x0074(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ReverseBackSpeedMap;                                      // 0x0084(0x0010) (Edit, DisableEditOnInstance)
	float                                              MinThrottleForBackForce;                                  // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedInKmForFastOn;                                    // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRotorRpmForFastOn;                                     // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FInputInterpSetting                         FastOnInterp;                                             // 0x00A0(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         SlowOnInterp;                                             // 0x00A8(0x0008) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.AirRotorConfig
// 0x0050
struct FAirRotorConfig
{
	struct FInputInterpSetting                         ThrottleInterpForward;                                    // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleInterpReverse;                                    // 0x0008(0x0008) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RotorSpeedThrottleOffset;                                 // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 EnginePowerRotorSpeedScale;                               // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 ThrottleToRPMCurve;                                       // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOnRPMInterpSpeed;                                   // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOffRPMInterpSpeed;                                  // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastRotorOnSpeed;                                         // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastRotorOffSpeed;                                        // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastRotorRotationScalar;                                  // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AirDragConfig
// 0x0038
struct FAirDragConfig
{
	struct FMappedData                                 SpeedToForwardForceMap;                                   // 0x0000(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ForwardVelocityDotToForwardForceMap;                      // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 SpeedToForwardMergeCurve;                                 // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                SpeedDragCurve;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOffDragScale;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AirControlTorqueConfig
// 0x0090
struct FAirControlTorqueConfig
{
	float                                              RollLimit;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchLimit;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollForceScale;                                           // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchForceScale;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToRollForceMap;                                      // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToPitchForceMap;                                     // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToRollDampingMap;                                    // 0x0030(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToPitchDampingMap;                                   // 0x0040(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToYawDampingMap;                                     // 0x0050(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RollTargetForceMap;                                       // 0x0060(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 PitchTargetForceMap;                                      // 0x0070(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RollToPitchForceMap;                                      // 0x0080(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.AirControlForceConfig
// 0x0038
struct FAirControlForceConfig
{
	float                                              RollForceScale;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchForceScale;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TorqueMassScale;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StaticCOMOffset;                                          // 0x000C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToControlForceMap;                                   // 0x0018(0x0010) (Edit, DisableEditOnInstance)
	class UCurveVector*                                RollControlCurve;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                PitchControlCurve;                                        // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AirLiftConfig
// 0x00B0
struct FAirLiftConfig
{
	float                                              LiftForceMassScale;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToLiftForceMap;                                      // 0x0004(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     LiftForceStaticOffset;                                    // 0x0014(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 RollLiftOffsetMap;                                        // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     RollLiftOffsetVector;                                     // 0x0030(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 PitchLiftOffsetMap;                                       // 0x003C(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     PitchLiftOffsetVector;                                    // 0x004C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundEffectMaxDistance;                                  // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundEffectMassScale;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     GroundEffectExtent;                                       // 0x0060(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 GroundEffectSpeedMap;                                     // 0x006C(0x0010) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 GroundEffectPowerCurve;                                   // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 GroundEffectOffsetCurve;                                  // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     GroundEffectTraceOffset;                                  // 0x0090(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 GroundEffectAlphaOffsetMap;                               // 0x009C(0x0010) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AirGeneralConfig
// 0x002C
struct FAirGeneralConfig
{
	struct FVector                                     GravityVector;                                            // 0x0000(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GravityScale;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCheckRelativeAltitude;                                   // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              RelAltitudeDistInM;                                       // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedForAirTick;                                       // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToAnimInputMap;                                      // 0x001C(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.MatchStateTimestamp
// 0x0010
struct FMatchStateTimestamp
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.RepItemLimits
// 0x0010
struct FRepItemLimits
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                Limits;                                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.CustomWidgetSetting
// 0x0018
struct FCustomWidgetSetting
{
	bool                                               bInitialized;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FString>                             Disabled;                                                 // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TeamsArray
// 0x0010
struct FTeamsArray
{
	TArray<class ATeam*>                               Teams;                                                    // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.BlueZoneStatusData
// 0x0068
struct FBlueZoneStatusData
{
	struct FVector                                     SafetyZonePosition;                                       // 0x0000(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              SafetyZoneRadius;                                         // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PoisonGasWarningPosition;                                 // 0x0010(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              PoisonGasWarningRadius;                                   // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     SafetyZoneBeginPosition;                                  // 0x0020(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              SafetyZoneBeginRadius;                                    // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   LastCirclePosition;                                       // 0x0030(0x0008) (BlueprintVisible, Transient, IsPlainOldData)
	bool                                               bIsShrinking;                                             // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasPoisonGasWarning;                                     // 0x0039(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                ArenaID;                                                  // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     SafetyZoneInitialPosition;                                // 0x0040(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              SafetyZoneInitialRadius;                                  // 0x004C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NextPoisonGasIndex;                                       // 0x0050(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalReleaseDuration;                                     // 0x0054(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TotalWarningDuration;                                     // 0x0058(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ElapsedWarningDuration;                                   // 0x005C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ElapsedReleaseDuration;                                   // 0x0060(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsGasRelease;                                            // 0x0064(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInBattle;                                              // 0x0065(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsWorkingBlueZone;                                       // 0x0066(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0067(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.StageBlueZoneStatusData
// 0x0018
struct FStageBlueZoneStatusData
{
	int                                                CurrentStage;                                             // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FBlueZoneStatusData>                 BlueZoneStatusDataArray;                                  // 0x0008(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
};

// ScriptStruct TslGame.ClientBlueZoneStatusData
// 0x003C
struct FClientBlueZoneStatusData
{
	struct FVector                                     LerpSafetyZonePosition;                                   // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              LerpSafetyZoneRadius;                                     // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LerpPoisonGasWarningZonePosition;                         // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              LerpPoisonGasWarningZoneRadius;                           // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ElapsedPoisonGasWarningDuration;                          // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PoisonGasWarningZoneBeginRadius;                          // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PoisonGasWarningZoneBeginPosition;                        // 0x0028(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              ElapsedGasReleaseDuration;                                // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ElapsedWarningDurationForClient;                          // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.LeaderboardStaticPlayerInfo
// 0x0018
struct FLeaderboardStaticPlayerInfo
{
	struct FString                                     Name;                                                     // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MemberIndex;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.LeaderboardStaticTeamInfo
// 0x0028
struct FLeaderboardStaticTeamInfo
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     TeamName;                                                 // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FLeaderboardStaticPlayerInfo>        StaticPlayersInfo;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.LeaderboardStaticData
// 0x0010
struct FLeaderboardStaticData
{
	TArray<struct FLeaderboardStaticTeamInfo>          StaticTeamsInfo;                                          // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.TslFireParticleFXSet
// 0x0020
struct FTslFireParticleFXSet
{
	class UParticleSystem*                             ParticleSystem;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ParticleSystem_Console;                                   // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ParticleSystem_KoreanAndChinese;                          // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRadius;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslFuelPuddle
// 0x003C (0x0048 - 0x000C)
struct FTslFuelPuddle : public FFastArraySerializerItem
{
	struct FVector_NetQuantize                         Location;                                                 // 0x000C(0x000C)
	float                                              Radius;                                                   // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ExpiryTimestamp;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              IgniteTimestamp;                                          // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	bool                                               bIgnited;                                                 // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnOnlyFire;                                           // 0x0025(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsInWater;                                               // 0x0026(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
	int                                                ColliderId;                                               // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              SpreadPriority;                                           // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FVector                                     SpreadVector;                                             // 0x0030(0x000C) (IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UTslSimpleCollisionReceiver*                 Receiver;                                                 // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
};

// ScriptStruct TslGame.TslFuelPuddleArray
// 0x0018 (0x00C8 - 0x00B0)
struct FTslFuelPuddleArray : public FFastArraySerializer
{
	TArray<struct FTslFuelPuddle>                      Array;                                                    // 0x00B0(0x0010) (ZeroConstructor)
	class ATslFuelPuddleContainer*                     Owner;                                                    // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
};

// ScriptStruct TslGame.TslFuelPuddleVisuals
// 0x0030
struct FTslFuelPuddleVisuals
{
	class UDecalComponent*                             DecalComp;                                                // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleComp;                                             // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                         // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0018(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.BattleRoyalePoisionGasData
// 0x0050
struct FBattleRoyalePoisionGasData
{
	float                                              StartDelay;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WarningDuration;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReleaseDuration;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RadiusRate;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RandomRadiusRate;                                         // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PoisonGasDamagePerSecond;                                 // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpreadRatio;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageMagnifierForDistance;                               // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageMagnifier;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LandRatio;                                                // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CircleAlgorithm;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsFastBluezone;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                FastPlayerCount;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastWarningDuration;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastReleaseDuration;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DamageMagnifierCurve;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreSafetyZone;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.RespawnTypeClass
// 0x0010
struct FRespawnTypeClass
{
	ERespawnType                                       Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UClass*                                      Class;                                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ZombieCustomizationData
// 0x0028
struct FZombieCustomizationData
{
	struct FString                                     StringOptionKey;                                          // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EGender                                            Gender;                                                   // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	TArray<struct FString>                             ZombieOptionValues;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.AutoRecoveryData
// 0x0018
struct FAutoRecoveryData
{
	EAutoRecoveryType                                  AutoType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              AutoTimeAfterDamage;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StrengthPerTick;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UClass*                                      BuffTemplate;                                             // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AICustomizationData
// 0x0018
struct FAICustomizationData
{
	EGender                                            Gender;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FString>                             Datas;                                                    // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslGameOptionDuplicateProhibitedKeyBinderData
// 0x0018
struct FTslGameOptionDuplicateProhibitedKeyBinderData
{
	struct FName                                       DuplicateProhibitedTabName;                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DuplicateProhibitedCategoryName;                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DuplicateProhibitedItemName;                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionKeyBindingDesc
// 0x0038
struct FTslGameOptionKeyBindingDesc
{
	ETslGameOptionKeyBindingType                       Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       InputName;                                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InputAxisScale;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FKey>                                ForbiddenKeys;                                            // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FTslGameOptionDuplicateProhibitedKeyBinderData> DuplicateProhibitionData;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.PersonalStat
// 0x0038
struct FPersonalStat
{
	TArray<int>                                        Kills;                                                    // 0x0000(0x0010) (ZeroConstructor)
	int                                                Death;                                                    // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Assist;                                                   // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RoundWin;                                                 // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RoundLoss;                                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MatchWin;                                                 // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MatchLoss;                                                // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastUpdateTime;                                           // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x002C(0x000C) MISSED OFFSET
};

// ScriptStruct TslGame.BlockAction
// 0x0010
struct FBlockAction
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EInputEvent>                           KeyEvent;                                                 // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslGMCommandInGameHelperButtonData
// 0x0048
struct FTslGMCommandInGameHelperButtonData
{
	struct FString                                     Category;                                                 // 0x0000(0x0010) (ZeroConstructor, Transient)
	struct FString                                     Command;                                                  // 0x0010(0x0010) (ZeroConstructor, Transient)
	struct FString                                     Name;                                                     // 0x0020(0x0010) (ZeroConstructor, Transient)
	struct FLinearColor                                Color;                                                    // 0x0030(0x0010) (Transient, IsPlainOldData)
	ETslGMCommandInGameHelperButtonType                Type;                                                     // 0x0040(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                DefaultParameter;                                         // 0x0044(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.HealthColorData
// 0x0018
struct FHealthColorData
{
	struct FFloatInterval                              HealthPercentRange;                                       // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FLinearColor                                Color;                                                    // 0x0008(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.HornPlayInfo
// 0x0008
struct FHornPlayInfo
{
	bool                                               bMakeSureDirty;                                           // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	EHornSoundType                                     HornSoundType;                                            // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              KeyPressedTime;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.HornSoundInfo
// 0x0010
struct FHornSoundInfo
{
	class UAkAudioEvent*                               HornOnSound;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               HornOffSound;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.DestructibleSurfaceTemplate
// 0x0110
struct FDestructibleSurfaceTemplate
{
	class UStaticMesh*                                 FrameMesh;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   FrameMaterials;                                           // 0x0008(0x0010) (Edit, ZeroConstructor)
	class UStaticMesh*                                 FrontMesh;                                                // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   FrontMaterials;                                           // 0x0020(0x0010) (Edit, ZeroConstructor)
	class UStaticMesh*                                 BackMesh;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   BackMaterials;                                            // 0x0038(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      ImpactEnter;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ImpactExit;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFrontSurfaceEnabled;                                    // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsBackSurfaceEnabled;                                     // 0x0059(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsHalfWall;                                               // 0x005A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x005B(0x0005) MISSED OFFSET
	class UPhysicalMaterial*                           PhysMaterial;                                             // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ProjectileInteractionPattern;                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDestructibleSurfaceMask*                    ProjectileInteractionMask;                                // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PrePenDamageTexture;                                      // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDestructiblePrePenDamageMask*>       PrePenDamageMask;                                         // 0x0080(0x0010) (Edit, ZeroConstructor)
	bool                                               IsTiledRegion;                                            // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	TArray<class UMaterialInstance*>                   FragmentMaterialOveride;                                  // 0x0098(0x0010) (Edit, ZeroConstructor)
	class UStaticMesh*                                 BreachedMesh;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstance*>                   BreachedMaterials;                                        // 0x00B0(0x0010) (Edit, ZeroConstructor)
	int                                                HealthToBreach;                                           // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	class UClass*                                      BreachEffect;                                             // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<EDestrucibleSurfaceSourceType>              BreachableDamage;                                         // 0x00D0(0x0010) (Edit, ZeroConstructor)
	bool                                               ShouldBreachDoExplosion;                                  // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	int                                                BreachExplosionDamage;                                    // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BreachExplosionRadius;                                    // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	class UClass*                                      BreachExplosionDamageType;                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BreachModelSwapDelay;                                     // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BulletEntranceRadiusSize;                                 // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BulletExitRadiusSize;                                     // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HitsOnlyAffectFacingSurface;                              // 0x0104(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	class UStaticMesh*                                 FrameComplexCollisionMesh;                                // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DestructionEvent
// 0x00B8
struct FDestructionEvent
{
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0000(0x00A0) MISSED OFFSET
	class AController*                                 EventInstigator;                                          // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.ItemOffsetTransform
// 0x0018
struct FItemOffsetTransform
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ItemOffsetPerWeaponData
// 0x0190
struct FItemOffsetPerWeaponData
{
	TMap<TAssetPtr<class UClass>, struct FItemOffsetTransform> SlotOffset_Primary_PerWeapon;                             // 0x0000(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<TAssetPtr<class UClass>, struct FItemOffsetTransform> SlotOffset_Secondary_PerWeapon;                           // 0x0050(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<TAssetPtr<class UClass>, struct FItemOffsetTransform> SlotOffset_SideArm_PerWeapon;                             // 0x00A0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<TAssetPtr<class UClass>, struct FItemOffsetTransform> SlotOffset_Melee_PerWeapon;                               // 0x00F0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<TAssetPtr<class UClass>, struct FItemOffsetTransform> SlotOffset_Thrown_PerWeapon;                              // 0x0140(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.JukeBoxState
// 0x0003
struct FJukeBoxState
{
	bool                                               bPowerOn;                                                 // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsBroken;                                                // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsOpened;                                                // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WeatherLevelInfo
// 0x0020
struct FWeatherLevelInfo
{
	struct FString                                     WeatherId;                                                // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                Weight;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       WeatherLevel;                                             // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.LivingThingEvent
// 0x0018
struct FLivingThingEvent
{
	float                                              ServerTimeSeconds;                                        // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EventID;                                                  // 0x0004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<unsigned char>                              Params;                                                   // 0x0008(0x0010) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.LivingThingStaticRepInfo
// 0x0018
struct FLivingThingStaticRepInfo
{
	int                                                NetGUID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DestroyTimeSeconds;                                       // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLivingThingEvent>                   EventArray;                                               // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.LivingThingVolumeInfo
// 0x0028
struct FLivingThingVolumeInfo
{
	class ATslLivingThingVolume*                       LivingThingVolume;                                        // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                StartNetGUID;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SpawnTimeSeconds;                                         // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                GeneratedSpawnInfoIndex;                                  // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FLivingThingStaticRepInfo>           LivingThingStaticRepInfos;                                // 0x0018(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.LivingThingInfo
// 0x0040
struct FLivingThingInfo
{
	int                                                NetGUID;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnTimeSeconds;                                         // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DestroyTimeSeconds;                                       // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnLocation;                                            // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x0018(0x000C) (BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	class UClass*                                      ActorClass;                                               // 0x0028(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FLivingThingEvent>                   EventArray;                                               // 0x0030(0x0010) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.LivingThingMassiveSpawnInfo
// 0x0050
struct FLivingThingMassiveSpawnInfo
{
	int                                                StartNetGUID;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpawnTimeSeconds;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             LivingThingLocations;                                     // 0x0008(0x0010) (Edit, ZeroConstructor)
	int                                                RandomRotationSeed;                                       // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<float>                                      LivingThingRotationYaw;                                   // 0x0020(0x0010) (Edit, ZeroConstructor)
	TArray<unsigned char>                              LivingThingClassIndecies;                                 // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              LivingThingClasses;                                       // 0x0040(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.LivingThingSpawnRatio
// 0x0010
struct FLivingThingSpawnRatio
{
	class UClass*                                      Class;                                                    // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Ratio;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlySpawnOnLandscape;                                    // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.CustomActionKeyData
// 0x0018
struct FCustomActionKeyData
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FTslInputKey>                        Keys;                                                     // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.CustomAxisKeyData
// 0x0020
struct FCustomAxisKeyData
{
	struct FName                                       AxisName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FTslInputKey>                        Keys;                                                     // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.CustomMouseSensitiveData
// 0x0010
struct FCustomMouseSensitiveData
{
	struct FName                                       MouseSensitiveName;                                       // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              MouseSensitivity;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastConvertedMouseSensitivity;                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CustomGamePadSensitiveData
// 0x0010
struct FCustomGamePadSensitiveData
{
	struct FName                                       GamePadSensitiveName;                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              GamePadSensitivity;                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastConvertedGamePadSensitivity;                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CustomSensitiveData
// 0x0010
struct FCustomSensitiveData
{
	struct FName                                       SensitiveName;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Sensitivity;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastConvertedSensitivity;                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CustomSensitiveDataArray
// 0x0010
struct FCustomSensitiveDataArray
{
	TArray<struct FCustomSensitiveData>                Array;                                                    // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.CustomInputSettings
// 0x00D8
struct FCustomInputSettings
{
	TArray<struct FCustomActionKeyData>                ActionKeyList;                                            // 0x0000(0x0010) (ZeroConstructor, Config)
	TArray<struct FCustomAxisKeyData>                  AxisKeyList;                                              // 0x0010(0x0010) (ZeroConstructor, Config)
	bool                                               bIsUsingPerScopeMouseSensitivity;                         // 0x0020(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsUsingPerScopeGamepadSensitivity;                       // 0x0021(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	TArray<struct FCustomMouseSensitiveData>           MouseSensitiveList;                                       // 0x0028(0x0010) (ZeroConstructor, Config)
	TArray<struct FCustomGamePadSensitiveData>         GamePadSensitiveList;                                     // 0x0038(0x0010) (ZeroConstructor, Config)
	TMap<ETslControllerType, struct FCustomSensitiveDataArray> SensitiveMap;                                             // 0x0048(0x0050) (ZeroConstructor, Config)
	float                                              MouseVerticalSensitivityMultiplierAdjusted;               // 0x0098(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInvertMouse;                                             // 0x009C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInvertGamePadY;                                          // 0x009D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInvertGamePadX;                                          // 0x009E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x009F(0x0001) MISSED OFFSET
	float                                              GamePadDeadZone;                                          // 0x00A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              GamepadVerticalSensitivityMultiplier;                     // 0x00A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              StartRunningSensitivity;                                  // 0x00A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              GamePadDeadZone_Left;                                     // 0x00AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAimAccPad;                                         // 0x00B0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x27];                                      // 0x00B1(0x0027) MISSED OFFSET
};

// ScriptStruct TslGame.TslGamepadActionKeyData
// 0x0048
struct FTslGamepadActionKeyData
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FTslGamepadInputKey                         GamepadActionKey;                                         // 0x0008(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.TslGamepadAxisKeyData
// 0x0028
struct FTslGamepadAxisKeyData
{
	struct FName                                       AxisName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FKey                                        GamepadAxisKey;                                           // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.TslPersistantData
// 0x02C0
struct FTslPersistantData
{
	struct FCustomInputSettings                        CustomInputSettings;                                      // 0x0000(0x00D8) (Config)
	bool                                               bUseForceFeedback;                                        // 0x00D8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EGamepadPresets                                    GamepadPresetType;                                        // 0x00D9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00DA(0x0002) MISSED OFFSET
	float                                              ForceFeedbackMultiplier;                                  // 0x00DC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              FpsCameraFov;                                             // 0x00E0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              Gamma;                                                    // 0x00E4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsMasterSoundMute;                                       // 0x00E8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsEffectSoundMute;                                       // 0x00E9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsUISoundMute;                                           // 0x00EA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsBGMSoundMute;                                          // 0x00EB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsEnabledHrtfRemoteWeaponSound;                          // 0x00EC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00ED(0x0003) MISSED OFFSET
	struct FString                                     CultureName;                                              // 0x00F0(0x0010) (ZeroConstructor, Config)
	bool                                               bIconKillfeedEnabled;                                     // 0x0100(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	int                                                ColorBlindType;                                           // 0x0104(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     CrosshairColorString;                                     // 0x0108(0x0010) (ZeroConstructor, Config)
	struct FColor                                      CustomCrosshairColor;                                     // 0x0118(0x0004) (Config, IsPlainOldData)
	bool                                               bUseKeyHint;                                              // 0x011C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowNetworkInfo;                                         // 0x011D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETppAimCameraPosition                              TppAimCamPosRecoveryType;                                 // 0x011E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x011F(0x0001) MISSED OFFSET
	float                                              ForwardRunningSensitivity;                                // 0x0120(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MasterSoundVolume;                                        // 0x0124(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              EffectSoundVolume;                                        // 0x0128(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              EmoteSoundVolume;                                         // 0x012C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              UISoundVolume;                                            // 0x0130(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              BGMSoundVolume;                                           // 0x0134(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     MusicTitle;                                               // 0x0138(0x0010) (ZeroConstructor, Config)
	struct FString                                     MusicTitleKeyOfLasPlayedSeason;                           // 0x0148(0x0010) (ZeroConstructor, Config)
	EFiringMode                                        HGsFiringMode;                                            // 0x0158(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFiringMode                                        SMGsFiringMode;                                           // 0x0159(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFiringMode                                        ARsFiringMode;                                            // 0x015A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFiringMode                                        DMRsFiringMode;                                           // 0x015B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFiringMode                                        SecondarySMGsFiringMode;                                  // 0x015C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFiringMode                                        SecondaryARsFiringMode;                                   // 0x015D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseRes4K;                                                // 0x015E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAutoReloadOnOutOfAmmoFire;                               // 0x015F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowCompassShade;                                        // 0x0160(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	int                                                GamepadPresets;                                           // 0x0164(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               AutoEquipAttachment;                                      // 0x0168(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EAutoEquipAttachmentForScopeMode                   AutoEquipAttachmentForScope;                              // 0x0169(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               AutoReplaceAttachment;                                    // 0x016A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableUniversalGamma;                                    // 0x016B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	TMap<struct FString, float>                        GammasForMap;                                             // 0x0170(0x0050) (ZeroConstructor, Config)
	bool                                               bAutoWeaponSkinReplacement;                               // 0x01C0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableRadioMessage;                                      // 0x01C1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableCrossNetworkPlay;                                  // 0x01C2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EContinuousHealItem                                ContinuousType;                                           // 0x01C3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ERadioMessagePresets                               RadioMessagePreset;                                       // 0x01C4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableRadioMessageQuickPing;                             // 0x01C5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseKillCam;                                              // 0x01C6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x01C7(0x0001) MISSED OFFSET
	float                                              HDRGamma;                                                 // 0x01C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	EUiShowType                                        FppWeaponIconShowType;                                    // 0x01CC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x01CD(0x0003) MISSED OFFSET
	int                                                WorldMapZoomSpeedLevel;                                   // 0x01D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	EUiShowType                                        TpsWeaponIconShowType;                                    // 0x01D4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      InputDeviceType;                                          // 0x01D5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeCrouch;                                          // 0x01D6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeProne;                                           // 0x01D7(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeWalk;                                            // 0x01D8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     bToggleSprint;                                            // 0x01D9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeHoldRotation;                                    // 0x01DA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeHoldBreath;                                      // 0x01DB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeHoldAngled;                                      // 0x01DC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModePeek;                                            // 0x01DD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeMap;                                             // 0x01DE(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeADS;                                             // 0x01DF(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETslInputModes                                     InputModeAim;                                             // 0x01E0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseNewDropItemEffects;                                   // 0x01E1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowTracerDisplay;                                       // 0x01E2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseTracerTeamColor;                                      // 0x01E3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowHead;                                                // 0x01E4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x01E5(0x0003) MISSED OFFSET
	int                                                TracerBulletModeType;                                     // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ObserverMovingSpeed;                                      // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               ObserverHeaderGunUseage;                                  // 0x01F0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               ObserverTagUseage;                                        // 0x01F1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               ObserverXRayUseage;                                       // 0x01F2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               ObserverDamageIndicatorUsage;                             // 0x01F3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               ObserverSmokeTimerUsage;                                  // 0x01F4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x01F5(0x0003) MISSED OFFSET
	TMap<struct FName, int>                            DefaultReticleMap;                                        // 0x01F8(0x0050) (ZeroConstructor, Config)
	TArray<struct FTslGamepadActionKeyData>            GamepadCustomActionKeys;                                  // 0x0248(0x0010) (ZeroConstructor, Config)
	TArray<struct FTslGamepadAxisKeyData>              GamepadCustomAxisKeys;                                    // 0x0258(0x0010) (ZeroConstructor, Config)
	int                                                BasePresetForCustomKeyBinding;                            // 0x0268(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	TMap<struct FName, float>                          DefaultReticleBrightnessMap;                              // 0x0270(0x0050) (ZeroConstructor, Config)
};

// ScriptStruct TslGame.TslMenuItemStyle
// 0x01B0 (0x01B8 - 0x0008)
struct FTslMenuItemStyle : public FSlateWidgetStyle
{
	struct FSlateBrush                                 BackgroundBrush;                                          // 0x0008(0x0090) (Edit)
	struct FSlateBrush                                 LeftArrowImage;                                           // 0x0098(0x0090) (Edit)
	struct FSlateBrush                                 RightArrowImage;                                          // 0x0128(0x0090) (Edit)
};

// ScriptStruct TslGame.TslMenuSoundsStyle
// 0x0030 (0x0038 - 0x0008)
struct FTslMenuSoundsStyle : public FSlateWidgetStyle
{
	struct FSlateSound                                 StartGameSound;                                           // 0x0008(0x0018) (Edit)
	struct FSlateSound                                 ExitGameSound;                                            // 0x0020(0x0018) (Edit)
};

// ScriptStruct TslGame.TslMenuStyle
// 0x0210 (0x0218 - 0x0008)
struct FTslMenuStyle : public FSlateWidgetStyle
{
	struct FSlateBrush                                 HeaderBackgroundBrush;                                    // 0x0008(0x0090) (Edit)
	struct FSlateBrush                                 LeftBackgroundBrush;                                      // 0x0098(0x0090) (Edit)
	struct FSlateBrush                                 RightBackgroundBrush;                                     // 0x0128(0x0090) (Edit)
	struct FSlateSound                                 MenuEnterSound;                                           // 0x01B8(0x0018) (Edit)
	struct FSlateSound                                 MenuBackSound;                                            // 0x01D0(0x0018) (Edit)
	struct FSlateSound                                 OptionChangeSound;                                        // 0x01E8(0x0018) (Edit)
	struct FSlateSound                                 MenuItemChangeSound;                                      // 0x0200(0x0018) (Edit)
};

// ScriptStruct TslGame.CustomAnimData
// 0x0088
struct FCustomAnimData
{
	TArray<class UAnimSequenceBase*>                   AnimSeqList;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FAlphaBlend                                 BlendIn;                                                  // 0x0010(0x0038) (Edit)
	struct FAlphaBlend                                 BlendOut;                                                 // 0x0048(0x0038) (Edit)
	float                                              PlayRate;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomAnimSlotType                                SlotType;                                                 // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayLowerBodyOnStand;                                    // 0x0085(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAdjustPlayRate;                                          // 0x0086(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // 0x0087(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.NpcMeleeAttackInfo
// 0x0040
struct FNpcMeleeAttackInfo
{
	struct FVector                                     RelativeLocation;                                         // 0x0000(0x000C) (Edit, IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageCheckStartSeconds;                                  // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FireDuration;                                             // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverrideMovingSpeed;                                      // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverrideMovingSpeedDuration;                              // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 OverrideMovingSpeedScaleCurve;                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ENpcWalkingSpeedType                               MovingAttackType;                                         // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreDamageAnim;                                        // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipPhysicsRotation;                                     // 0x003A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x003B(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.NpcCustomAnimInfo
// 0x0090
struct FNpcCustomAnimInfo
{
	struct FCustomAnimData                             CustomAnimData;                                           // 0x0000(0x0088) (Transient)
	float                                              AnimDuration;                                             // 0x0088(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                AnimIndex;                                                // 0x008C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.NPCDrawMovingInfo
// 0x001C
struct FNPCDrawMovingInfo
{
	struct FVector                                     ActorLocation;                                            // 0x0000(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     MovingDir;                                                // 0x000C(0x000C) (Transient, IsPlainOldData)
	float                                              Speed;                                                    // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.PoseSnapshotInfo
// 0x0010
struct FPoseSnapshotInfo
{
	struct FName                                       SnapshotName;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bActiveOnRendered;                                        // 0x000C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.NpcDamageProperties
// 0x0010
struct FNpcDamageProperties
{
	float                                              ImpulsePowerRatio;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KnockbackSpeed;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KnockbackDuration;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MultiplySpeedRatio;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.NpcRagdollProperties
// 0x0010
struct FNpcRagdollProperties
{
	float                                              LinearSpeedRatio;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LinearZSpeedRatio;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpulsePowerRatio;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTermBodyOnRagdoll;                                       // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.NpcDamageZoneDesc
// 0x0118
struct FNpcDamageZoneDesc
{
	float                                              GlobalMultiplier;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TMap<struct FName, float>                          BonesMultipliers;                                         // 0x0008(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<EWeaponClass, struct FNpcDamageProperties>    DamageProperties;                                         // 0x0058(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<EWeaponClass, struct FNpcRagdollProperties>   RagdollProperties;                                        // 0x00A8(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              RagdollLinearSpeed;                                       // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RagdollLinearZSpeed;                                      // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RagdollImpulsePower;                                      // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RagdollImpulseDuration;                                   // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageImpulsePower;                                       // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageImpulseDuration;                                    // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpulseWeight;                                            // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EDamageReason                                      DamageReason;                                             // 0x0114(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bUsingMovingSpeedOnRagdoll;                               // 0x0115(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0116(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.NpcItemSet
// 0x0020
struct FNpcItemSet
{
	TArray<class UClass*>                              ItemBpArray;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               ItemIDs;                                                  // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.NpcInfo
// 0x0030
struct FNpcInfo
{
	class UClass*                                      Pawn;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Controller;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               BehaviorTree;                                             // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FNpcItemSet>                         ItemSetArray;                                             // 0x0018(0x0010) (Edit, ZeroConstructor)
	bool                                               bRandomItemSet;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.AISpawnParameterInfo
// 0x002C
struct FAISpawnParameterInfo
{
	int                                                NpcType;                                                  // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0004(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (Transient, IsPlainOldData)
	int                                                Count;                                                    // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UObject>                      Instigator;                                               // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRadnomNavSpawn;                                          // 0x0028(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.OptionContentDesc
// 0x0068
struct FOptionContentDesc
{
	struct FName                                       OptionName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0008(0x0018) (Edit)
	struct FText                                       DescText;                                                 // 0x0020(0x0018) (Edit)
	bool                                               bIsStepper;                                               // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TArray<struct FText>                               StepperContents;                                          // 0x0040(0x0010) (Edit, ZeroConstructor)
	int                                                StepperDefaultIndex;                                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSlider;                                                // 0x0054(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              SliderMin;                                                // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderMax;                                                // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderDefaultValue;                                       // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSeparator;                                             // 0x0064(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPalette;                                               // 0x0065(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.ParticleParameter
// 0x0018
struct FParticleParameter
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // 0x0008(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bEnableRTPC;                                              // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslActorPool
// 0x0010
struct FTslActorPool
{
	TArray<class AActor*>                              ActorPoolList;                                            // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslParticleGroupInfo
// 0x0090
struct FTslParticleGroupInfo
{
	struct FName                                       GroupName;                                                // 0x0000(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETslParticleGroupPriority                          GroupPriority;                                            // 0x0008(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                MaxObjectCount;                                           // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETslParticleCullType                               CullType;                                                 // 0x0010(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRenderDuration;                                        // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSameTransformCount;                                    // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxNearbyTransformCount;                                  // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6C];                                      // 0x0024(0x006C) MISSED OFFSET
};

// ScriptStruct TslGame.PhysicalMaterialDamageInfo
// 0x0010
struct FPhysicalMaterialDamageInfo
{
	float                                              Damage;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonInfo
// 0x0030
struct FPlatoonInfo
{
	class ATslPlayerState*                             Commander;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FMapMarker                                  MapMarker;                                                // 0x0008(0x0010)
	class ATslPlatoonFireSupportController*            FireSupportController;                                    // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTslPlatoonCarePackageRequestHandler*        WeaponPackageRequestHandler;                              // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTslPlatoonCarePackageRequestHandler*        HealingPackageRequestHandler;                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPlatoonSupportCommonData
// 0x0020
struct FTslPlatoonSupportCommonData
{
	EPlatoonSupportRequestType                         Type;                                                     // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FStringClassReference                       HandlerClassRef;                                          // 0x0008(0x0010) (Edit, DisableEditOnInstance)
	bool                                               bInstantReady;                                            // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.PlayerDamageZoneDesc
// 0x00B0
struct FPlayerDamageZoneDesc
{
	float                                              GlobalMultiplier;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TMap<struct FName, float>                          BonesMultipliers;                                         // 0x0008(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<EWeaponClass, float>                          WeaponClassMultipliers;                                   // 0x0058(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              PunchMultiplier;                                          // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EEquipSlotID                                       ArmorSlot;                                                // 0x00AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EDamageReason                                      DamageReason;                                             // 0x00AD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00AE(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.ImGuiPropertyMetadata
// 0x0050
struct FImGuiPropertyMetadata
{
	TMap<struct FName, struct FString>                 Map;                                                      // 0x0000(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ImGuiClassMetadata
// 0x0050
struct FImGuiClassMetadata
{
	TMap<struct FName, struct FImGuiPropertyMetadata>  Map;                                                      // 0x0000(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.HudUiConfig
// 0x0040
struct FHudUiConfig
{
	struct FString                                     WidgetName;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FTslWidgetConfig                            WidgetConfig;                                             // 0x0010(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.GameModeAliasAndReferencePair
// 0x0018
struct FGameModeAliasAndReferencePair
{
	struct FName                                       GameModeAlias;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       Reference;                                                // 0x0008(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.ModeUIConfig
// 0x0020
struct FModeUIConfig
{
	struct FString                                     WidgetName;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FGameModeAliasAndReferencePair>      AlternativeWidgets;                                       // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.HudReplaceConfig
// 0x0058
struct FHudReplaceConfig
{
	TArray<EGameModeType>                              GameModeTypeList;                                         // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     WidgetName;                                               // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bRemoveWidget;                                            // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FTslWidgetConfig                            NewWidgetConfig;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.TslLobbySceneTravelData
// 0x0008 (0x0010 - 0x0008)
struct FTslLobbySceneTravelData : public FTableRowBase
{
	class UClass*                                      LobbySceneTravelClass;                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslBaseLobbySceneData
// 0x0030 (0x0038 - 0x0008)
struct FTslBaseLobbySceneData : public FTableRowBase
{
	struct FName                                       SceneCameraTag;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SceneLevelName;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ELobbyCharacterAnimationType                       LobbyCharacterAnimationType;                              // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideMainLobbyCharacter;                                  // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideOtherLobbyCharacter;                                 // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideWeaponMasteryObjects;                                // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideSurvivalMasteryObjects;                              // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ELobbyBlurChangingStates                           LobbyBlurChangingStates;                                  // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowUmgBlur;                                             // 0x001E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideDefaultParticle;                                     // 0x001F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ShowParticleTags;                                         // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bCachePreviousSceneName;                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseOutgameVisibilityValue;                               // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanTargetObjectRotation;                                 // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedToSpawnOnGround;                                     // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldSuppressNametag;                                   // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.LobbyWeaponData
// 0x0018
struct FLobbyWeaponData
{
	struct FName                                       WeaponId;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               WeaponAttachmentIDList;                                   // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TslLobbySceneData
// 0x0020 (0x0058 - 0x0038)
struct FTslLobbySceneData : public FTslBaseLobbySceneData
{
	TArray<struct FName>                               LobbyCharacterPivotTags;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLobbyWeaponData>                    LobbyEquipWeaponDatas;                                    // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TargetObjectRatationRange
// 0x0010
struct FTargetObjectRatationRange
{
	struct FFloatInterval                              PitchRange;                                               // 0x0000(0x0008) (Edit, BlueprintVisible)
	struct FFloatInterval                              RollRange;                                                // 0x0008(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.TslLobbyViewModeSceneData
// 0x0128 (0x0160 - 0x0038)
struct FTslLobbyViewModeSceneData : public FTslBaseLobbySceneData
{
	TMap<EViewModeCategory, struct FName>              ViewModePivots;                                           // 0x0038(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<ELobbyCharacterCameraType, struct FName>      LobbyCharacterCameras;                                    // 0x0088(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<EViewModeCategory>                          DisableScaleList;                                         // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<EViewModeCategory>                          DisableYAxisList;                                         // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<EViewModeCategory>                          DisableRotationRollbackList;                              // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<EViewModeCategory, struct FTargetObjectRatationRange> TargetObjectRatationRanges;                               // 0x0108(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	struct FVector2D                                   LoadingSpinnerOffset;                                     // 0x0158(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionTargetInputMethodInfo
// 0x0002
struct FTslGameOptionTargetInputMethodInfo
{
	bool                                               bKeyboardMouse;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGamepad;                                                 // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslOptionTableRowDescriptor
// 0x0028 (0x0030 - 0x0008)
struct FTslOptionTableRowDescriptor : public FTableRowBase
{
	int                                                ItemIndex;                                                // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FText                                       DisplayNameText;                                          // 0x0010(0x0018) (Edit, DisableEditOnInstance)
	struct FTslGameOptionTargetInputMethodInfo         TargetInputMethod;                                        // 0x0028(0x0002) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.TslGameOptionTabsTableRow
// 0x0008 (0x0038 - 0x0030)
struct FTslGameOptionTabsTableRow : public FTslOptionTableRowDescriptor
{
	struct FName                                       TabName;                                                  // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionTargetHudInfo
// 0x0002
struct FTslGameOptionTargetHudInfo
{
	bool                                               bVisibleInLobby;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVisibleInGame;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslGameOptionCategoriesTableRow
// 0x0018 (0x0048 - 0x0030)
struct FTslGameOptionCategoriesTableRow : public FTslOptionTableRowDescriptor
{
	struct FName                                       TabName;                                                  // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryName;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTslGameOptionTargetHudInfo                 TargetHud;                                                // 0x0040(0x0002) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.TslGameOptionItemsTableRow
// 0x0100 (0x0130 - 0x0030)
struct FTslGameOptionItemsTableRow : public FTslOptionTableRowDescriptor
{
	EOptionTab                                         TabName;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0030(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       CategoryName;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemName;                                                 // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       DescriptionText;                                          // 0x0048(0x0018) (Edit, DisableEditOnInstance)
	class UClass*                                      ItemWidgetClass;                                          // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTslGameOptionSupplementaryData             WidgetSupplementaryData;                                  // 0x0068(0x0058) (Edit, DisableEditOnInstance)
	class UClass*                                      TslGameOptionFuncClass;                                   // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsCloudOption;                                           // 0x00C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	TArray<struct FTslGameOptionItemStepperData_EditorType> StepperDatas;                                             // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FTslGameOptionKeyBindingDesc                KeyBindingDesc;                                           // 0x00E0(0x0038) (Edit, DisableEditOnInstance)
	struct FString                                     AdditionalInitParameter;                                  // 0x0118(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FTslGameOptionTargetHudInfo                 TargetHud;                                                // 0x0128(0x0002) (Edit, DisableEditOnInstance)
	bool                                               bUseIndentation;                                          // 0x012A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x012B(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.TslGameOptionCategoryInfo
// 0x0058
struct FTslGameOptionCategoryInfo
{
	struct FTslGameOptionCategoriesTableRow            CategoryDesc_DataTableRow;                                // 0x0000(0x0048) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FTslGameOptionItemsTableRow>         Items_DataTable;                                          // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.TslGameOptionTabInfo
// 0x0048
struct FTslGameOptionTabInfo
{
	struct FTslGameOptionTabsTableRow                  TabDesc_DataTableRow;                                     // 0x0000(0x0038) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FTslGameOptionCategoryInfo>          Categories;                                               // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.TslGameOptionHierarchy
// 0x0010
struct FTslGameOptionHierarchy
{
	TArray<struct FTslGameOptionTabInfo>               Hierarchy;                                                // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ScreenResolution
// 0x0008
struct FScreenResolution
{
	int                                                Width;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ExplosionTracer
// 0x0040
struct FExplosionTracer
{
	bool                                               bEnabled;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FVector2D>                           StandingTraceTargets;                                     // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector2D>                           CrouchTraceTargets;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                             ProneTraceTargets;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                              ProxyTraceMaxLenght;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProxyTraceMinLenght;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ProjectileData
// 0x00D0
struct FProjectileData
{
	float                                              ProjectileLife;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExplosionDamage;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionRadius;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IgniteFuelInRadius;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageCurve;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DistanceCurveCurveVertical;                               // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactVelocityForSound;                                // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeBetweenImpactSound;                                   // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                VerticalSurfaceImpactLimit;                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AbsPitchLimitForVerticalSurface;                          // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WaterHit_VelocityScalar;                                  // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WaterHit_GravityScalar;                                   // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      DestroyAtExplosion : 1;                                   // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIgnoreVerticalSurfaces : 1;                              // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bExplodeOnDamage : 1;                                     // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<EDamageTypeCategory>                        ExplodeFromDamageTypes;                                   // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<EDamageTypeCategory>                        DestroyFromDamageTypes;                                   // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bDamageCheckThroughWalls;                                 // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToHitActor;                                        // 0x0069(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x006A(0x0006) MISSED OFFSET
	TArray<TEnumAsByte<EPhysicalSurface>>              AttachToPhysicalMaterials;                                // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               ApplyHorizontalVerticalDamageSeperately;                  // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldCheckMovementBase;                                 // 0x0081(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0082(0x0002) MISSED OFFSET
	float                                              AttachedRepDistance;                                      // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttachedRepDistanceConsole;                               // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	class UTexture*                                    DamageCauserIcon;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageIconRatio;                                          // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FText                                       DamageCauserItemName;                                     // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EWeaponClass                                       DamageCauserClass;                                        // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExplodeOnBreachable;                                     // 0x00B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanDestroyBuildings;                                     // 0x00BA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageOnImpact;                                          // 0x00BB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactDamage;                                             // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ImpactDamageCurve;                                        // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ImpactDamageType;                                         // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SegmentPoint
// 0x0018
struct FSegmentPoint
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x000C(0x000C) (IsPlainOldData)
};

// ScriptStruct TslGame.ProjectileConfig
// 0x00E8
struct FProjectileConfig
{
	bool                                               bExplodeOnImpact;                                         // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ExplosionDamage;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionRadius;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IgniteFuelInRadius;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageCurve;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExplosionTemplate;                                        // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExplosionTemplateInAir;                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExplosionTemplateWater;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExplosionTemplatePenetration;                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExplosionDamageVehicleArmorPenetration;                   // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UClass*                                      DamageTypeVehicleArmorPenetration;                        // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleImpactMinDamage;                                   // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleImpactHPPercentAsDamage;                           // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    DamageCauserIcon;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageIconRatio;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FText                                       DamageCauserItemName;                                     // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EWeaponClass                                       DamageCauserClass;                                        // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	float                                              ConeShapeDamageMultiplier;                                // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bExplodeOnDamage : 1;                                     // 0x0088(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              RotationSpeed;                                            // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FExplosionTracer                            ExplosionTracer;                                          // 0x0090(0x0040) (Edit, DisableEditOnInstance)
	bool                                               bShouldPenetrate;                                         // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	float                                              PenetrationDepth;                                         // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PostExplodeLifetime;                                      // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TrailPostExplodeLifetime;                                 // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanDestroyBuildings;                                     // 0x00E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslRadioChannelInfo
// 0x0010
struct FTslRadioChannelInfo
{
	class UAkAudioEvent*                               AudioEvent;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TotPlayTime;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslRailNode
// 0x0030
struct FTslRailNode
{
	struct FName                                       SplineName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MoveCurve;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInverseMove;                                             // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartDist;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x001C(0x0008) MISSED OFFSET
	float                                              PreArrivalAlertTime;                                      // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ArrivalAlertTime;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepartureAlertTime;                                       // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DoorBreakingState
// 0x0001
struct FDoorBreakingState
{
	unsigned char                                      bIsBrokenTop : 1;                                         // 0x0000(0x0001)
	unsigned char                                      bIsBrokenCenter : 1;                                      // 0x0000(0x0001)
	unsigned char                                      bIsBrokenBottom : 1;                                      // 0x0000(0x0001)
};

// ScriptStruct TslGame.SandboxMasterEffect
// 0x0020
struct FSandboxMasterEffect
{
	class UParticleSystem*                             ps;                                                       // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0010(0x000C) (Edit, IsPlainOldData)
	bool                                               bEnableRelVelEffect;                                      // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.SandboxMasterEffectGroup
// 0x0018
struct FSandboxMasterEffectGroup
{
	ESandboxPowerType                                  EffectType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0000(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FSandboxMasterEffect>                EffectArray;                                              // 0x0008(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.UniqueWeaponInfo
// 0x0018
struct FUniqueWeaponInfo
{
	TArray<struct FName>                               MapsToSpawnIn;                                            // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FName                                       ItemID;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslEmoteAsyncLoadHandleSet
// 0x0028
struct FTslEmoteAsyncLoadHandleSet
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.EmoteRefrenceSet
// 0x0028
struct FEmoteRefrenceSet
{
	TAssetPtr<class UAnimMontage>                      AnimMontage_Ref;                                          // 0x0000(0x0020) (Transient)
	class UAnimMontage*                                AnimMontage;                                              // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.NpcSpawnParam
// 0x0008
struct FNpcSpawnParam
{
	int                                                NpcType;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SpawnNum;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.NpcTimeSpawnParam
// 0x0020
struct FNpcTimeSpawnParam
{
	float                                              StartDelay;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRadius;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FNpcSpawnParam>                      NpcSpawnParamArray;                                       // 0x0008(0x0010) (Edit, ZeroConstructor)
	int                                                NpcCount;                                                 // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SavedObPos
// 0x0018
struct FSavedObPos
{
	struct FVector                                     Loc;                                                      // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    Rot;                                                      // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct TslGame.Texture2DAndSizePair
// 0x0010
struct FTexture2DAndSizePair
{
	class UTexture2D*                                  Texture;                                                  // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0008(0x0008) (Edit, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct TslGame.TslTimeDilationInfo
// 0x001C
struct FTslTimeDilationInfo
{
	struct FVector2D                                   RealTime;                                                 // 0x0000(0x0008) (IsPlainOldData)
	struct FVector2D                                   TimeDilation;                                             // 0x0008(0x0008) (IsPlainOldData)
	struct FVector2D                                   Area;                                                     // 0x0010(0x0008) (IsPlainOldData)
	float                                              StartElapsedTime;                                         // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslRailCar
// 0x00A0
struct FTslRailCar
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              FrontOffset;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BackOffset;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     CenterPivot;                                              // 0x0010(0x000C) (IsPlainOldData)
	struct FRotator                                    RailCarRot;                                               // 0x001C(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FTransform                                  PrevWorldTM;                                              // 0x0030(0x0030) (IsPlainOldData)
	struct FTransform                                  WorldTM;                                                  // 0x0060(0x0030) (IsPlainOldData)
	float                                              BentOffset;                                               // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0094(0x000C) MISSED OFFSET
};

// ScriptStruct TslGame.MovingActorAttachmentInfo
// 0x0010
struct FMovingActorAttachmentInfo
{
	class USceneComponent*                             MovingActorParent;                                        // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       ChildActor;                                               // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.LeaderboardPlayerInfo
// 0x001C (0x0030 - 0x0014)
struct FLeaderboardPlayerInfo : public FLeaderboardDynamicPlayerInfo
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	EOutGamePlatformProvider                           PlatformProvider;                                         // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.LeaderboardTeamInfo
// 0x0038
struct FLeaderboardTeamInfo
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Chances;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     TeamName;                                                 // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLeaderboardPlayerInfo>              PlayersInfo;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<bool>                                       RoundHistory;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.WeaponArmInfo
// 0x0005
struct FWeaponArmInfo
{
	unsigned char                                      ServerUpdateSeqNum;                                       // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             RightWeaponIndex;                                         // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             LeftWeaponIndex;                                          // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	EWeaponTransitionState                             State;                                                    // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	EWeaponTransitionState                             LeftState;                                                // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.UmgWidgetBinder_Spacer
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_Spacer : public FUmgWidgetBinder
{
	class USpacer*                                     CachedSpacer;                                             // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.TabStringArray
// 0x0010
struct FTabStringArray
{
	TArray<struct FString>                             StringArray;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.UmgWidgetBinder_ScaleBox
// 0x0008 (0x0028 - 0x0020)
struct FUmgWidgetBinder_ScaleBox : public FUmgWidgetBinder_Panel
{
	class UScaleBox*                                   CachedScaleBox;                                           // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.RegistedPlayer
// 0x0020
struct FRegistedPlayer
{
	class ATslPlayerState*                             PlayerState;                                              // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.RadioMessageWidgetInfo
// 0x0018
struct FRadioMessageWidgetInfo
{
	ERadioMessageCategory                              Category;                                                 // 0x0000(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UWidgetSwitcher*                             WidgetSwitcher;                                           // 0x0008(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            WidgetAnimation;                                          // 0x0010(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.RadioMessageBlockInputsByPreset
// 0x0028
struct FRadioMessageBlockInputsByPreset
{
	ERadioMessagePresets                               preset;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FBlockAction>                        BlockActionList;                                          // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               BlockAxisList;                                            // 0x0018(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.SpawnKitItemInfo
// 0x0020
struct FSpawnKitItemInfo
{
	int                                                ItemCount;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               AttachmentIDs;                                            // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.SpawnKitInfo
// 0x0028
struct FSpawnKitInfo
{
	struct FText                                       InfoName;                                                 // 0x0000(0x0018) (Edit, BlueprintVisible)
	TArray<struct FSpawnKitItemInfo>                   ItemInfos;                                                // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.FBRClassDescription
// 0x0068
struct FFBRClassDescription
{
	struct FText                                       Title;                                                    // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Subtitle;                                                 // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<unsigned char>                              Stats;                                                    // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FStringAssetReference                       Image;                                                    // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.UmgWidgetBinder_EditableText
// 0x0008 (0x0020 - 0x0018)
struct FUmgWidgetBinder_EditableText : public FUmgWidgetBinder
{
	class UEditableText*                               CachedEditableText;                                       // 0x0018(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.TslWheelSubWidgetClassEntry
// 0x0010
struct FTslWheelSubWidgetClassEntry
{
	int                                                SubWidgetCount;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UClass*                                      SubWidgetClass;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.EmoteDBDataRow
// 0x0070 (0x0078 - 0x0008)
struct FEmoteDBDataRow : public FTableRowBase
{
	int                                                EmoteID;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FText                                       EmoteLocalizedName;                                       // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UTexture2D*                                  UITexture;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          UIMaterial;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAnimMontage>                      AnimMogtage_SoftRef;                                      // 0x0038(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EEmoteAnimType                                     AnimType;                                                 // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsBGM_Sound;                                             // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsRotationAllowed;                                       // 0x005A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLoopable;                                              // 0x005B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsRNG;                                                   // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsCooperative;                                           // 0x005D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	class UTslEmoteTraceData*                          TraceDataRef;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FPPEmoteViewPitchMin;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FPPEmoteViewPitchMax;                                     // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FPPEmoteViewYawMin;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FPPEmoteViewYawMax;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslDynamicWheelItem
// 0x0018
struct FTslDynamicWheelItem
{
	int                                                ItemSlotID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FName>                               ItemIDs;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.CaptureObjectWidgetColorSet
// 0x0030
struct FCaptureObjectWidgetColorSet
{
	struct FLinearColor                                GaugeColor;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                TrackColor;                                               // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                CenterColorWhenCaptured;                                  // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct TslGame.CaptureObjectWidgetData
// 0x0108
struct FCaptureObjectWidgetData
{
	struct FUmgWidgetBinder_Border                     OutsideBorder_Binder;                                     // 0x0000(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FUmgWidgetBinder_Image                      CircleImage_Binder;                                       // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FUmgWidgetBinder_TextBlock                  DistanceTextBlock_Binder;                                 // 0x0058(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FUmgWidgetBinder_TextBlock                  CaptureObjectNameTextBlock_Binder;                        // 0x0078(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bShowDistance;                                            // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	struct FCaptureObjectWidgetColorSet                NeutralColorSet;                                          // 0x009C(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TArray<struct FCaptureObjectWidgetColorSet>        TeamColorSets;                                            // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FLinearColor                                CenterColorWhenNotCaptured;                               // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class ATslGameState*                               TslGameState;                                             // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class ATslPlayerController*                        TslPlayerController;                                      // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ACaptureAreaActor*                           CaptureAreaActor;                                         // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CraftableItemAndCount
// 0x0010
struct FCraftableItemAndCount
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.CraftMaterialCount
// 0x0010
struct FCraftMaterialCount
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.UiEffectAnimation_FloatCurve
// 0x00B0
struct FUiEffectAnimation_FloatCurve
{
	struct FSequence_Float                             FloatCurve;                                               // 0x0000(0x00A0) (Edit, BlueprintVisible)
	TArray<struct FName>                               ParamNames;                                               // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.Sequence_Vector
// 0x0008 (0x00A0 - 0x0098)
struct FSequence_Vector : public FSequenceBase
{
	class UCurveVector*                                VectorCurve;                                              // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.UiEffectAnimation_VectorCurve
// 0x00B0
struct FUiEffectAnimation_VectorCurve
{
	struct FSequence_Vector                            VectorCurve;                                              // 0x0000(0x00A0) (Edit, BlueprintVisible)
	TArray<struct FName>                               ParamNames;                                               // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.GaugeAlphaCurveType
// 0x0010
struct FGaugeAlphaCurveType
{
	struct FFloatInterval                              DamageRange;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UCurveVector*                                ColorCurve;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.MapLocationData
// 0x0028
struct FMapLocationData
{
	ELocationType                                      LocationType;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       LocationName;                                             // 0x0008(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   Position_MC;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct TslGame.MapWayPointBaseWidgets
// 0x0010
struct FMapWayPointBaseWidgets
{
	TArray<class UMapWayPointBaseWidget*>              WaypointWidgetArr;                                        // 0x0000(0x0010) (ExportObject, ZeroConstructor)
};

// ScriptStruct TslGame.AircraftRouteData
// 0x0030
struct FAircraftRouteData
{
	class ATslAircraftVehicle*                         Aircraft;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      AircraftIcon;                                             // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ArrowHead;                                                // 0x0010(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ArrowBody;                                                // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ArrowTail;                                                // 0x0020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.LootTruckRouteData
// 0x0010
struct FLootTruckRouteData
{
	class ATslWheeledVehicle*                          LootTruck;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      LootTruckIcon;                                            // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.MapIconCommonData
// 0x0008
struct FMapIconCommonData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.FlareGunPackageDropZoneData
// 0x0020
struct FFlareGunPackageDropZoneData
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	class UImage*                                      DropZoneCircle;                                           // 0x0010(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              DropZoneAlphaCurveTime;                                   // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleRiderData
// 0x0020
struct FVehicleRiderData
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.MapIconUpdateData
// 0x00A0
struct FMapIconUpdateData
{
	class UMapCharacterIconBaseWidget*                 Icon;                                                     // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOutsideTeamIconWidget*                      OutsideIcon;                                              // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                IconColor;                                                // 0x0010(0x0010) (IsPlainOldData)
	bool                                               bShowMemberNumber;                                        // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	int                                                MemberNumber;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	ECharacterIconType                                 IconType;                                                 // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              Rotation;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CharacterState;                                           // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowPlayerName;                                          // 0x0034(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FText                                       PlayerName;                                               // 0x0038(0x0018)
	struct FLinearColor                                NameTagColor;                                             // 0x0050(0x0010) (IsPlainOldData)
	bool                                               bIsMine;                                                  // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowTeamNumber;                                          // 0x0061(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	int                                                TeamNumber;                                               // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Position;                                                 // 0x0068(0x0008) (IsPlainOldData)
	bool                                               bIsSpectated;                                             // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasTeamMember;                                           // 0x0071(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	TArray<struct FVehicleRiderData>                   RiderDatas;                                               // 0x0078(0x0010) (ZeroConstructor)
	bool                                               bAlive;                                                   // 0x0088(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowDirection;                                           // 0x0089(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowStatus;                                              // 0x008A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x008B(0x0001) MISSED OFFSET
	float                                              IconScale;                                                // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsOutSide;                                               // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsCorner;                                                // 0x0091(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	float                                              ViewTargetToCharDistanceSquared;                          // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0098(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.OutsideTeamIconData
// 0x0020
struct FOutsideTeamIconData
{
	struct FVector2D                                   LocatoinMC;                                               // 0x0000(0x0008) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
	class UMaterialInstanceDynamic*                    MatInst;                                                  // 0x0018(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonMapMarkerData
// 0x0018
struct FPlatoonMapMarkerData
{
	class UMapMarkerBaseWidget*                        MapMarkerWidget;                                          // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FMapMarker                                  MapMarker;                                                // 0x0008(0x0010)
};

// ScriptStruct TslGame.PlatoonFireSupportAreaData
// 0x0020
struct FPlatoonFireSupportAreaData
{
	class UWidget*                                     IndicatorWidget;                                          // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bShow;                                                    // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsUpdated;                                               // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	struct FVector                                     SpawnPosition;                                            // 0x000C(0x000C) (IsPlainOldData)
	float                                              AreaRadius;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PlatoonCarePackageDropData
// 0x0020
struct FPlatoonCarePackageDropData
{
	class UTslPlatoonCarePackageDropIndicatorWidget*   IndicatorWidget;                                          // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
	int                                                IssuedBy;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DropPosition;                                             // 0x0010(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ExtendedSizeConfig
// 0x0028
struct FExtendedSizeConfig
{
	float                                              MinimapSize;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EMinimapFocus                                      MinimapFocus;                                             // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBluezoneInfoIntoMap;                                   // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              ViewScale1D;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ViewScale_AccelerationCurve;                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ViewScale_DecelerationCurve;                              // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsExtendedSize;                                          // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.DamageSpectatorWidgetBinder
// 0x0070
struct FDamageSpectatorWidgetBinder
{
	struct FUmgWidgetBinder_HorizontalBox              HorizontalBox;                                            // 0x0000(0x0028) (Edit, DisableEditOnInstance)
	struct FUmgWidgetBinder_SizeBox                    HeadShotSizeBoxBinder;                                    // 0x0028(0x0028) (Edit, DisableEditOnInstance)
	struct FUmgWidgetBinder_TextBlock                  DamageTextBinder;                                         // 0x0050(0x0020) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.ReplicatedCharacterCustomizationOptions
// 0x0078
struct FReplicatedCharacterCustomizationOptions
{
	TArray<struct FString>                             StringOptionKeys;                                         // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FString>                             StringOptionValues;                                       // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FString>                             BoolOptionKeys;                                           // 0x0020(0x0010) (ZeroConstructor)
	TArray<bool>                                       BoolOptionValues;                                         // 0x0030(0x0010) (ZeroConstructor)
	TArray<struct FString>                             FloatOptionKeys;                                          // 0x0040(0x0010) (ZeroConstructor)
	TArray<float>                                      FloatOptionValues;                                        // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FString>                             ItemIDs;                                                  // 0x0060(0x0010) (ZeroConstructor)
	bool                                               GenderIsMale;                                             // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuUnrealPlayerCardStat
// 0x0070
struct FWuUnrealPlayerCardStat
{
	struct FString                                     IconId;                                                   // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Title;                                                    // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     TitleArg;                                                 // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     Subtitle;                                                 // 0x0030(0x0010) (ZeroConstructor)
	struct FString                                     SubtitleArg;                                              // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x0050(0x0010) (ZeroConstructor)
	struct FString                                     ValueArg;                                                 // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuUnrealPlayerCard
// 0x0198
struct FWuUnrealPlayerCard
{
	int                                                CurrentLevel;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     PrimaryBackgroundColor;                                   // 0x0008(0x0010) (ZeroConstructor)
	struct FString                                     BackgroundId;                                             // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     EmblemId;                                                 // 0x0028(0x0010) (ZeroConstructor)
	struct FString                                     BannerId;                                                 // 0x0038(0x0010) (ZeroConstructor)
	struct FWuUnrealPlayerCardStat                     Slot1;                                                    // 0x0048(0x0070)
	struct FWuUnrealPlayerCardStat                     Slot2;                                                    // 0x00B8(0x0070)
	struct FWuUnrealPlayerCardStat                     Slot3;                                                    // 0x0128(0x0070)
};

// ScriptStruct TslGame.ReplicatedPUBGIdData
// 0x0228
struct FReplicatedPUBGIdData
{
	struct FReplicatedCharacterCustomizationOptions    CharacterCustomization;                                   // 0x0000(0x0078) (BlueprintVisible, BlueprintReadOnly)
	struct FWuUnrealPlayerCard                         PlayerCard;                                               // 0x0078(0x0198) (BlueprintVisible, BlueprintReadOnly)
	struct FString                                     Nickname;                                                 // 0x0210(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	EOutGamePlatformProvider                           PlayerPlatform;                                           // 0x0220(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.UiEffectAnimation_FloatCurve2
// 0x00B0
struct FUiEffectAnimation_FloatCurve2
{
	struct FSequence_Float                             FloatCurve;                                               // 0x0000(0x00A0) (Edit, BlueprintVisible)
	TArray<struct FName>                               ParamNames;                                               // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.UiEffectAnimation_VectorCurve2
// 0x00B0
struct FUiEffectAnimation_VectorCurve2
{
	struct FSequence_Vector                            VectorCurve;                                              // 0x0000(0x00A0) (Edit, BlueprintVisible)
	TArray<struct FName>                               ParamNames;                                               // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.BorderBrushType
// 0x00A0
struct FBorderBrushType
{
	struct FSlateBrush                                 Background;                                               // 0x0000(0x0090) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FLinearColor                                BrushColor;                                               // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct TslGame.DirectionTextData
// 0x0028
struct FDirectionTextData
{
	struct FText                                       DirectionText;                                            // 0x0000(0x0018) (Edit, BlueprintVisible)
	struct FLinearColor                                TextColor;                                                // 0x0018(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonCompassMarkerWidgetData
// 0x0010
struct FPlatoonCompassMarkerWidgetData
{
	class UTslCompassMarkerWidget*                     Widget;                                                   // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector2D                                   LastPosition;                                             // 0x0008(0x0008) (IsPlainOldData)
};

// ScriptStruct TslGame.ReportDetailCauseTypeDescription
// 0x0020
struct FReportDetailCauseTypeDescription
{
	EReportDetailCauseType                             ReportDetailCauseType;                                    // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       Description;                                              // 0x0008(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.AIModePresetData
// 0x0088
struct FAIModePresetData
{
	TAssetPtr<class UClass>                            AIControllerClass;                                        // 0x0000(0x0020) (Edit)
	TAssetPtr<class UClass>                            AIActingComp;                                             // 0x0020(0x0020) (Edit)
	class UTslGamemodeAIDataAsset*                     GameModeAIDataAsset;                                      // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class UClass>                            AIInitialItemDonatorClass;                                // 0x0048(0x0020) (Edit)
	TAssetPtr<class UDataTable>                        CharacterCostumeSetDataTable;                             // 0x0068(0x0020) (Edit)
};

// ScriptStruct TslGame.AIModePresetsPerMap
// 0x0098
struct FAIModePresetsPerMap
{
	struct FString                                     MapName;                                                  // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FAIModePresetData                           AIPresetData;                                             // 0x0010(0x0088) (Edit)
};

// ScriptStruct TslGame.VaultingExecutionConfig
// 0x0068
struct FVaultingExecutionConfig
{
	float                                              ExecutionDistance;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationDistance;                                     // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   AnticipationMapIn;                                        // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   AnticipationMapOut;                                       // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              MinExecutionDOT;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAnimStartForDistance;                                 // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUse3DDistance;                                           // 0x001D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
	struct FFloatRange                                 ExecutionZRange;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bUseAnticipationAnim;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UAnimSequenceBase*                           AnticipationAnim;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 AnticipationAnimCurve;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0048(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.VaultingTypeRequirements
// 0x00D0
struct FVaultingTypeRequirements
{
	struct FInt32Range                                 RowRange;                                                 // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFloatRange                                 CapsuleRelativeRange;                                     // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFloatRange                                 SpeedRange;                                               // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFloatRange                                 ZSpeedRange;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FInt32Range                                 LedgeRange;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FInt32Range                                 FreeSpaceRange;                                           // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	EVaultRequirementType                              IsVault;                                                  // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVaultRequirementType                              IsClimb;                                                  // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVaultRequirementType                              IsLedgeGrab;                                              // 0x0062(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVaultRequirementType                              IsSlide;                                                  // 0x0063(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVaultRequirementType                              IsNarrow;                                                 // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	struct FVaultingExecutionConfig                    ExecConfig;                                               // 0x0068(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.VaultingLedgeData
// 0x0008
struct FVaultingLedgeData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.BuffCoolTimeInfo
// 0x0010
struct FBuffCoolTimeInfo
{
	class UClass*                                      BuffClass;                                                // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CoolTimeStartSec;                                         // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      BuffCounter;                                              // 0x000C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.OverlappingObjectInfo
// 0x0010
struct FOverlappingObjectInfo
{
	class UObject*                                     Target;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.VaultingHandleInput
// 0x0068
struct FVaultingHandleInput
{
	struct FVector                                     ImpactLocation;                                           // 0x0000(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     CapsulePredictedLocation;                                 // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     CapsuleImpactLocation;                                    // 0x0018(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     Normal2D;                                                 // 0x0024(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     DirectionVector;                                          // 0x0030(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              JumpDistance;                                             // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsForceVault : 1;                                        // 0x0040(0x0001) (BlueprintVisible)
	unsigned char                                      bIsBlockVault : 1;                                        // 0x0040(0x0001) (BlueprintVisible)
	unsigned char                                      bIsBlockClimb : 1;                                        // 0x0040(0x0001) (BlueprintVisible)
	unsigned char                                      bIsLedgeGrab : 1;                                         // 0x0040(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                FirstRow;                                                 // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactVelocity;                                           // 0x0048(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                RowOffset;                                                // 0x0054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NormalSampleDotThreshold;                                 // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CharacterVelocity;                                        // 0x005C(0x000C) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct TslGame.VaultingResultHitData
// 0x0648
struct FVaultingResultHitData
{
	unsigned char                                      UnknownData00[0x648];                                     // 0x0000(0x0648) MISSED OFFSET
};

// ScriptStruct TslGame.VaultingHandleResult
// 0x0700
struct FVaultingHandleResult
{
	struct FVector                                     Start;                                                    // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Apex;                                                     // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     ApexAdditive;                                             // 0x0024(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              Direction;                                                // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayerSpeed2D;                                            // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFromObject;                                       // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AdditiveEndZOffset;                                       // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVaultAnimType                                     VaultType;                                                // 0x0040(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                MoveIndex;                                                // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsPassed : 1;                                            // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsClimbing : 1;                                          // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsEndToFall : 1;                                         // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FVaultingExecutionConfig                    ExecConfig;                                               // 0x0050(0x0068) (BlueprintVisible, BlueprintReadOnly)
	struct FVaultingResultHitData                      HitData;                                                  // 0x00B8(0x0648) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.DamageRatioInfo
// 0x0008
struct FDamageRatioInfo
{
	float                                              DamageRatio;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EDamageVictimActorType                             DamageVictimActorType;                                    // 0x0004(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.AkEventVariant
// 0x0018
struct FAkEventVariant
{
	struct FString                                     EventName;                                                // 0x0000(0x0010) (ZeroConstructor)
	class UAkAudioEvent*                               AkAudioEvent;                                             // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AkVariant
// 0x000C
struct FAkVariant
{
	float                                              AttenuationScalingFactor;                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AutoPlayDistance;                                         // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               StopWhenOwnerDestroyed;                                   // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseReverbVolumes;                                        // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseDoppler;                                              // 0x000A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoPost;                                                // 0x000B(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AkAmbientSoundInstance
// 0x0020
struct FAkAmbientSoundInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0008(0x000C) (IsPlainOldData)
	int                                                VariantId;                                                // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                OcclusionSettingId;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AkEventId;                                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TurningInPlaceAnimInfo
// 0x0040
struct FTurningInPlaceAnimInfo
{
	class UAnimSequence*                               Left45;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Left90;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Left135;                                                  // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Left180;                                                  // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Right45;                                                  // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Right90;                                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Right135;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Right180;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AnimSpeedInfo
// 0x0020
struct FAnimSpeedInfo
{
	float                                              F;                                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              L;                                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              R;                                                        // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              B;                                                        // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FL;                                                       // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FR;                                                       // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BL;                                                       // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BR;                                                       // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AnimInfo
// 0x0190
struct FAnimInfo
{
	class UAnimSequence*                               BasePoseCombat;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               BasePoseRelaxed;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIdleAnimationList                          IdleAnimationsCombat;                                     // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FIdleAnimationList                          IdleAnimationsRelaxed;                                    // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UBlendSpace*                                 BlendSpaceAimOffsetCombat;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTurningInPlaceAnimInfo                     CombatTurningInPlace;                                     // 0x0038(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FTurningInPlaceAnimInfo                     RelaxedTurningInPlace;                                    // 0x0078(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceRelaxedRef;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceAimOffsetRelaxed;                               // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               RelaxedToCombatTransition;                                // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               CombatToRelaxedTransition;                                // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceRef;                                            // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStart;                                          // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopLeft;                                       // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopRight;                                      // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotLeft;                                      // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotRight;                                     // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceFastTurnPivot;                                  // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStartRelaxed;                                   // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopLeftRelaxed;                                // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopRightRelaxed;                               // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotLeftRelaxed;                               // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotRightRelaxed;                              // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAnimSpeedInfo                              AnimSpeed_Walk;                                           // 0x0138(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FAnimSpeedInfo                              AnimSpeed_Run;                                            // 0x0158(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimSpeed_Sprint;                                         // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	class UBlendSpace*                                 BlendSpaceFPPRef;                                         // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceRelaxedFPPRef;                                  // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.GaitValues
// 0x000C
struct FGaitValues
{
	float                                              Walk;                                                     // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Run;                                                      // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Sprint;                                                   // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.HealingAnimInfo
// 0x0010
struct FHealingAnimInfo
{
	class UAnimSequence*                               Default;                                                  // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               ParentControl;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.HealingItemAnimInfo
// 0x0040
struct FHealingItemAnimInfo
{
	struct FHealingAnimInfo                            StandTPP;                                                 // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FHealingAnimInfo                            StandFPP;                                                 // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FHealingAnimInfo                            ProneTPP;                                                 // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FHealingAnimInfo                            ProneFPP;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAnimStanceInfoBase
// 0x00B8
struct FWeaponAnimStanceInfoBase
{
	class UAnimSequence*                               BasePose;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIdleAnimationList                          IdleAnimations;                                           // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UBlendSpace*                                 BlendSpaceAimOffset;                                      // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTurningInPlaceAnimInfo                     TurningInPlace;                                           // 0x0020(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceLocomotion;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStart;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAnimSpeedInfo                              AnimSpeed_Walk;                                           // 0x0070(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FAnimSpeedInfo                              AnimSpeed_Run;                                            // 0x0090(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimSpeed_Sprint;                                         // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AimOffsetBlendTime;                                       // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAnimStanceInfoStand
// 0x0058 (0x0110 - 0x00B8)
struct FWeaponAnimStanceInfoStand : public FWeaponAnimStanceInfoBase
{
	class UAnimSequence*                               JumpStartForward;                                         // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               JumpStartBackward;                                        // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               JumpStartStationary;                                      // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               JumpStartLocalForward;                                    // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               JumpStartLocalBackward;                                   // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               JumpStartLocalStationary;                                 // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopLeft;                                       // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopRight;                                      // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotLeft;                                      // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpacePivotRight;                                     // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceFastTurnPivot;                                  // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAnimStanceInfoCrouch
// 0x0010 (0x00C8 - 0x00B8)
struct FWeaponAnimStanceInfoCrouch : public FWeaponAnimStanceInfoBase
{
	class UBlendSpace*                                 BlendSpaceStopLeft;                                       // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBlendSpace*                                 BlendSpaceStopRight;                                      // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponAnimStanceInfoProne
// 0x0008 (0x00C0 - 0x00B8)
struct FWeaponAnimStanceInfoProne : public FWeaponAnimStanceInfoBase
{
	class UBlendSpace*                                 BlendSpaceStop;                                           // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.RaycastConfigExtraOptions
// 0x0010
struct FRaycastConfigExtraOptions
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, IsPlainOldData)
	bool                                               PlayDefaultEventOnMiss;                                   // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.RaycastConfig
// 0x0038
struct FRaycastConfig
{
	ERaycastDirection                                  Direction;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomDirection;                                      // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FVector                                     CustomDirVector;                                          // 0x0004(0x000C) (Edit, IsPlainOldData)
	struct FName                                       BoneToCastFrom;                                           // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CastDistance;                                             // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class UPhysicalMaterialAudioEventData*             PhysMatData;                                              // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRaycastConfigExtraOptions                  ExtraOptions;                                             // 0x0028(0x0010) (Edit)
};

// ScriptStruct TslGame.CheatData
// 0x02B8
struct FCheatData
{
	unsigned char                                      UnknownData00[0x2B8];                                     // 0x0000(0x02B8) MISSED OFFSET
};

// ScriptStruct TslGame.AntiCheatBanChecker
// 0x0001
struct FAntiCheatBanChecker
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.AntiCheatVehicleServerSimulationChecker
// 0x0001
struct FAntiCheatVehicleServerSimulationChecker
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.LobbyItemDesc
// 0x0060
struct FLobbyItemDesc
{
	unsigned char                                      bCashSellable : 1;                                        // 0x0000(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPointSellable : 1;                                       // 0x0000(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bMarketable : 1;                                          // 0x0000(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPointRefundable : 1;                                     // 0x0000(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     XboxConsumableId;                                         // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	ELobbyItemTier                                     Tier;                                                     // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ELobbyItemCategory                                 Category;                                                 // 0x0019(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	struct FText                                       Description;                                              // 0x0020(0x0018) (Edit, DisableEditOnInstance)
	bool                                               bTradeUpResult;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTradeUpMaterial;                                         // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	TArray<ELobbyItemPlatform>                         Platforms;                                                // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              CashSellingPrice;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ELobbyItemPointSellingType                         PointSellingType;                                         // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                PointSellingPrice;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PointRefundingPrice;                                      // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PendingCollisionResponse
// 0x0002
struct FPendingCollisionResponse
{
	TEnumAsByte<ECollisionChannel>                     Channel;                                                  // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Response;                                                 // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DestructionParticle
// 0x0060
struct FDestructionParticle
{
	struct FGuid                                       DestructibleId;                                           // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	class UParticleSystem*                             ParticleSystem;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FTransform                                  ParticleLocation;                                         // 0x0020(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               PlayOnNearbyExplosion;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseWorldTransform;                                        // 0x0051(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x0052(0x000E) MISSED OFFSET
};

// ScriptStruct TslGame.DestructionParticleEnvironment
// 0x0060
struct FDestructionParticleEnvironment
{
	struct FGuid                                       DestructibleId;                                           // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	class UClass*                                      ParticleEnvironment;                                      // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FTransform                                  ParticleLocation;                                         // 0x0020(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               PlayOnNearbyExplosion;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0051(0x000F) MISSED OFFSET
};

// ScriptStruct TslGame.BoneMirror
// 0x0020
struct FBoneMirror
{
	struct FName                                       BoneName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TwinBoneName;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0010(0x000C) (Edit, IsPlainOldData)
	TEnumAsByte<EAxis>                                 MirrorAxis;                                               // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAxis>                                 FlipAxis;                                                 // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               MirrorTranslation;                                        // 0x001E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001F(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.AIAttrObserver
// 0x0008
struct FAIAttrObserver
{
	EAITriggerAttrType                                 AttrType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAIAttrCompareType                                 CompareType;                                              // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                ComparePercentValue;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AvoidanceBoxTraceSettings
// 0x0028
struct FAvoidanceBoxTraceSettings
{
	float                                              TraceForwardOffset;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceLength;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceHalfSize;                                            // 0x0008(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    TraceOrientation;                                         // 0x0014(0x000C) (Edit, IsPlainOldData)
	float                                              TopSpeedTraceSizeMultiplier;                              // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TopSpeed;                                                 // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ObjectTypeAvoidanceWeights
// 0x0068
struct FObjectTypeAvoidanceWeights
{
	int                                                DefaultAvoidanceResponseWeight;                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TMap<class UClass*, int>                           ActorFilterResponseMap;                                   // 0x0008(0x0050) (Edit, ZeroConstructor)
	TArray<class UClass*>                              IgnoreActorFilterList;                                    // 0x0058(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.WaypointNetworkConnectionList
// 0x0010
struct FWaypointNetworkConnectionList
{
	TArray<struct FWaypointNetworkConnection>          Connections;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.NodeTargetSpeedOverrides
// 0x0010
struct FNodeTargetSpeedOverrides
{
	float                                              ForwardTargetSpeedOverride;                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForwardMaxSpeedOverride;                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverseTargetSpeedOverride;                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverseMaxSpeedOverride;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.FindBuildingRatingConfig
// 0x0008
struct FFindBuildingRatingConfig
{
	int                                                Rating;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchRadius;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteInputData
// 0x0020
struct FParachuteInputData
{
	float                                              InForward;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              InRight;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentForward;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentRight;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsFast;                                                  // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              CurrentPitch;                                             // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentYaw;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentRoll;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.SimulationStep
// 0x0048
struct FSimulationStep
{
	uint16_t                                           SimStep;                                                  // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FVector                                     Position;                                                 // 0x0004(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x001C(0x000C) (IsPlainOldData)
	struct FParachuteInputData                         InputData;                                                // 0x0028(0x0020)
};

// ScriptStruct TslGame.SkydiveRotationSettings
// 0x0018
struct FSkydiveRotationSettings
{
	float                                              RotationTargetAlphaAmplitude;                             // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationTargetAlphaSpeed;                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationTargetAlphaPower;                                 // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseExponentialInterpolation;                             // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseExponentialRotationClamp;                             // 0x000D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	float                                              RotationSpeedExponential;                                 // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeedConstant;                                    // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveDragSettings
// 0x0014
struct FSkydiveDragSettings
{
	float                                              DragScale;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedMinMap;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedMaxMap;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForwardInputMinScalar;                                    // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForwardInputMaxScalar;                                    // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveLateralSettings
// 0x0020
struct FSkydiveLateralSettings
{
	float                                              LateralAccelScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   AccelInputInMap;                                          // 0x0004(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   AccelInputOutMap;                                         // 0x000C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxLatVelocity;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   SpeedScalarOutMap;                                        // 0x0018(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.FreefallVelocitySettings
// 0x000C
struct FFreefallVelocitySettings
{
	float                                              SpeedMin;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedMax;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedDefault;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveVelocitySettings
// 0x0030
struct FSkydiveVelocitySettings
{
	struct FVector2D                                   MinMaxDiveAngle;                                          // 0x0000(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   SpeedScaleOutMap;                                         // 0x0008(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   InputMapScalar;                                           // 0x0010(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityTransferScalar;                                   // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   PitchScalarInMap;                                         // 0x001C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   PitchScalarOutMap;                                        // 0x0024(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MinDiveAngleLateralInputScalar;                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveInputSettings
// 0x0028
struct FSkydiveInputSettings
{
	float                                              InputAccelSpeed;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InputBrakeSpeed;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InputLateralSpeed;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InputPitchSpeed;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InputVelocitySpeed;                                       // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               InputAccelInterpLinear;                                   // 0x0014(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               InputBrakeInterpLinear;                                   // 0x0015(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               InputLateralInterpLinear;                                 // 0x0016(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               InputPitchInterpLinear;                                   // 0x0017(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParaSlowInputForward;                                     // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParaSlowInputRightScalar;                                 // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParaSlowSideInputInterp;                                  // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParaFastSideInputInterp;                                  // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveCameraBlendSettings
// 0x0010
struct FSkydiveCameraBlendSettings
{
	float                                              BlendInTime;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EViewTargetBlendFunction>              BlendFunction;                                            // 0x0004(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              BlendExponent;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockOutgoing;                                            // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.ParachuteGeneralSettings
// 0x00C0
struct FParachuteGeneralSettings
{
	float                                              TraceSphereRadius;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TraceSphereOffset;                                        // 0x0004(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundTraceStart;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundTraceEnd;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundTraceDampingMin;                                    // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundTraceDampingMax;                                    // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LiftScalarInterpSpeed;                                    // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceInterpSpeed;                                         // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LerpDTScalar;                                             // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParachuteForwardVelocityTransferTimeout;                  // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParachuteForwardVelocityTransferTimeoutDTScalar;          // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParachuteInputBlockTime;                                  // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CapsuleOffset;                                            // 0x0038(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class USkeletalMesh*                               ParachuteSK;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ParachuteAnimInstance;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    ParachuteRelativeRotation;                                // 0x0058(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UPhysicsAsset*                               PhysicsAssetRef;                                          // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<ESkydiveState, struct FSkydiveCameraBlendSettings> CameraStateBlendMap;                                      // 0x0070(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ParachuteControlSettings
// 0x0030
struct FParachuteControlSettings
{
	float                                              YawSpeed;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxForwardPitch;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxBackwardPitch;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollSpeedMin;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollSpeedMax;                                             // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAngleMin;                                             // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAngleMax;                                             // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollInterpSpeed;                                          // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollTendencyRiseSpeed;                                    // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RollTendencyFallSpeed;                                    // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchTendencyRiseSpeed;                                   // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchTendencyFallSpeed;                                   // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteVelocitySettings
// 0x007C
struct FParachuteVelocitySettings
{
	float                                              ForceForwardScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceForwardYawScalar;                                    // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceForwardStaticSpeed;                                  // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityLERPSpeedMin;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityLERPSpeedMax;                                     // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityLERPValueMin;                                     // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityLERPValueMax;                                     // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DampingPitchMin;                                          // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DampingPitchMax;                                          // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DampingValueMin;                                          // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DampingValueMax;                                          // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DampingYawScalar;                                         // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DampingDiveMapIn;                                         // 0x0030(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DampingDiveMapOut;                                        // 0x0038(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceDownAngleMin;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceDownAngleMax;                                        // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinalVelocitySpeedMin;                                    // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinalVelocitySpeedMax;                                    // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinalVelocityDampingMin;                                  // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinalVelocityDampingMax;                                  // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceGravityMax;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceGravitySpeedMin;                                     // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceGravitySpeedMax;                                     // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceGravityValueMin;                                     // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceGravityValueMax;                                     // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   BrakeDampingInMap;                                        // 0x006C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   BrakeDampingOutMap;                                       // 0x0074(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteDeploySettings
// 0x0010
struct FParachuteDeploySettings
{
	bool                                               bUseAutoDeploy;                                           // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              AutoDeployAltitude;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAbsoluteAutoDeployAltitude;                           // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              StartDeployAltitude;                                      // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteCutoffSettings
// 0x0050
struct FParachuteCutoffSettings
{
	float                                              ManualCutoffAltitude;                                     // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCutoffDistance;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCutoffSpeedDistanceScalar;                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseManualCutInputDampening;                              // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              ManualCutInputScale;                                      // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAutoCutInputDampening;                                // 0x0014(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              AutoCutInputScale;                                        // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CutoffSpeedScalar;                                        // 0x001C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ManualCutoffCheckTime;                                    // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCutoffVelocityDistance;                               // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CutoffReadyDuration;                                      // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAutoCutoffVelocityTransfer;                           // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FVector                                     AutoCutoffVelocityScalar;                                 // 0x0038(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCutoffBeforeImpact;                                   // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              AutoCutoffAnimTime;                                       // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeshRotationResetStep;                                    // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ExtCollisionShape
// 0x0014
struct FExtCollisionShape
{
	bool                                               bIsSphere;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Extent;                                                   // 0x0008(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteOverlapSettings
// 0x0020
struct FParachuteOverlapSettings
{
	struct FVector                                     LocalOffset;                                              // 0x0000(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FExtCollisionShape                          CollisionShape;                                           // 0x000C(0x0014) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.ParachuteLandingData
// 0x0030
struct FParachuteLandingData
{
	EParachuteLandingSurfaceType                       LandingSurfaceType;                                       // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LandingSpeedLimit;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                LocalLandingMontage;                                      // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RemoteLandingMontage;                                     // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRotationLock;                                         // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              RotationLockTime;                                         // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                ParachuteCollapseMontage;                                 // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LandingName;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ParachuteLandSettings
// 0x0018
struct FParachuteLandSettings
{
	TArray<struct FParachuteLandingData>               LandingTypeArray;                                         // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAnimMontage*                                ManualDetachMontage;                                      // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveNetInterpSettings
// 0x0028
struct FSkydiveNetInterpSettings
{
	float                                              FreefallLocationInterpSpeedExp;                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParachuteLocationInterpSpeedExp;                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParachuteRotationInterpSpeedExp;                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   HeightInterpSpeedInMap;                                   // 0x000C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   HeightInterpSpeedOutMap;                                  // 0x0014(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              LowAltitudeRepRate;                                       // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RemoteFreefallMeshInterpSpeed;                            // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAllowedLandingPositionDelta;                           // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveEffects
// 0x0058
struct FSkydiveEffects
{
	class UParticleSystem*                             FreefallEffect;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ParachuteEffect;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectSpeedMapIn;                                         // 0x0010(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectSpeedMapOut;                                        // 0x0018(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectAltitudeMapIn;                                      // 0x0020(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectAltitudeMapOut;                                     // 0x0028(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectDeployMapIn;                                        // 0x0030(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EffectDeployMapOut;                                       // 0x0038(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FreefallCameraShakeClass;                                 // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ParachuteCameraShakeClass;                                // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                SkydiveCameraShakeCurve;                                  // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkydiveAudioSettings
// 0x0078
struct FSkydiveAudioSettings
{
	float                                              AudioVol;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               FreefallLoop;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               ParachuteLoop;                                            // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               ParachuteOpen;                                            // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VelocityRTPCName;                                         // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VelocityDeltaRTPCName;                                    // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AccelRTPCName;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BrakeRTPCName;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PitchRTPCName;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TurnRTPCName;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AltitudeRTPCName;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityInterpSpeed;                                      // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VelocityDeltaInterpSpeed;                                 // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AccelInterpSpeed;                                         // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BrakeInterpSpeed;                                         // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchInterpSpeed;                                         // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TurnInterpSpeed;                                          // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AltitudeInterpSpeed;                                      // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SkydiveDamageSettings
// 0x0048
struct FSkydiveDamageSettings
{
	bool                                               bApplyLandingDamage;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector2D                                   NormalInMap;                                              // 0x0004(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   NormalOutMap;                                             // 0x000C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   VelocityDotScaleInMap;                                    // 0x0014(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   VelocityDotScaleOutMap;                                   // 0x001C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   VelocityDamageInMap;                                      // 0x0024(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   VelocityDamageOutMap;                                     // 0x002C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FallDamageBlockTime;                                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.StageDesc
// 0x0030
struct FStageDesc
{
	int                                                MaxArenaCount;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinTeamsPerArena;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<int>                                        WinArenaPoints;                                           // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                KillPoints;                                               // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RevivePoints;                                             // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<int>                                        LoseArenaPoints;                                          // 0x0020(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TeamShownScreens
// 0x0008
struct FTeamShownScreens
{
	float                                              ArenaShowRoundResultStartTimeSec;                         // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsRoundResultShown;                                      // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsAfterRoundLoadoutShown;                                // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.WarningGasPosForArena
// 0x0010
struct FWarningGasPosForArena
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.ArenaDataStruct
// 0x0010
struct FArenaDataStruct
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.LobbyItem
// 0x0020
struct FLobbyItem
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FString                                     ItemID;                                                   // 0x0008(0x0010) (ZeroConstructor, Transient)
	class UItem*                                       Item;                                                     // 0x0018(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.LobbyWeapon
// 0x0008 (0x0028 - 0x0020)
struct FLobbyWeapon : public FLobbyItem
{
	class ATslLobbyWeapon*                             TslWeapon;                                                // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.LobbyWeaponProcessor
// 0x0018
struct FLobbyWeaponProcessor
{
	int                                                CurrentWeaponIndex;                                       // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FLobbyWeapon>                        EquipedWeapons;                                           // 0x0008(0x0010) (ZeroConstructor, Transient)
};

// ScriptStruct TslGame.ItemAnimAndTime
// 0x0010
struct FItemAnimAndTime
{
	ECastAnim                                          CastAnim;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              AnimTime;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealOverTimeBuffClass;                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.MeleeAttackMode
// 0x0008
struct FMeleeAttackMode
{
	unsigned char                                      AttackMode;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              TriggerDamageTimer;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.EnemyPicker_Fan
// 0x0018
struct FEnemyPicker_Fan
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x0008(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               Random;                                                   // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckHeadshot;                                          // 0x0015(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x0016(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EUTPickerTargetType                                PickerTargetType;                                         // 0x0017(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIMovePosDebug
// 0x0014
struct FAIMovePosDebug
{
	struct FVector                                     Pos;                                                      // 0x0000(0x000C) (Edit, IsPlainOldData)
	int                                                Reuslt;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurTime;                                                  // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslParticleVariant
// 0x0010
struct FTslParticleVariant
{
	class UParticleSystem*                             Template;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              AutoPlayDistance;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AutoParticleActivateDistance;                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ParticleEnvironmentInstance
// 0x0030
struct FParticleEnvironmentInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0008(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0014(0x000C) (IsPlainOldData)
	int                                                VariantId;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BeginParamIndex;                                          // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndParamIndex;                                            // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TestCheatCommand
// 0x0020
struct FTestCheatCommand
{
	struct FName                                       FunctionName;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     CommandName;                                              // 0x0008(0x0010) (ZeroConstructor)
	float                                              delayTime;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslXpRewardLogicDataStruct_Public
// 0x0018
struct FTslXpRewardLogicDataStruct_Public
{
	float                                              OverallGain;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurvivalTimeGain;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TeamSpectatingTimeGain;                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnitTimeInSeconds;                                        // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              XpPerUnitTime;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDailyXp;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ProjectileWeaponData
// 0x0008
struct FProjectileWeaponData
{
	class UClass*                                      ProjectileClass;                                          // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.CastConfig
// 0x0048
struct FCastConfig
{
	struct FText                                       CastName;                                                 // 0x0000(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              CastTime;                                                 // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECastPriority                                      CastPriority;                                             // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECastLevel                                         CastLevel;                                                // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreCastDistanceLimitation;                            // 0x001E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001F(0x0001) MISSED OFFSET
	float                                              CastMaxDistance;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CastMaxDistanceMultiplierOnServer;                        // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CasterAndCastObjectMaxDistance;                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CasterAndCastObjectMaxDistanceMultiplierOnServer;         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanCastInsideMovingVehicle;                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              MaxLinAcceleration;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CastMaxSpeed;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CastWalkSpeedModifier;                                    // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNeedUnarm;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRecastsOnFinish;                                         // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECastAnim                                          CastAnim;                                                 // 0x0042(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0043(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.SkinMaterialData
// 0x0018
struct FSkinMaterialData
{
	struct FName                                       MaterialSlotName;                                         // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialSlotIndex;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UMaterialInstance*                           Material;                                                 // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkinMessageFormat
// 0x00F0
struct FSkinMessageFormat
{
	struct FText                                       ApplySkinSuccessedMsgFormat;                              // 0x0000(0x0018) (Edit)
	struct FText                                       ApplySkinFailedMsgFormat;                                 // 0x0018(0x0018) (Edit)
	struct FText                                       AlreadyApplySkinMsgFormat;                                // 0x0030(0x0018) (Edit)
	struct FText                                       ClearSkinSuccessedMsgFormat;                              // 0x0048(0x0018) (Edit)
	struct FText                                       AlreadyClearSkinMsgFormat;                                // 0x0060(0x0018) (Edit)
	struct FText                                       ApplyCharmSuccessedMsgFormat;                             // 0x0078(0x0018) (Edit)
	struct FText                                       ApplyCharmFailedMsgFormat;                                // 0x0090(0x0018) (Edit)
	struct FText                                       AlreadyApplyCharmMsgFormat;                               // 0x00A8(0x0018) (Edit)
	struct FText                                       ClearCharmSuccessedMsgFormat;                             // 0x00C0(0x0018) (Edit)
	struct FText                                       AlreadyClearCharmMsgFormat;                               // 0x00D8(0x0018) (Edit)
};

// ScriptStruct TslGame.PlaceValue
// 0x0018
struct FPlaceValue
{
	int                                                MaterialIndex;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              delayTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CheckTime;                                                // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x000C(0x000C) MISSED OFFSET
};

// ScriptStruct TslGame.EquipPosition
// 0x0008
struct FEquipPosition
{
	EEquipSlotID                                       SlotID;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Index;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.InventoryItem
// 0x0010
struct FInventoryItem
{
	int                                                Index;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UItem*                                       Item;                                                     // 0x0008(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslBuffType
// 0x0010
struct FTslBuffType
{
	class UClass*                                      BuffSpawnClass;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ModifiedValue;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslBuffOverrideProperties
// 0x0020
struct FTslBuffOverrideProperties
{
	bool                                               bOverrideOverlap;                                         // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       OverlapId;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverlapExactClass;                                       // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideOverlapSolveMethod;                              // 0x0011(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EBuffOverlapSolveMethod                            OverlapSolveMethod;                                       // 0x0012(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideBuffDuration;                                    // 0x0013(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuffDuration;                                             // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideInfinite;                                        // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInfinite;                                                // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.ItemSpawner
// 0x0010
struct FItemSpawner
{
	class UClass*                                      SpawnerClass;                                             // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomizeWeaponAttachments;                              // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.GeneralSpotGroupProperty
// 0x0020
struct FGeneralSpotGroupProperty
{
	EThingSpotGroupType                                GroupType;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bActiveByStartVolume;                                     // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EThingGroupSpawnType                               SpawnType;                                                // 0x0002(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	struct FFloatRange                                 TotalCountRange;                                          // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              TotalCountMultiplierWithPlayerCount;                      // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityPercent;                                       // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityPercentMultiplierWithPlayerCount;              // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PackageSpawnProb
// 0x0018
struct FPackageSpawnProb
{
	float                                              ProbabilityPercent;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ValueFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryFilter;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PackageSpotGroupProperty
// 0x0018 (0x0038 - 0x0020)
struct FPackageSpotGroupProperty : public FGeneralSpotGroupProperty
{
	class UClass*                                      ItemPackageClass;                                         // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FPackageSpawnProb>                   PackageSpawnProbArray;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemSpawnWeightElement
// 0x0010
struct FItemSpawnWeightElement
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemSpawnWeightSet
// 0x0018
struct FItemSpawnWeightSet
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TArray<struct FItemSpawnWeightElement>             Elements;                                                 // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.NameToItemSpawnWeightSet
// 0x0050
struct FNameToItemSpawnWeightSet
{
	TMap<struct FName, struct FItemSpawnWeightSet>     Values;                                                   // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.ItemSpawnCountElement
// 0x0018
struct FItemSpawnCountElement
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemSpawnCountElementArray
// 0x0010
struct FItemSpawnCountElementArray
{
	TArray<struct FItemSpawnCountElement>              Values;                                                   // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.ItemSpawnCountElementTable
// 0x0050
struct FItemSpawnCountElementTable
{
	TMap<struct FString, struct FItemSpawnCountElementArray> Table;                                                    // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.ItemTableSpawner
// 0x00B8
struct FItemTableSpawner
{
	TMap<struct FName, struct FNameToItemSpawnWeightSet> SpawnDataTable;                                           // 0x0000(0x0050) (ZeroConstructor, Transient)
	struct FItemSpawnCountElementTable                 TogetherSpawnDataTable;                                   // 0x0050(0x0050)
	TArray<struct FName>                               SpawnItemCandidates;                                      // 0x00A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.NameWeight
// 0x0010
struct FNameWeight
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleSpotGroupProperty
// 0x0028 (0x0048 - 0x0020)
struct FVehicleSpotGroupProperty : public FGeneralSpotGroupProperty
{
	TArray<struct FNameWeight>                         WeightsPerCategory;                                       // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FFloatRange                                 FuelPercentRange;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bSnapToFloor;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ThingSpotInstance
// 0x0030
struct FThingSpotInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0008(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0014(0x000C) (IsPlainOldData)
	struct FVector2D                                   RandomRotatorRange;                                       // 0x0020(0x0008) (IsPlainOldData)
	EThingSpotGroupType                                SpotGroupType;                                            // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAggroData
// 0x0020
struct FTslAggroData
{
	float                                              UpdateInterval;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VisibleAggro;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                HearingAggro;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DamagedAggro;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BlockedAggro;                                             // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxDistanceAggro;                                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DistanceAggroOffset;                                      // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTargetTime;                                            // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslAggroScore
// 0x0018
struct FTslAggroScore
{
	int                                                Score;                                                    // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsVisible;                                               // 0x0004(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsHearing;                                               // 0x0005(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDamaged;                                               // 0x0006(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBlocked;                                                 // 0x0007(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DistanceSq;                                               // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastAggroUpdateTime;                                      // 0x000C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      Target;                                                   // 0x0010(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.AIActingCandidateData
// 0x0038
struct FAIActingCandidateData
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
	class ATslNewBotAIController*                      FakePlayerAIController;                                   // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIActingItem
// 0x0014
struct FAIActingItem
{
	float                                              StartSeconds;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndSeconds;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeadPercent;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlayerNumScale;                                           // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0010(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.DeliveryRatingConfig
// 0x0008
struct FDeliveryRatingConfig
{
	float                                              DeliveryInterval;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightRatingSection;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIDeliveryAreaLimit
// 0x0018
struct FAIDeliveryAreaLimit
{
	struct FVector                                     TopLeftVec;                                               // 0x0000(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BottomRightVec;                                           // 0x000C(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct TslGame.AIRatingDamage
// 0x0010
struct FAIRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AIFeedLimit;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIAttackAIRatingDamage
// 0x000C
struct FAIAttackAIRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DeliveryItem
// 0x0008
struct FDeliveryItem
{
	int                                                Percent;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DeliveryNum;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DeliveryPlayerConfig
// 0x0018
struct FDeliveryPlayerConfig
{
	TArray<struct FDeliveryItem>                       DeliveryItem;                                             // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              RightRatingSection;                                       // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AircraftParticle
// 0x0010
struct FAircraftParticle
{
	class UClass*                                      ParticleClass;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AttachSocket;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.DropCarePackageTableData
// 0x0008
struct FDropCarePackageTableData
{
	int                                                DropCount;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DropPercent;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.VehicleArmorMitigationData
// 0x0010
struct FVehicleArmorMitigationData
{
	bool                                               bUseConstReduction;                                       // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ConstValue;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScalarReduction;                                      // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              ScalarValue;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WheelDragSurfaceConfig
// 0x0018
struct FWheelDragSurfaceConfig
{
	float                                              LongitudinalDrag;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LateralDrag;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 SpeedScalarCurve;                                         // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedCurveScale;                                    // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslParticleArray
// 0x0010
struct FTslParticleArray
{
	TArray<class ATslParticle*>                        ParticleArray;                                            // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WheeledEffectPool
// 0x0050
struct FWheeledEffectPool
{
	TMap<class UClass*, struct FTslParticleArray>      TslParticleMap;                                           // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.SuspensionSoundConfig
// 0x0010
struct FSuspensionSoundConfig
{
	float                                              SuspensionSoundSensitivity;                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinOffsetForSound;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetVelToWheelZVelocityMultiplier;                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxWheelZVelocity;                                        // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.StanceRecoilMapContainer
// 0x0050
struct FStanceRecoilMapContainer
{
	TMap<EAnimStance, float>                           StanceMap;                                                // 0x0000(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.WeaponRecoilConfig
// 0x00D0
struct FWeaponRecoilConfig
{
	float                                              VerticalRecoilMin;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilMax;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilRecoveryMin;                                // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilVariation;                                  // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryModifier;                                 // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryClamp;                                    // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryMax;                                      // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LeftMax;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RightMax;                                                 // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HorizontalTendency;                                       // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                RecoilCurve;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BulletsPerSwitch;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimePerSwitch;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSwitchOnTime;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              RecoilSpeed_Vertical;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilSpeed_Horizontal;                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoverySpeed_Vertical;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValue_Climb;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValue_Fall;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Stand;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Crouch;                                    // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Prone;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilHorizontalMinScalar;                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilStartTimeInMap;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilStartTimeOutMap;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilBlendInInMap;                                       // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilBlendInOutMap;                                      // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	TMap<EFiringMode, struct FStanceRecoilMapContainer> ROFRecoilMap;                                             // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.WeaponTrajectoryConfig
// 0x0048
struct FWeaponTrajectoryConfig
{
	float                                              InitialSpeed;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HitDamage;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleDamageScalar;                                      // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowerClampDamage;                                         // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                BallisticCurve;                                           // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeModifier;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReferenceDistance;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TravelDistanceMax;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseMaxDamageDistance;                                    // 0x0024(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              SimulationSubstepTime;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VDragCoefficient;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BDS;                                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAdvancedBallistics;                                   // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanProduceCrackSound;                                    // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsPenetrable;                                             // 0x0036(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsTrajectoryReplicationEnabled : 1;                      // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.RecoilPatternData
// 0x0008
struct FRecoilPatternData
{
	float                                              Magnitude;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TrajectoryWeaponData
// 0x0038
struct FTrajectoryWeaponData
{
	TArray<struct FRecoilPatternData>                  RecoilPatterns;                                           // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              StandRecoveryTime;                                        // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProneRecoveryTime;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilPatternScale;                                       // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilRecoverySpeed;                                      // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoveryInterval;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponSpread;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilSpeed;                                              // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringSpreadBase;                                         // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CrouchRecoveryTime;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.RecoilDebugInfo
// 0x0028
struct FRecoilDebugInfo
{
	float                                              RecoilValue;                                              // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilVertical;                                           // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilHorizontal;                                         // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilTargetPitch;                                        // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilTargetYaw;                                          // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilRecoveryTarget;                                     // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilVerticalDelta;                                      // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilHorizontalDelta;                                    // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilCharacterPitch;                                     // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RecoilWeaponPitch;                                        // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.VelocityGearData
// 0x0008
struct FVelocityGearData
{
	float                                              DownSpeed;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpSpeed;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CustomTransmissionData
// 0x0028
struct FCustomTransmissionData
{
	bool                                               bUseVelocityTransmission;                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CustomTransmissionMaxSpeed;                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDownShiftingOnly;                                        // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyClutchOnHandbrake;                                  // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableAutoShiftOnHandbrake;                             // 0x000A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
	float                                              AutoShiftDisableTimeout;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVelocityGearData>                   VelocityGears;                                            // 0x0010(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0020(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.DifferentialOverrideData
// 0x0040
struct FDifferentialOverrideData
{
	bool                                               bUseSpeedAlphaMap;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0001(0x000F) MISSED OFFSET
	struct FVector4                                    SpeedAlphaMap;                                            // 0x0010(0x0010) (Edit, IsPlainOldData)
	struct FVector2D                                   FrontRearDiffClamp;                                       // 0x0020(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   FrontAxleClamp;                                           // 0x0028(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   RearAxleClamp;                                            // 0x0030(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.WaterControlSetup
// 0x0080
struct FWaterControlSetup
{
	bool                                               bTickWaterControl;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              InWaterAlpha;                                             // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PropulsionAlpha;                                          // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WaterAlphaInterpTime;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WaterCheckCOMOffset;                                      // 0x0010(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       PropulsionSocketName;                                     // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PropulsionRadius;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PropulsionVectorMultiplier;                               // 0x002C(0x000C) (Edit, IsPlainOldData)
	float                                              PropulsionForceScale;                                     // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PropulsionForceInterpSpeed;                               // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PropulsionForceOffset;                                    // 0x0040(0x000C) (Edit, IsPlainOldData)
	float                                              PropulsionPhysicsForce;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PropulsionPhysicsTorque;                                  // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0054(0x000C) MISSED OFFSET
	struct FVector4                                    PropulsionSpeedMap;                                       // 0x0060(0x0010) (Edit, IsPlainOldData)
	bool                                               bLockGears;                                               // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsInWaterGearLock;                                        // 0x0071(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xE];                                       // 0x0072(0x000E) MISSED OFFSET
};

// ScriptStruct TslGame.WheelContactData
// 0x0006
struct FWheelContactData
{
	unsigned char                                      UnknownData00[0x6];                                       // 0x0000(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.RankData
// 0x0020
struct FRankData
{
	struct FLinearColor                                RankColor;                                                // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FStringAssetReference                       RankTexture;                                              // 0x0010(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.KConvexElemForSerializer
// 0x0060
struct FKConvexElemForSerializer
{
	TArray<struct FVector>                             VertexData;                                               // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FBox                                        ElemBox;                                                  // 0x0010(0x001C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0030(0x0030) (Edit, IsPlainOldData)
};

// ScriptStruct TslGame.CustomCarepackageCircleData
// 0x0008
struct FCustomCarepackageCircleData
{
	int                                                AddWhiteZoneCarepackages;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AddOutsideZoneCarepackages;                               // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.CustomCarepackageComing
// 0x0020
struct FCustomCarepackageComing
{
	struct FString                                     CallerAccountID;                                          // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst)
	struct FVector2D                                   DropPosition;                                             // 0x0010(0x0008) (IsPlainOldData)
	bool                                               bCustomPackage;                                           // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	ECustomCarepackageState                            CustomCarepackageState;                                   // 0x0019(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                PackID;                                                   // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponGunRecoilConfig
// 0x00A8
struct FWeaponGunRecoilConfig
{
	bool                                               bUseBurstRecoilMap;                                       // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector2D                                   BurstRecoilInMap;                                         // 0x0004(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   BurstRecoilOutMap;                                        // 0x000C(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKickADS;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKick_MovementSpeedMax;                              // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilKick_MovementMaxMultiplier;                         // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RecoilADSSocketOffsetScale;                               // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGain;                                      // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainAim;                                   // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainADS;                                   // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilMin;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilMax;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilRecoveryMin;                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilVariation;                                  // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryModifier;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryClamp;                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryMax;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UCurveVector*                                RecoilCurve;                                              // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilSpeed_Vertical;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilSpeed_Horizontal;                                   // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoverySpeed_Vertical;                                   // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValue_Climb;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValue_Fall;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Stand;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Crouch;                                    // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifier_Prone;                                     // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilHorizontalMinScalar;                                // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilStartTimeInMap;                                     // 0x0084(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilStartTimeOutMap;                                    // 0x008C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilBlendInInMap;                                       // 0x0094(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   RecoilBlendInOutMap;                                      // 0x009C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WeaponFX
// 0x0020
struct FWeaponFX
{
	class UAkAudioEvent*                               FireSoundAk;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               FireLoopSoundAk;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               FireFinishSoundAk;                                        // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             MuzzleFx;                                                 // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.DecoyWeaponData
// 0x0090 (0x0098 - 0x0008)
struct FDecoyWeaponData : public FTableRowBase
{
	struct FText                                       WeaponTag;                                                // 0x0008(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SimpleWeaponName;                                         // 0x0020(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class UWeaponGunDataAsset*                         WeaponGunData;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FWeaponFX                                   WeaponFX;                                                 // 0x0040(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	EFiringMode                                        FiringMode;                                               // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              MinClipFractionPerSequence;                               // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxClipFractionPerSequence;                               // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringCooldownMin;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringCooldownMax;                                        // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinTimeBetweenShots;                                      // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeBetweenShots;                                      // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClipSize;                                                 // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BurstSize;                                                // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadTime;                                               // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecoyDelay;                                               // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CookDelay;                                                // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecoyLifetime;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PackagedItemInfo
// 0x0018
struct FPackagedItemInfo
{
	class UClass*                                      ItemType;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.DestructibleInstancedData
// 0x0010
struct FDestructibleInstancedData
{
	TArray<int>                                        Indices;                                                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.DestructibleBuildingData
// 0x00B0
struct FDestructibleBuildingData
{
	struct FGuid                                       ID;                                                       // 0x0000(0x0010) (Edit, BlueprintVisible, EditConst, IsPlainOldData)
	TArray<class UActorComponent*>                     StaticComponents;                                         // 0x0010(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	TMap<class UStaticMeshComponent*, struct FDestructibleInstancedData> InstancedComponents;                                      // 0x0020(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UDoorInteractionComponent*>           DoorComponents;                                           // 0x0070(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class APostProcessVolume*>                  PostProcessVolumes;                                       // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAkSoundVolumeComponent*>             SoundVolumeComponents;                                    // 0x0090(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class UAkSoundVolumePortalComponent*>       SoundVolumePortalComponents;                              // 0x00A0(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
};

// ScriptStruct TslGame.DestructibleBlackZoneOrigin
// 0x0024
struct FDestructibleBlackZoneOrigin
{
	struct FGuid                                       BlackZoneGroupId;                                         // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     BlackZoneOrigin;                                          // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              BlackZoneRadius;                                          // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BeaconsPresent;                                           // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.DestructibleBlackZoneKillBox
// 0x0050
struct FDestructibleBlackZoneKillBox
{
	struct FGuid                                       DestructibleId;                                           // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FTransform                                  KillZoneTransfrom;                                        // 0x0010(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     KillZoneExtent;                                           // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               KillPlayers;                                              // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DeleteItems;                                              // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.DestructibleBlackZoneBeacon
// 0x00D0
struct FDestructibleBlackZoneBeacon
{
	struct FGuid                                       BlackZoneGroupId;                                         // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FTransform                                  BeaconTransform;                                          // 0x0010(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     BuildingLocalOriginOffset;                                // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<struct FDestructionParticle>                ParticleEffects;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FDestructionParticleEnvironment>     ParticleEnvironments;                                     // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              NearbyHitParticleDistance;                                // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     VolumetricScale;                                          // 0x0078(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FGuid                                       DestructibleId;                                           // 0x0084(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	class USkeletalMesh*                               DestructionMesh;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             DestructionAnimation;                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DestroyAnimationDelayTime;                                // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	TArray<struct FDestructibleBlackZoneKillBox>       BeaconKillBoxes;                                          // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               WasHit;                                                   // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x00C1(0x000F) MISSED OFFSET
};

// ScriptStruct TslGame.ImpactRicochetSettings
// 0x0018
struct FImpactRicochetSettings
{
	float                                              MaxDot;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFloatRange                                 RicochetChance;                                           // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bAlwaysScaleDecal;                                        // 0x0014(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.ExplosivePropData
// 0x0040 (0x0048 - 0x0008)
struct FExplosivePropData : public FTableRowBase
{
	EFExplosivePropDataType                            PropType;                                                 // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExplodeOnDestruction;                                    // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagedHealth;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BleedInterval;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagedPerSecond;                                         // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeakPointSelfDamage;                                      // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseDamage;                                               // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DamageCurve;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ExplosionOffset;                                          // 0x0038(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.DoorVariant
// 0x0068
struct FDoorVariant
{
	TAssetPtr<class UStaticMesh>                       StaticMesh;                                               // 0x0000(0x0020)
	TAssetPtr<class UDestructibleMesh>                 DestructibleMesh;                                         // 0x0020(0x0020)
	class UDoorDataAsset*                              DoorDataAsset;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTslReactionDoorData*                        ReactionDoorData;                                         // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SoundOffset;                                              // 0x0050(0x000C) (IsPlainOldData)
	float                                              BoundsScale;                                              // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      LightingChannel0 : 1;                                     // 0x0060(0x0001)
	unsigned char                                      LightingChannel1 : 1;                                     // 0x0060(0x0001)
	unsigned char                                      LightingChannel2 : 1;                                     // 0x0060(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ProjMovementInitialState
// 0x0028
struct FProjMovementInitialState
{
	class UPrimitiveComponent*                         MovingBase;                                               // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector_NetQuantize                         Location;                                                 // 0x0008(0x000C)
	struct FVector_NetQuantize                         Velocity;                                                 // 0x0014(0x000C)
	bool                                               bServerHasMovingBase;                                     // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslRepProjMovement
// 0x0030
struct FTslRepProjMovement
{
	TWeakObjectPtr<class UPrimitiveComponent>          MovingBase;                                               // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          RelativeBase;                                             // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0010(0x000C) (IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x001C(0x000C) (IsPlainOldData)
	uint16_t                                           SimStep;                                                  // 0x0028(0x0002) (ZeroConstructor, IsPlainOldData)
	bool                                               bSimulationIsActive;                                      // 0x002A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bImpact;                                                  // 0x002B(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bServerHasMovingBase;                                     // 0x002C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.ThrowableItemProjectileSpawnParams
// 0x0040
struct FThrowableItemProjectileSpawnParams
{
	struct FRotator                                    MeshRotation;                                             // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x000C(0x000C) (IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0018(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	class USceneComponent*                             BaseComp;                                                 // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UThrowableItemDataAsset*                     ThrowableConfig;                                          // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAsStatic;                                           // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.GeneralItemSpawnProb
// 0x0018
struct FGeneralItemSpawnProb
{
	float                                              ProbabilityPercent;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ValueFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryFilter;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.RegionalWeatherSetting
// 0x0024
struct FRegionalWeatherSetting
{
	float                                              FogDensity;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                FogColor;                                                 // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	float                                              FogStartDistance;                                         // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              VolFogExtinctionScale;                                    // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              WeatherParticleSpawnScale;                                // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              WindScale;                                                // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct TslGame.TslWeatherVolume
// 0x0030
struct FTslWeatherVolume
{
	class APostProcessVolume*                          PostProcessVolume;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FRegionalWeatherSetting                     RegionalSetting;                                          // 0x0008(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.EventItemPackageData
// 0x0030
struct FEventItemPackageData
{
	struct FName                                       PackageName;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TAssetPtr<class UClass>                            PackageClass;                                             // 0x0010(0x0020) (Edit)
};

// ScriptStruct TslGame.EventItemSpawnData
// 0x0030
struct FEventItemSpawnData
{
	struct FName                                       EventName;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EItemSpotGroupType                                 SpotGroupType;                                            // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EItemSpotType                                      SpotType;                                                 // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                Count;                                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RespawnTime;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRespawnable;                                             // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDestoryEmpty;                                            // 0x0015(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
	int                                                TotalWeight;                                              // 0x0018(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<struct FEventItemPackageData>               PackageData;                                              // 0x0020(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.LobbyFaceElementDetail
// 0x0048
struct FLobbyFaceElementDetail
{
	int                                                ColorIndex;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0004(0x0004) (Edit, IsPlainOldData)
	TAssetPtr<class UCustomizableObject>               BodyAsset;                                                // 0x0008(0x0020) (Edit)
	TAssetPtr<class UCustomizableObject>               FaceAsset;                                                // 0x0028(0x0020) (Edit)
};

// ScriptStruct TslGame.LobbyFaceElement
// 0x0028
struct FLobbyFaceElement
{
	EGender                                            Gender;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     FaceType;                                                 // 0x0008(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLobbyFaceElementDetail>             ColorData;                                                // 0x0018(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.LobbyHairElementDetail
// 0x0028
struct FLobbyHairElementDetail
{
	int                                                ColorIndex;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0004(0x0004) (Edit, IsPlainOldData)
	TAssetPtr<class UCustomizableObject>               HairAsset;                                                // 0x0008(0x0020) (Edit)
};

// ScriptStruct TslGame.LobbyHairElement
// 0x0028
struct FLobbyHairElement
{
	EGender                                            Gender;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     HairType;                                                 // 0x0008(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLobbyHairElementDetail>             ColorData;                                                // 0x0018(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.PostProcessMaterial
// 0x0010
struct FPostProcessMaterial
{
	class UMaterialInterface*                          EffectMaterial;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendWeight;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PostProcessEffectDynamicMaterialState
// 0x0010
struct FPostProcessEffectDynamicMaterialState
{
	class UMaterialInstanceDynamic*                    MaterialInstanceDynamic;                                  // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.TracerModeType
// 0x0008
struct FTracerModeType
{
	int                                                Mode;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Type;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.LoadingScreenTypePercent
// 0x0008
struct FLoadingScreenTypePercent
{
	ELoadingScreenType                                 LoadingScreenType;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Percent;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.LoadingScreenTypePercentConfig
// 0x0040
struct FLoadingScreenTypePercentConfig
{
	TArray<struct FLoadingScreenTypePercent>           LoadingScreenTypePercentForElementaryRank;                // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLoadingScreenTypePercent>           LoadingScreenTypePercentForIntermediateRank;              // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLoadingScreenTypePercent>           LoadingScreenTypePercentForHighRank;                      // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLoadingScreenTypePercent>           LoadingScreenTypePercentForExpertRank;                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ElementaryRankGuidePercentConfig
// 0x0010 (0x0018 - 0x0008)
struct FElementaryRankGuidePercentConfig : public FTableRowBase
{
	float                                              ShowElementaryRankPercentForElementaryRank;               // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShowElementaryRankPercentForIntermediateRank;             // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShowElementaryRankPercentForHighRank;                     // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShowElementaryRankPercentForExpertRank;                   // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.GamepadInputDebugtData
// 0x0040
struct FGamepadInputDebugtData
{
	struct FUmgWidgetBinder_TextBlock                  Text_Binder;                                              // 0x0000(0x0020) (Edit, DisableEditOnInstance)
	EGamepadHudDataType                                E_DataType;                                               // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              StickValue;                                               // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               StickState;                                               // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     StickName;                                                // 0x0030(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.GamepadInputQueueData
// 0x0060
struct FGamepadInputQueueData
{
	struct FUmgWidgetBinder_TextBlock                  Text_Binder;                                              // 0x0000(0x0020)
	struct FUmgWidgetBinder_TextBlock                  Response_Binder;                                          // 0x0020(0x0020)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0040(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.BoneBinding
// 0x0010
struct FBoneBinding
{
	struct FName                                       ImpactBone;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ReactionBone;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ChineseLicensingDefaultCustomizeData
// 0x0018
struct FChineseLicensingDefaultCustomizeData
{
	struct FString                                     CustomizableObjectGroupName;                              // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       EquipableItemID;                                          // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.InteractionCollisionData
// 0x0014
struct FInteractionCollisionData
{
	float                                              CapsuleHalfHeight;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleRadius;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CapsuleOffset;                                            // 0x0008(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct TslGame.LevelLoadingBoostParameters
// 0x0010
struct FLevelLoadingBoostParameters
{
	float                                              AsyncLoadingTimeLimit;                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PriorityAsyncLoadingExtraTime;                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LevelStreamingActorsUpdateTimeLimit;                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LevelStreamingComponentsRegistrationGranularity;          // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.NearClippingValue
// 0x0008
struct FNearClippingValue
{
	ENearClippingLevel                                 Level;                                                    // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.CustomizableCategoryData
// 0x0030
struct FTslGame_FCustomizableCategoryData
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       Category;                                                 // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               NotDuplicateCategoryNames;                                // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.CustomizableActionName
// 0x0028
struct FCustomizableActionName
{
	struct FName                                       Category;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionName;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.CustomizableAxisName
// 0x0030
struct FTslGame_FCustomizableAxisName
{
	struct FName                                       Category;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AxisName;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              Scale;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.CustomizableMouseSensitiveName
// 0x0028
struct FCustomizableMouseSensitiveName
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       MouseSensitiveName;                                       // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseSensitivity;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.NamedFovRecord
// 0x0010
struct FNamedFovRecord
{
	struct FName                                       SensitiveName;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FOV;                                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.CustomizableGamePadSensitiveName
// 0x0030
struct FCustomizableGamePadSensitiveName
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       GamePadSensitiveName;                                     // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamePadSensitivity;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	class UCurveFloat*                                 GamePadCurve;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SurportQualityLevel
// 0x0020
struct FSurportQualityLevel
{
	int                                                QualityLevel;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FText                                       DisplayQualityLevelName;                                  // 0x0008(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.AimAcceleration
// 0x0008
struct FAimAcceleration
{
	class UCurveFloat*                                 RampUpTimeForTargetingCurve;                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ColorBlindType
// 0x0020
struct FColorBlindType
{
	EColorBlindType                                    Key;                                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x0008(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.PresetColor
// 0x0038
struct FPresetColor
{
	struct FLinearColor                                Color;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0010(0x0018) (Edit, BlueprintVisible)
	struct FString                                     ColorString;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.ReticleColors
// 0x0018
struct FReticleColors
{
	EReticleType                                       ReticleType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FColorBlindColorSet                         ColorSet;                                                 // 0x0008(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct TslGame.SeatColors
// 0x0018
struct FSeatColors
{
	ESeatState                                         SeatState;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FColorBlindColorSet                         ColorSet;                                                 // 0x0008(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct TslGame.KeyInputModeName
// 0x0020
struct FKeyInputModeName
{
	struct FName                                       ModeName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0008(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.UiType
// 0x0028
struct FUiType
{
	struct FText                                       DisplayUiName;                                            // 0x0000(0x0018) (Edit, BlueprintVisible)
	struct FString                                     UiKey;                                                    // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TeamColorAndIcon
// 0x0040
struct FTeamColorAndIcon
{
	struct FColorBlindColorSet                         TeamMemberColor;                                          // 0x0000(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture*                                    MarkerColorTextIcon;                                      // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    MarkerIcon;                                               // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    PlayerIcon;                                               // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    CompassIcon;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    IndicatorIcon;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    MapDeathIcon;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.PlatoonCommanderColorAndIcon
// 0x0010 (0x0050 - 0x0040)
struct FPlatoonCommanderColorAndIcon : public FTeamColorAndIcon
{
	struct FColorBlindColorSet                         AlternativeColor;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct TslGame.OverrideScalabilityValue
// 0x0028
struct FOverrideScalabilityValue
{
	struct FString                                     ConsoleName;                                              // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	EValueType                                         ValueType;                                                // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	TArray<struct FString>                             Values;                                                   // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.OverrideScalability
// 0x0018
struct FOverrideScalability
{
	EQualityType                                       QualityType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FOverrideScalabilityValue>           OverrideScalabilityValues;                                // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.ReportCauseData
// 0x0030
struct FReportCauseData
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EReportCause                                       ReportCauseType;                                          // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TArray<EReportDetailCauseType>                     DetailCauseTypeList;                                      // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.SubjectToReport
// 0x0020
struct FSubjectToReport
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	ESubjectToReport                                   SubjectToReportType;                                      // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslGamepadKeyPreset
// 0x0028
struct FTslGamepadKeyPreset
{
	struct FName                                       PresetTypeName;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslGamepadActionKeyData>            ActionKeyDatas;                                           // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTslGamepadAxisKeyData>              AxisKeyDatas;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.AimAssistData
// 0x0030
struct FAimAssistData
{
	float                                              MinDistance;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TrackingModifier;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdhesionSpeed;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeadZoneValue;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseTrackingModifierCurve;                                // 0x0014(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	class UCurveFloat*                                 TrackingModifierCurve;                                    // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAdhesionSpeedCurve;                                   // 0x0020(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	class UCurveFloat*                                 AdhesionSpeedCurve;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SavedObPosMapConfig
// 0x0020
struct FSavedObPosMapConfig
{
	struct FString                                     MapName;                                                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSavedObPos>                         SavedObPos;                                               // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.AnimatableCustomizableObjectData
// 0x0018
struct FAnimatableCustomizableObjectData
{
	EAnimatableCustomizableTypes                       MutableType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ETargetAnimDynamicsType                            TargetAnimDynamicType;                                    // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	TArray<struct FName>                               MutableNames;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.GamepadReportStepperDesc
// 0x0038
struct FGamepadReportStepperDesc
{
	struct FName                                       OptionName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0008(0x0018) (Edit)
	struct FText                                       DescText;                                                 // 0x0020(0x0018) (Edit)
};

// ScriptStruct TslGame.TeamColorAndName
// 0x0028
struct FTeamColorAndName
{
	struct FText                                       ColorNameText;                                            // 0x0000(0x0018) (Edit)
	struct FLinearColor                                Color;                                                    // 0x0018(0x0010) (Edit, IsPlainOldData)
};

// ScriptStruct TslGame.TextureAndRatio
// 0x0010
struct FTextureAndRatio
{
	class UTexture*                                    Texture;                                                  // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Ratio;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WeaponAttachmentWeaponTagData
// 0x0290
struct FWeaponAttachmentWeaponTagData
{
	struct FName                                       WeaponTag;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UStaticMesh>                       AttachmentMeshAsset;                                      // 0x0008(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FWeaponAttachmentData                       AttachmentData;                                           // 0x0028(0x0258) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       AttachmentMeshName;                                       // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      AttachmentTemplate;                                       // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.OutgameUserData
// 0x0020
struct FOutgameUserData
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslOutGameCloudOptionData
// 0x0150
struct FTslOutGameCloudOptionData
{
	bool                                               bIsDirty;                                                 // 0x0000(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     CultureName;                                              // 0x0008(0x0010) (ZeroConstructor)
	bool                                               bMuteMaster;                                              // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMuteEffect;                                              // 0x0019(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMuteUI;                                                  // 0x001A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMuteBGM;                                                 // 0x001B(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHRTF;                                                    // 0x001C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              MasterVolume;                                             // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EffectVolume;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EmoteVolume;                                              // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              UIVolume;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BGMVolume;                                                // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bVoiceInputMute;                                          // 0x0034(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bVoiceOutputMute;                                         // 0x0035(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                VoiceInputVolume;                                         // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                VoiceOutputVolume;                                        // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bPushToTalk;                                              // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bGlobalVoice;                                             // 0x0041(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTeamVoice;                                               // 0x0042(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvMouse;                                                // 0x0043(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              VertMult;                                                 // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bScopeUniv;                                               // 0x0048(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TMap<struct FName, float>                          Sensitivities;                                            // 0x0050(0x0050) (ZeroConstructor)
	TMap<EInputModeSettingActions, ETslInputModes>     InputModes;                                               // 0x00A0(0x0050) (ZeroConstructor)
	TArray<struct FCustomActionKeyData>                ActionKeys;                                               // 0x00F0(0x0010) (ZeroConstructor)
	TArray<struct FCustomAxisKeyData>                  AxisKeys;                                                 // 0x0100(0x0010) (ZeroConstructor)
	EColorBlindType                                    ColorBlindType;                                           // 0x0110(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	struct FString                                     CrosshairColorStr;                                        // 0x0118(0x0010) (ZeroConstructor)
	struct FColor                                      CustomCrosshairColor;                                     // 0x0128(0x0004) (IsPlainOldData)
	EUiShowType                                        FppWeaponIconShowType;                                    // 0x012C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	int                                                WorldMapZoomLv;                                           // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	EMinimapColorType                                  MinimapColorType;                                         // 0x0134(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMinimapDynZoom;                                          // 0x0135(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIconKillfeed;                                            // 0x0136(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0137(0x0001) MISSED OFFSET
	int                                                KillfeedListSize;                                         // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bHideKillfeedName;                                        // 0x013C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHighlightInteraction;                                    // 0x013D(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowCompassShade;                                        // 0x013E(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNetStat;                                                 // 0x013F(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bOnScrKeyGuide;                                           // 0x0140(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowHead;                                                // 0x0141(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFreeLookInterp;                                          // 0x0142(0x0001) (ZeroConstructor, IsPlainOldData)
	ETppAimCameraPosition                              TppAimCam;                                                // 0x0143(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoReload;                                              // 0x0144(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        HGsMode;                                                  // 0x0145(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        SMGsMode;                                                 // 0x0146(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        ARsMode;                                                  // 0x0147(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        DMRsMode;                                                 // 0x0148(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        SecondarySMGsMode;                                        // 0x0149(0x0001) (ZeroConstructor, IsPlainOldData)
	EFiringMode                                        SecondaryARsMode;                                         // 0x014A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoEquipAttachByInteract;                               // 0x014B(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoReplaceAttachment;                                   // 0x014C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoEquipAttachFromInv;                                  // 0x014D(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bReplay;                                                  // 0x014E(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bKillCam;                                                 // 0x014F(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslStartParameter
// 0x0098
struct FTslStartParameter
{
	bool                                               bIsCustomGame;                                            // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0008(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0018(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MatchId;                                                  // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TeamCount;                                                // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinPlayerCount;                                           // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerCount;                                           // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TMap<struct FString, struct FString>               StringParameter;                                          // 0x0048(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayKillEventItem
// 0x00B8
struct FReplayKillEventItem
{
	struct FString                                     ID;                                                       // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Group;                                                    // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MetaData;                                                 // 0x0020(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                Time1;                                                    // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Time2;                                                    // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     KillerName;                                               // 0x0038(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     KillerNetId;                                              // 0x0048(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0058(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimNetId;                                              // 0x0068(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     DamageCauseClassName;                                     // 0x0078(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                DamageTypeCategory;                                       // 0x0088(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DamageReason;                                             // 0x008C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGroggy;                                                  // 0x0090(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FString                                     KillerPlayerId;                                           // 0x0098(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimPlayerId;                                           // 0x00A8(0x0010) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayGroggyEventItem
// 0x00B8
struct FReplayGroggyEventItem
{
	struct FString                                     ID;                                                       // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Group;                                                    // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MetaData;                                                 // 0x0020(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                Time1;                                                    // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Time2;                                                    // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     InstigatorName;                                           // 0x0038(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     InstigatorNetId;                                          // 0x0048(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0058(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimNetId;                                              // 0x0068(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     DamageCauseClassName;                                     // 0x0078(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                DamageTypeCategory;                                       // 0x0088(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DamageReason;                                             // 0x008C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGroggy;                                                  // 0x0090(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FString                                     KillerPlayerId;                                           // 0x0098(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     VictimPlayerId;                                           // 0x00A8(0x0010) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayEtceteraEventItem
// 0x0068
struct FReplayEtceteraEventItem
{
	struct FString                                     ID;                                                       // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Group;                                                    // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MetaData;                                                 // 0x0020(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                Time1;                                                    // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Time2;                                                    // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     EtceteraEventCode;                                        // 0x0038(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     TargetNetId;                                              // 0x0048(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     TargetName;                                               // 0x0058(0x0010) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TslReplayOvercast
// 0x0038
struct FTslReplayOvercast
{
	float                                              DemoTime;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     Weather;                                                  // 0x0008(0x0010) (BlueprintVisible, ZeroConstructor)
	ETslOvercastAction                                 Action;                                                   // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              InitElapsedTime;                                          // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SaturateTime;                                             // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeMultiplier;                                           // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ThunderAngle;                                             // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ThunderDistance;                                          // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslReplayCustomFog
// 0x0010
struct FTslReplayCustomFog
{
	float                                              DemoTime;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogFallOff;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogStartDistance;                                         // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogDensity;                                               // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ReplayCameraEventItem
// 0x00E0
struct FReplayCameraEventItem
{
	int                                                DataSetNumber;                                            // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TimeMS;                                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkip;                                                   // 0x0008(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     Type;                                                     // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              FOV;                                                      // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PositionX;                                                // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PositionY;                                                // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PositionZ;                                                // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationX;                                                // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationY;                                                // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationZ;                                                // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Target;                                                   // 0x0040(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     InterpolationType;                                        // 0x0050(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     CameraDirection;                                          // 0x0060(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     ReplaySpeed;                                              // 0x0070(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               IsAutoExposureEnable;                                     // 0x0080(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	struct FString                                     DofMethod;                                                // 0x0088(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              DofFocalRegion;                                           // 0x0098(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDofAutoFocus;                                           // 0x009C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	float                                              DofFocalDistance;                                         // 0x00A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofNearTransitionRegion;                                  // 0x00A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofFarTransitionRegion;                                   // 0x00A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofBokehScale;                                            // 0x00AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofBokehMaxSize;                                          // 0x00B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofGaussianNearBlurSize;                                  // 0x00B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DofGaussianFarBlurSize;                                   // 0x00B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FString                                     ColorGradingLUT;                                          // 0x00C0(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              ColorGradingLUTIntensity;                                 // 0x00D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomIntensity;                                           // 0x00D4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VignetteIntensity;                                        // 0x00D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ReplayRecordTargetEventItem
// 0x0058
struct FReplayRecordTargetEventItem
{
	struct FString                                     ID;                                                       // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Group;                                                    // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MetaData;                                                 // 0x0020(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Time1;                                                    // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Time2;                                                    // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     RecordTargetName;                                         // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RecordTargetNetId;                                        // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.TslKillcamMetadata
// 0x00B8
struct FTslKillcamMetadata
{
	float                                              LastUpdateTime;                                           // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     KillerUniqueId;                                           // 0x0008(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     KillerName;                                               // 0x0018(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerUniqueId;                                           // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0048(0x0070) MISSED OFFSET
};

// ScriptStruct TslGame.ReplayItem
// 0x0100
struct FReplayItem
{
	struct FString                                     FriendlyName;                                             // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Name;                                                     // 0x0010(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bIsLive;                                                  // 0x0020(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FDateTime                                   Date;                                                     // 0x0028(0x0008) (BlueprintVisible)
	int                                                SizeInBytes;                                              // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LengthInMS;                                               // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumViewers;                                               // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIncomplete;                                              // 0x003C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVersionCompatible;                                     // 0x003D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCorrupted;                                             // 0x003E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsServerRecording;                                       // 0x003F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldKeep;                                              // 0x0040(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bArchived;                                                // 0x0041(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FString                                     GameVersion;                                              // 0x0048(0x0010) (BlueprintVisible, ZeroConstructor)
	int                                                MK3DReplayVersion;                                        // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     Mode;                                                     // 0x0060(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     RecordUserId;                                             // 0x0070(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     RecordUserNickName;                                       // 0x0080(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MapName;                                                  // 0x0090(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bAllDeadOrWin;                                            // 0x00A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	int                                                ArchiveSizeInBytes;                                       // 0x00A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsClip;                                                  // 0x00A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                ClipTime;                                                 // 0x00AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClipStartTime;                                            // 0x00B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClipEndTime;                                              // 0x00B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     ClipTargetUserId;                                         // 0x00B8(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     ClipTargetUserNickName;                                   // 0x00C8(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     ReportToken;                                              // 0x00D8(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FString                                     RecordAccountId;                                          // 0x00E8(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bHaveCameraEvent;                                         // 0x00F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TeamInfo
// 0x0038
struct FTeamInfo
{
	struct FString                                     TeamName;                                                 // 0x0000(0x0010) (ZeroConstructor, Transient)
	struct FString                                     TeamShortName;                                            // 0x0010(0x0010) (ZeroConstructor, Transient)
	class UTexture2D*                                  TeamIcon;                                                 // 0x0020(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                TeamColor;                                                // 0x0028(0x0010) (Transient, IsPlainOldData)
};

// ScriptStruct TslGame.PlayerStatInfo
// 0x000C
struct FPlayerStatInfo
{
	float                                              AvgKill;                                                  // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                AvgDamage;                                                // 0x0004(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                AvgAliveTime;                                             // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslMissionInLobby
// 0x0088
struct FTslMissionInLobby
{
	struct FString                                     MissionId;                                                // 0x0000(0x0010) (ZeroConstructor)
	bool                                               bAchieved;                                                // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     Description;                                              // 0x0018(0x0010) (ZeroConstructor)
	int                                                Priority;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Type;                                                     // 0x0030(0x0010) (ZeroConstructor)
	bool                                               bLocked;                                                  // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              ProgressRatio;                                            // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ProgressText;                                             // 0x0048(0x0010) (ZeroConstructor)
	struct FString                                     MissionIconName;                                          // 0x0058(0x0010) (ZeroConstructor)
	int                                                InitialProgress;                                          // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentProgress;                                          // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaximumProgress;                                          // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<struct FName>                               TargetGameModeList;                                       // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.QualityLevelInfo
// 0x0020
struct FQualityLevelInfo
{
	EQualityType                                       QualityType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       DisplayQualityLevelName;                                  // 0x0008(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.TslWeatherLevelVolumetricFogSetting
// 0x0010
struct FTslWeatherLevelVolumetricFogSetting
{
	class UExponentialHeightFogComponent*              CachedCurrWeatherLevelExponentialHeightFogComponent;      // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bEnabledAtInit;                                           // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslOutGameLog
// 0x0020
struct FTslOutGameLog
{
	struct FString                                     Type;                                                     // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Log;                                                      // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.BattleRoyalePlayerFenceData
// 0x0030
struct FBattleRoyalePlayerFenceData
{
	float                                              Damage;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagingStartTime;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TickCount;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FColor                                      FenceColor;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       WarningMessage;                                           // 0x0010(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bUsePlayerFence;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.PresetItemSpawnTableData
// 0x0040
struct FPresetItemSpawnTableData
{
	TAssetPtr<class UDataTable>                        ItemSpawnDataTable;                                       // 0x0000(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        ItemSpawnTogetherDataTable;                               // 0x0020(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.ModePresetData
// 0x02B0
struct FModePresetData
{
	struct FName                                       PresetName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class UClass>                            ModeControllerClass;                                      // 0x0008(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, NoClear)
	TArray<TAssetPtr<class UClass>>                    AdditionalModeControllerClasses;                          // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear)
	TAssetPtr<class UClass>                            InitialItemDonatorClass;                                  // 0x0038(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UClass>                            ItemSpawnProcessorClass;                                  // 0x0058(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UClass>                            EventItemSpawnProcessorClass;                             // 0x0078(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UClass>                            ThingSpawnProcessorClass;                                 // 0x0098(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UClass>                            DroppedPackageSpawnProcessorClass;                        // 0x00B8(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UClass>                            JukeBoxSpawnProcessorClass;                               // 0x00D8(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UClass>                            InteractionSupplySpawnProcessorClass;                     // 0x00F8(0x0020) (Edit, BlueprintVisible)
	float                                              AircraftTotalFlyingTime;                                  // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAircraftTotalFlyingTime;                         // 0x011C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	float                                              AllowRangeByBlueZone;                                     // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAllowRangeByBlueZone;                            // 0x0124(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSurvivalIngameRewardActive;                            // 0x0125(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCraftingRoyaleModeActive;                                // 0x0126(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0127(0x0001) MISSED OFFSET
	TArray<struct FText>                               AutoLootItemCategories;                                   // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              AutoLootRadius;                                           // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TAssetPtr<class UDataTable>                        DropItemSpawnDataTable;                                   // 0x0140(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        DropItemSpawnTogetherDataTable;                           // 0x0160(0x0020) (Edit, BlueprintVisible)
	TMap<struct FString, struct FPresetItemSpawnTableData> ItemSpawnDataTables;                                      // 0x0180(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TAssetPtr<class UDataTable>                        CraftItemDataTable;                                       // 0x01D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UDataTable>                        VehicleSpawnDataTable;                                    // 0x01F0(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        DroppedPackageSpawnDataTable;                             // 0x0210(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        DroppedPackageSpawnTogetherDataTable;                     // 0x0230(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        EventItemPackageSpawnDataTable;                           // 0x0250(0x0020) (Edit, BlueprintVisible)
	TAssetPtr<class UDataTable>                        BluezoneDataTable;                                        // 0x0270(0x0020) (Edit, BlueprintVisible)
	TArray<struct FMatchPreparerClass>                 MatchPreparerClasses;                                     // 0x0290(0x0010) (Edit, ZeroConstructor)
	TArray<TAssetPtr<class UWorld>>                    AdditionalSubLevels;                                      // 0x02A0(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.ModePresetsPerMap
// 0x02D0
struct FModePresetsPerMap
{
	struct FString                                     MapName;                                                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FModePresetData                             DefaultPresetData;                                        // 0x0010(0x02B0) (Edit, BlueprintVisible)
	TArray<struct FModePresetData>                     PresetDataList;                                           // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.GeneralItemSpawnCount
// 0x0008
struct FGeneralItemSpawnCount
{
	int                                                TeamPlayers;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpawnCount;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.HighlightRecordConfig
// 0x000C
struct FHighlightRecordConfig
{
	float                                              BeforeDurationSec;                                        // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AfterDurationSec;                                         // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LinkWaitDurationSec;                                      // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ReplicatedSkinItem
// 0x0010
struct FReplicatedSkinItem
{
	struct FName                                       SkinItemID;                                               // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SkinOwnerPlayerId;                                        // 0x0008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ConstraintSlotConfig
// 0x0010
struct FConstraintSlotConfig
{
	EConstraintSlotType                                ConstraintSlotType;                                       // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FEquipPosition                              EquipPosition;                                            // 0x0004(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	EEquipableItemSoundType                            OverrideSoundType;                                        // 0x000C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableInfo
// 0x0120
struct FItemTableInfo
{
	struct FStringAssetReference                       LegacyDataTable;                                          // 0x0000(0x0010) (Edit)
	struct FStringAssetReference                       AmmoDataTable;                                            // 0x0010(0x0010) (Edit)
	struct FStringAssetReference                       AttachmentDataTable;                                      // 0x0020(0x0010) (Edit)
	struct FStringAssetReference                       EquipDataTable;                                           // 0x0030(0x0010) (Edit)
	struct FStringAssetReference                       EquipCustomDataTable;                                     // 0x0040(0x0010) (Edit)
	struct FStringAssetReference                       SkinDataTable;                                            // 0x0050(0x0010) (Edit)
	struct FStringAssetReference                       WeaponThrowableDataTable;                                 // 0x0060(0x0010) (Edit)
	struct FStringAssetReference                       WeaponShieldDataTable;                                    // 0x0070(0x0010) (Edit)
	struct FStringAssetReference                       WeaponDataTable;                                          // 0x0080(0x0010) (Edit)
	struct FStringAssetReference                       CastableTable;                                            // 0x0090(0x0010) (Edit)
	struct FStringAssetReference                       CastableHealInstantTable;                                 // 0x00A0(0x0010) (Edit)
	struct FStringAssetReference                       CastableHealOverTimeTable;                                // 0x00B0(0x0010) (Edit)
	struct FStringAssetReference                       CastableEquipmentRepairKitTable;                          // 0x00C0(0x0010) (Edit)
	struct FStringAssetReference                       CastableVehicleRepairKitTable;                            // 0x00D0(0x0010) (Edit)
	struct FStringAssetReference                       UsedByActionTable;                                        // 0x00E0(0x0010) (Edit)
	struct FStringAssetReference                       EventItemTable;                                           // 0x00F0(0x0010) (Edit)
	TAssetPtr<class UDataTable>                        CraftItemTable;                                           // 0x0100(0x0020) (Edit)
};

// ScriptStruct TslGame.WeaponAttachmentTagData
// 0x0018
struct FWeaponAttachmentTagData
{
	EWeaponAttachmentSlotID                            AttachmentSlotID;                                         // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FName>                               AttachableTags;                                           // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.LobbyItemBundleElement
// 0x0028
struct FLobbyItemBundleElement
{
	TAssetPtr<class UClass>                            ItemAsset;                                                // 0x0000(0x0020) (Edit, DisableEditOnInstance)
	int                                                BundleId;                                                 // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Quantity;                                                 // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.LobbyItemBundle
// 0x0030
struct FLobbyItemBundle
{
	int                                                BundleId;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     BundleName;                                               // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	ELobbyItemBundleType                               Type;                                                     // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TArray<struct FLobbyItemBundleElement>             ItemList;                                                 // 0x0020(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemSpotComponentSet
// 0x0010
struct FItemSpotComponentSet
{
	TArray<class UItemSpotComponent*>                  ItemSpotArr;                                              // 0x0000(0x0010) (ExportObject, ZeroConstructor)
};

// ScriptStruct TslGame.ItemSpotTypeProperty
// 0x0038
struct FItemSpotTypeProperty
{
	EItemSpotType                                      SpotType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              SpotPercentMin;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpotPercentMax;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemsPerSpotMin;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemsPerSpotMax;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FNameWeight>                         WeightsPerValue;                                          // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FNameWeight>                         WeightsPerCategory;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemSpotGroupTypeProperty
// 0x0168
struct FItemSpotGroupTypeProperty
{
	EItemSpotGroupType                                 SpotGroupType;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              SpotGroupPercent;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FItemSpotTypeProperty>               SpotTypeProperties;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x150];                                     // 0x0018(0x0150) MISSED OFFSET
};

// ScriptStruct TslGame.ItemSpawnStagesConfig_Arena
// 0x0010
struct FItemSpawnStagesConfig_Arena
{
	TArray<struct FItemSpotGroupTypeProperty>          RawSpotGroupProperties;                                   // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemSpotVariant
// 0x0018
struct FItemSpotVariant
{
	struct FVector                                     MasterHousePosInWorldVolume;                              // 0x0000(0x000C) (IsPlainOldData)
	float                                              RandomSpawnRadius;                                        // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           HouseID;                                                  // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	EItemSpotType                                      ItemSpotType;                                             // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bCheckComplexCollision;                                   // 0x0015(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.ItemSpotInstance
// 0x0010
struct FItemSpotInstance
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	int                                                VariantId;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemSpotGroupInstance
// 0x0018
struct FItemSpotGroupInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                FirstChildIndex;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastChildIndex;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	EItemSpotGroupType                                 SpotGroupType;                                            // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.JukeBoxSpotInstance
// 0x0020
struct FJukeBoxSpotInstance
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (IsPlainOldData)
	struct FName                                       LevelBlockId;                                             // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslLobbySceneDataPair
// 0x0018
struct FTslLobbySceneDataPair
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.PlayerStartDesc
// 0x0020
struct FPlayerStartDesc
{
	TArray<class ATslArenaPlayerStart*>                PlayerStart;                                              // 0x0000(0x0010) (ZeroConstructor)
	TWeakObjectPtr<class ATslArenaPlayerStart>         AircraftStart;                                            // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class ATslArenaPlayerStart>         AircraftEnd;                                              // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.MaterialMergerParameters
// 0x0018
struct FMaterialMergerParameters
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EMaterialParameterType                             Type;                                                     // 0x0008(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bStoreToLUT;                                              // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                LUTIndex;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EParameterLUTChannel                               LUTChannel;                                               // 0x0010(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.DestructibleSurfaceBreach
// 0x0014
struct FDestructibleSurfaceBreach
{
	bool                                               ProcessedLocally;                                         // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UPrimitiveComponent>          BreachedComponent;                                        // 0x0004(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	uint16_t                                           SurfaceID;                                                // 0x000C(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           InstanceIndex;                                            // 0x000E(0x0002) (ZeroConstructor, IsPlainOldData)
	bool                                               HitFront;                                                 // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.BlackZoneTarget
// 0x0018
struct FBlackZoneTarget
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class ATslCharacter*                               Instigator;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PopupInfo
// 0x0050
struct FPopupInfo
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};

// ScriptStruct TslGame.PlayersStateInfo
// 0x0008
struct FPlayersStateInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.TeamEliminationPopUpData
// 0x0008
struct FTeamEliminationPopUpData
{
	int                                                TeamNum;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TeamRanking;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct TslGame.DebugVehicleSpawn
// 0x0040
struct FDebugVehicleSpawn
{
	int                                                SpawnCount;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       SpawnTag;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAtLocation;                                         // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	struct FVector                                     SpawnLocation;                                            // 0x0014(0x000C) (IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x0020(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FWaypointNetworkConnection                  StartingPath;                                             // 0x0030(0x0010)
};

// ScriptStruct TslGame.VehicleBehaviorPayload
// 0x0028
struct FVehicleBehaviorPayload
{
	class APawn*                                       VehiclePawn;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               BehaviorTree;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBlackboardData*                             BlackboardData;                                           // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FWaypointNetworkConnection                  StartingPath;                                             // 0x0018(0x0010)
};

// ScriptStruct TslGame.VehicleSpawn
// 0x00B0 (0x00B8 - 0x0008)
struct FVehicleSpawn : public FTableRowBase
{
	struct FGuid                                       ID;                                                       // 0x0008(0x0010) (Edit, EditConst, IsPlainOldData)
	ESpawnType                                         SpawnType;                                                // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TAssetPtr<class UClass>                            VehicleClass;                                             // 0x0020(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UBehaviorTree>                     BehaviorTreeAsset;                                        // 0x0040(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TAssetPtr<class UBlackboardData>                   BlackboardDataAsset;                                      // 0x0060(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              InitialSpawnDelay;                                        // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SubsequentSpawnDelay;                                     // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTriggers;                                              // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinToSpawn;                                               // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxToSpawn;                                               // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	struct FSpawnFilter                                SpawnFilter;                                              // 0x0090(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.ActiveVehicleList
// 0x0020
struct FActiveVehicleList
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.AirVehicleAudioState
// 0x0018
struct FAirVehicleAudioState
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.WeaponAttachmentWeightStruct
// 0x0010 (0x0018 - 0x0008)
struct FWeaponAttachmentWeightStruct : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Weight;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AnimNode_LocomotionBSPlayer
// 0x00E8 (0x0140 - 0x0058)
struct FAnimNode_LocomotionBSPlayer : public FAnimNode_AssetPlayerBase
{
	float                                              NodeSpeed;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Dir;                                                      // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAnimStance                                        AnimStance;                                               // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UAnimDB*                                     AnimDB;                                                   // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSprinting;                                             // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRelaxed;                                               // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              StartPosition;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             BlendSpace;                                               // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bResetPlayTimeWhenBlendSpaceChanges;                      // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FBlendFilter                                BlendFilter;                                              // 0x0090(0x0090)
	TArray<struct FBlendSampleData>                    BlendSampleDataCache;                                     // 0x0120(0x0010) (ZeroConstructor)
	class UBlendSpaceBase*                             PreviousBlendSpace;                                       // 0x0130(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Speed;                                                    // 0x0138(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslAimOffsetsNodeBlendSpaceData
// 0x00C8
struct FTslAimOffsetsNodeBlendSpaceData
{
	class UBlendSpace*                                 BlendSpace;                                               // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBlendSampleData>                    BlendSampleDataCache;                                     // 0x0008(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0018(0x00B0) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_AimOffsets
// 0x0058 (0x00B0 - 0x0058)
struct FTslAnimNode_AimOffsets : public FAnimNode_AssetPlayerBase
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslAimOffsetsNodeBlendSpaceData>    BlendSpacesData;                                          // 0x0070(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	float                                              X;                                                        // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalizedTime;                                           // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x009C(0x0008) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x00A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRelaxed;                                                 // 0x00A5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x00A6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimWeaponSpecificClass                           AnimWeaponSpecificClass;                                  // 0x00A7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendPerBoneBase
// 0x00F8 (0x0128 - 0x0030)
struct FTslAnimNode_BlendPerBoneBase : public FAnimNode_Base
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0030(0x0004) MISSED OFFSET
	EAnimAlphaInputType                                AlphaInputType;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAlphaBoolEnabled;                                        // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	float                                              ALPHA;                                                    // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBias                             AlphaScaleBias;                                           // 0x003C(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FInputAlphaBoolBlend                        AlphaBoolBlend;                                           // 0x0048(0x0050) (Edit, BlueprintVisible)
	struct FName                                       AlphaCurveName;                                           // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBiasClamp                        AlphaScaleBiasClamp;                                      // 0x00A0(0x0030) (Edit, BlueprintVisible)
	int                                                LODThreshold;                                             // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<float>                                      PerBoneBlendWeights;                                      // 0x00D8(0x0010) (ZeroConstructor)
	struct FGuid                                       SkeletonGuid;                                             // 0x00E8(0x0010) (IsPlainOldData)
	struct FGuid                                       VirtualBoneGuid;                                          // 0x00F8(0x0010) (IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0108(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.BlendBoneSettings
// 0x0020
struct FBlendBoneSettings
{
	struct FBoneReference                              Bone;                                                     // 0x0000(0x0018) (Edit, BlueprintVisible)
	float                                              Weight;                                                   // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPropagateToChildren;                                     // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_ApplyAdditivePerBoneBase
// 0x0030 (0x0158 - 0x0128)
struct FTslAnimNode_ApplyAdditivePerBoneBase : public FTslAnimNode_BlendPerBoneBase
{
	struct FPoseLink                                   Base;                                                     // 0x0128(0x0018) (Edit, BlueprintVisible)
	struct FPoseLink                                   Additive;                                                 // 0x0140(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.TslAnimNode_ApplyAdditivePerBone
// 0x0010 (0x0168 - 0x0158)
struct FTslAnimNode_ApplyAdditivePerBone : public FTslAnimNode_ApplyAdditivePerBoneBase
{
	TArray<struct FBlendBoneSettings>                  OverrideBones;                                            // 0x0158(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.ExcludeBoneSettings
// 0x0020
struct FExcludeBoneSettings
{
	struct FBoneReference                              Bone;                                                     // 0x0000(0x0018) (Edit, BlueprintVisible)
	bool                                               bPropagateToChildren;                                     // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_ApplyAdditiveExcludeBones
// 0x0010 (0x0168 - 0x0158)
struct FTslAnimNode_ApplyAdditiveExcludeBones : public FTslAnimNode_ApplyAdditivePerBoneBase
{
	TArray<struct FExcludeBoneSettings>                ExcludeBones;                                             // 0x0158(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.TslBlendSpaceBlendData
// 0x00D0
struct FTslBlendSpaceBlendData
{
	class UBlendSpace*                                 BlendSpace;                                               // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBlendSampleData>                    BlendSampleDataCache;                                     // 0x0008(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0018(0x00B8) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendListBlendSpace
// 0x0060 (0x00B8 - 0x0058)
struct FTslAnimNode_BlendListBlendSpace : public FAnimNode_AssetPlayerBase
{
	float                                              X;                                                        // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 LastActiveBlendSpace;                                     // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UBlendSpace*>                         BlendSpace;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor)
	TArray<float>                                      BlendTime;                                                // 0x0080(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor)
	TArray<struct FTslBlendSpaceBlendData>             BlendSpaceData;                                           // 0x0090(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x00B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x00B5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00B6(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendListBlendSpaceByEnum
// 0x0018 (0x00D0 - 0x00B8)
struct FTslAnimNode_BlendListBlendSpaceByEnum : public FTslAnimNode_BlendListBlendSpace
{
	TArray<unsigned char>                              EnumToPoseIndex;                                          // 0x00B8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x5];                                       // 0x00C8(0x0005) MISSED OFFSET
	unsigned char                                      ActiveEnumValue;                                          // 0x00CD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendEvaluatorBlendSpaceByEnum
// 0x0008 (0x00D8 - 0x00D0)
struct FTslAnimNode_BlendEvaluatorBlendSpaceByEnum : public FTslAnimNode_BlendListBlendSpaceByEnum
{
	float                                              NormalizedTime;                                           // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.BlendPosePlayInfo
// 0x0024
struct FBlendPosePlayInfo
{
	float                                              PlayChance;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FInt32Range                                 LoopingCounter;                                           // 0x0004(0x0010) (Edit)
	struct FFloatRange                                 RandomPlayTime;                                           // 0x0014(0x0010) (Edit)
};

// ScriptStruct TslGame.TslAnimNode_BlendListRandom
// 0x0058 (0x0120 - 0x00C8)
struct FTslAnimNode_BlendListRandom : public FAnimNode_BlendListBase
{
	int                                                ActiveChildIndex;                                         // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ERandomType                                        RandomType;                                               // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	TArray<struct FBlendPosePlayInfo>                  PlayChances;                                              // 0x00D0(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        PlayList;                                                 // 0x00E0(0x0010) (ZeroConstructor, Transient)
	int                                                LoopingCounter;                                           // 0x00F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RandomPlayTime;                                           // 0x00F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RandomAccumlateTime;                                      // 0x00F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRandomStream                               RandomStream;                                             // 0x00FC(0x0008) (Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	TArray<float>                                      NormalizedPlayChances;                                    // 0x0108(0x0010) (ZeroConstructor, Transient)
	float                                              LastChildAssetTime;                                       // 0x0118(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendPerBone
// 0x0060 (0x0188 - 0x0128)
struct FTslAnimNode_BlendPerBone : public FTslAnimNode_BlendPerBoneBase
{
	TArray<struct FBlendBoneSettings>                  OverrideBones;                                            // 0x0128(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FPoseLink                                   BasePose;                                                 // 0x0138(0x0018) (Edit, BlueprintVisible)
	struct FPoseLink                                   BlendPose;                                                // 0x0150(0x0018) (Edit, BlueprintVisible)
	struct FBoneReference                              BlendBone;                                                // 0x0168(0x0018) (Edit, BlueprintVisible)
	bool                                               bMeshSpaceRotationBlend;                                  // 0x0180(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepBlendBonePosition;                                   // 0x0181(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECurveBlendOption>                     CurveBlendOption;                                         // 0x0182(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.TslBlendSequencesByBoolAnimationData
// 0x0030
struct FTslBlendSequencesByBoolAnimationData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BlendSequencesByBool
// 0x0058 (0x00B0 - 0x0058)
struct FTslAnimNode_BlendSequencesByBool : public FAnimNode_AssetPlayerBase
{
	bool                                               ActiveValue;                                              // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x0059(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // 0x005A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x005B(0x0001) MISSED OFFSET
	EBlendSequenceByBoolStartType                      StartType;                                                // 0x005C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005B(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	TArray<struct FTslBlendSequencesByBoolAnimationData> SequencesData;                                            // 0x0060(0x0010) (ZeroConstructor, Transient)
	class UAnimSequence*                               TrueSequence;                                             // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               FalseSequence;                                            // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               LastActiveSequence;                                       // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0090(0x0010) MISSED OFFSET
	float                                              TrueBlendTime;                                            // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FalseBlendTime;                                           // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TruePlayRate;                                             // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FalsePlayRate;                                            // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslBonesLookAtEachOtherSettings
// 0x0058
struct FTslBonesLookAtEachOtherSettings
{
	struct FBoneReference                              Bone1;                                                    // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBoneReference                              Bone2;                                                    // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAxis                                       LookAt_Axis;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAxis                                       LookUp_Axis;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bUseLookUpAxis;                                           // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BonesLookAtEachOther
// 0x0020 (0x0118 - 0x00F8)
struct FTslAnimNode_BonesLookAtEachOther : public FAnimNode_SkeletalControlBase
{
	TArray<struct FTslBonesLookAtEachOtherSettings>    Bones;                                                    // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_BranchByBool
// 0x0038 (0x0068 - 0x0030)
struct FTslAnimNode_BranchByBool : public FAnimNode_Base
{
	bool                                               ActiveValue;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FPoseLink                                   TruePose;                                                 // 0x0038(0x0018) (Edit, BlueprintVisible, EditFixedSize)
	struct FPoseLink                                   FalsePose;                                                // 0x0050(0x0018) (Edit, BlueprintVisible, EditFixedSize)
};

// ScriptStruct TslGame.CCDIKJointSettings
// 0x001C
struct FCCDIKJointSettings
{
	float                                              MaxConeAngle;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleX;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinAngleX;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleY;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinAngleY;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleZ;                                                // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinAngleZ;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_CCDIK
// 0x00C8 (0x01C0 - 0x00F8)
struct FTslAnimNode_CCDIK : public FAnimNode_SkeletalControlBase
{
	struct FVector                                     EffectorLocation;                                         // 0x00F8(0x000C) (Edit, IsPlainOldData)
	TEnumAsByte<EBoneControlSpace>                     EffectorLocationSpace;                                    // 0x0104(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0105(0x000B) MISSED OFFSET
	struct FBoneSocketTarget                           EffectorTarget;                                           // 0x0110(0x0060) (Edit)
	struct FBoneReference                              TipBone;                                                  // 0x0170(0x0018) (Edit)
	struct FBoneReference                              RootBone;                                                 // 0x0188(0x0018) (Edit)
	float                                              Precision;                                                // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxIterations;                                            // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bStartFromTail;                                           // 0x01A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableRotationLimit;                                     // 0x01A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x01AA(0x0006) MISSED OFFSET
	TArray<struct FCCDIKJointSettings>                 RotationLimitPerJoints;                                   // 0x01B0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
};

// ScriptStruct TslGame.TslCopyBoneSettings
// 0x0038
struct FTslCopyBoneSettings
{
	struct FBoneReference                              SourceBone;                                               // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBoneReference                              TargetBone;                                               // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bCopyTranslation;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCopyRotation;                                            // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCopyScale;                                               // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBoneControlSpace>                     ControlSpace;                                             // 0x0033(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_CopyBones
// 0x0020 (0x0118 - 0x00F8)
struct FTslAnimNode_CopyBones : public FAnimNode_SkeletalControlBase
{
	TArray<struct FTslCopyBoneSettings>                Bones;                                                    // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_CustomAnimSequence
// 0x0020 (0x0090 - 0x0070)
struct FTslAnimNode_CustomAnimSequence : public FAnimNode_SequencePlayer
{
	class UTslNpcAnimDataAsset*                        AnimDataAsset;                                            // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimName;                                                 // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AltAnimName;                                              // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AnimationIndex;                                           // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomAnimDataType                                CustomAnimDataType;                                       // 0x008C(0x0001) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_FabrikElbow
// 0x00B8 (0x01B0 - 0x00F8)
struct FTslAnimNode_FabrikElbow : public FAnimNode_SkeletalControlBase
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	struct FTransform                                  EffectorTransform;                                        // 0x0100(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<EBoneControlSpace>                     EffectorTransformSpace;                                   // 0x0130(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	struct FBoneReference                              EffectorTransformBone;                                    // 0x0138(0x0018) (Edit, BlueprintVisible)
	TEnumAsByte<EBoneRotationSource>                   EffectorRotationSource;                                   // 0x0150(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	struct FBoneReference                              TipBone;                                                  // 0x0158(0x0018) (Edit, BlueprintVisible)
	struct FBoneReference                              RootBone;                                                 // 0x0170(0x0018) (Edit, BlueprintVisible)
	struct FBoneReference                              ElbowBone;                                                // 0x0188(0x0018) (Edit, BlueprintVisible)
	float                                              ElbowInterpCoef;                                          // 0x01A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Precision;                                                // 0x01A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxIterations;                                            // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDebugDraw;                                         // 0x01AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01AD(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslFallingNodeAnimationData
// 0x00D0
struct FTslFallingNodeAnimationData
{
	class UBlendSpace1D*                               BlendSpace;                                               // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBlendSampleData>                    BlendSampleDataCache;                                     // 0x0008(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0018(0x00B8) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Falling
// 0x0048 (0x00A0 - 0x0058)
struct FTslAnimNode_Falling : public FAnimNode_AssetPlayerBase
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslFallingNodeAnimationData>        BlendSpacesData;                                          // 0x0070(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	float                                              X;                                                        // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0098(0x0004) MISSED OFFSET
	EWeaponClass                                       WeaponClass;                                              // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x009D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x009E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.TslHealingSequenceData
// 0x0028
struct FTslHealingSequenceData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0008(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Healing
// 0x0050 (0x0080 - 0x0030)
struct FTslAnimNode_Healing : public FAnimNode_Base
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslHealingSequenceData>             SequencesData;                                            // 0x0048(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECastAnim                                          CurrentItem;                                              // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsParentControl;                                          // 0x007A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimStance                                        Stance;                                                   // 0x007B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFPP;                                                    // 0x007C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Looping;                                                  // 0x007D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x007E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.TslIdlesNodeAnimationData
// 0x0038
struct FTslIdlesNodeAnimationData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0008(0x0030) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Idles
// 0x0050 (0x00A8 - 0x0058)
struct FTslAnimNode_Idles : public FAnimNode_AssetPlayerBase
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslIdlesNodeAnimationData>          SequencesData;                                            // 0x0070(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0080(0x0018) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x00A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Relaxed;                                                  // 0x00A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x00A3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslJumpStartNodeAnimationData
// 0x0040
struct FTslJumpStartNodeAnimationData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0008(0x0038) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_JumpStart
// 0x0060 (0x00B8 - 0x0058)
struct FTslAnimNode_JumpStart : public FAnimNode_AssetPlayerBase
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslJumpStartNodeAnimationData>      SequencesData;                                            // 0x0070(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	struct FVector                                     Velocity;                                                 // 0x0090(0x000C) (Edit, IsPlainOldData)
	float                                              Yaw;                                                      // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpHeight;                                               // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BackwardAngleThreshold;                                   // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	EWeaponClass                                       WeaponClass;                                              // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRelaxed;                                                 // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLocalPlayer;                                           // 0x00B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x00B3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.LobbyCharacterAnimationDataRow
// 0x0078 (0x0080 - 0x0008)
struct FLobbyCharacterAnimationDataRow : public FTableRowBase
{
	ELobbyCharacterPosition                            Poisition;                                                // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ELobbyCharacterReadyType                           State;                                                    // 0x0009(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDefaultAnimation;                                        // 0x000A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
	float                                              CycleTimes;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           UnArmed;                                                  // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Pistol;                                                   // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           SMG;                                                      // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Rifle;                                                    // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Carbine;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Shotgun;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Sniper;                                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           DMR;                                                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           LMG;                                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Melee;                                                    // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Throwable;                                                // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Shield;                                                   // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           crossbow;                                                 // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequenceBase*                           Launcher;                                                 // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_LobbyAnimSequence
// 0x0090 (0x0100 - 0x0070)
struct FTslAnimNode_LobbyAnimSequence : public FAnimNode_SequencePlayer
{
	struct FLobbyCharacterAnimationDataRow             CurrentAnimData;                                          // 0x0070(0x0080) (Edit, Transient, EditConst)
	class UAnimSequenceBase*                           LobbySequence;                                            // 0x00F0(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	int                                                LobbyCharacterPosition;                                   // 0x00F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	ELobbyCharacterReadyType                           ReadyType;                                                // 0x00FC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       LastLobbyAnimationClass;                                  // 0x00FD(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayingDefaultAnim;                                      // 0x00FE(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayNextAnim;                                            // 0x00FF(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslLocomotionNodeAnimationData
// 0x0040
struct FTslLocomotionNodeAnimationData
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	class UAnimationAsset*                             Asset;                                                    // 0x0010(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0018(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Locomotion
// 0x0158 (0x01B0 - 0x0058)
struct FTslAnimNode_Locomotion : public FAnimNode_AssetPlayerBase
{
	TArray<struct FTslLocomotionNodeAnimationData>     AnimationsData;                                           // 0x0058(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0068(0x0050) MISSED OFFSET
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00C0(0x0010) MISSED OFFSET
	struct FVector                                     Acceleration;                                             // 0x00D0(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x00DC(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTime;                                                // 0x00E8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x16];                                      // 0x00F4(0x0016) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x010A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Relaxed;                                                  // 0x010B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFPP;                                                   // 0x010C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x010D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECharacterGait                                     Gait;                                                     // 0x010E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD];                                       // 0x010F(0x000D) MISSED OFFSET
	int                                                StartGroupIndex;                                          // 0x011C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LocomotionGroupIndex;                                     // 0x0120(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StopGroupIndex;                                           // 0x0124(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PivotGroupIndex;                                          // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        StartGroupRole;                                           // 0x012C(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        LocomotionGroupRole;                                      // 0x012D(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        StopGroupRole;                                            // 0x012E(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        PivotGroupRole;                                           // 0x012F(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              Friction;                                                 // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDeceleration;                                      // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActiveFootThreshold;                                      // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StoppingSpeedThreshold;                                   // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FastTurnPivotAngleThreshold;                              // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGaitValues                                 BlendTimeLocomotionToStop;                                // 0x0144(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeLocomotionToPivot;                               // 0x0150(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeStartToStop;                                     // 0x015C(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeStartToPivot;                                    // 0x0168(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeStopToPivot;                                     // 0x0174(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeStopToStart;                                     // 0x0180(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimePivotToStop;                                     // 0x018C(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimePivotToPivot;                                    // 0x0198(0x000C) (Edit, IsPlainOldData)
	struct FGaitValues                                 BlendTimeLocomotionToIdle;                                // 0x01A4(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_Locomotion_v1
// 0x0018 (0x01C8 - 0x01B0)
struct FTslAnimNode_Locomotion_v1 : public FTslAnimNode_Locomotion
{
	class UAnimDBMap*                                  AnimDBMap;                                                // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimDBMap*                                  PrevAnimDBMap;                                            // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Locomotion_v2
// 0x0018 (0x01C8 - 0x01B0)
struct FTslAnimNode_Locomotion_v2 : public FTslAnimNode_Locomotion
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimWeaponSpecificClass                           AnimWeaponSpecificClass;                                  // 0x01C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01C2(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_PlaySequenceFromAnimDBMap
// 0x0030 (0x00A0 - 0x0070)
struct FTslAnimNode_PlaySequenceFromAnimDBMap : public FAnimNode_SequencePlayer
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0080(0x0018) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Relaxed;                                                  // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EFPlaySequenceFromAnimDBMapAnimType                AnimType;                                                 // 0x009B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimStance                                        StanceFrom;                                               // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_RotateBones
// 0x00A0 (0x00D0 - 0x0030)
struct FTslAnimNode_RotateBones : public FAnimNode_Base
{
	struct FPoseLink                                   BasePose;                                                 // 0x0030(0x0018) (Edit)
	TArray<struct FName>                               Bone;                                                     // 0x0048(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<ERotateBoneSpace>                           Space;                                                    // 0x0058(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<TEnumAsByte<EAxis>>                         Axis;                                                     // 0x0068(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<float>                                      Angle;                                                    // 0x0078(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FRotator>                            Rotator;                                                  // 0x0088(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<float>                                      ALPHA;                                                    // 0x0098(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00A8(0x0020) MISSED OFFSET
	ERotateBoneInputType                               InputType;                                                // 0x00C8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_RotateRootBone
// 0x0038 (0x0068 - 0x0030)
struct FTslAnimNode_RotateRootBone : public FAnimNode_Base
{
	struct FPoseLink                                   BasePose;                                                 // 0x0030(0x0018) (Edit)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET
	float                                              Yaw;                                                      // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepChildTransforms;                                     // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInvert;                                                  // 0x0061(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.TslSequenceBlending
// 0x0030
struct FTslSequenceBlending
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_SequenceEvaluatorWithBlending
// 0x0048 (0x00A0 - 0x0058)
struct FTslAnimNode_SequenceEvaluatorWithBlending : public FAnimNode_AssetPlayerBase
{
	class UAnimSequence*                               Sequence;                                                 // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PrevSequence;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FTslSequenceBlending>                SequencesData;                                            // 0x0068(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0078(0x0010) MISSED OFFSET
	float                                              ExplicitTime;                                             // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_Slot
// 0x0008 (0x0078 - 0x0070)
struct FTslAnimNode_Slot : public FAnimNode_Slot
{
	float                                              ALPHA;                                                    // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ECustomAnimSlotType                                SlotType;                                                 // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_SlotByEnum
// 0x0178 (0x01A8 - 0x0030)
struct FTslAnimNode_SlotByEnum : public FAnimNode_Base
{
	struct FPoseLink                                   Source;                                                   // 0x0030(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      ActiveEnumValue;                                          // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x0049(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x26];                                      // 0x004A(0x0026) MISSED OFFSET
	TArray<struct FName>                               Slot;                                                     // 0x0070(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	TArray<float>                                      BlendTime;                                                // 0x0090(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor)
	TArray<int>                                        EnumToSlotIndex;                                          // 0x00A0(0x0010) (ZeroConstructor)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B8(0x0004) MISSED OFFSET
	EAnimAlphaInputType                                AlphaInputType;                                           // 0x00BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAlphaBoolEnabled;                                        // 0x00BD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00BE(0x0002) MISSED OFFSET
	float                                              ALPHA;                                                    // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBias                             AlphaScaleBias;                                           // 0x00C4(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	struct FInputAlphaBoolBlend                        AlphaBoolBlend;                                           // 0x00D0(0x0050) (Edit, BlueprintVisible)
	struct FName                                       AlphaCurveName;                                           // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBiasClamp                        AlphaScaleBiasClamp;                                      // 0x0128(0x0030) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05[0x50];                                      // 0x0158(0x0050) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_SlotByWeapon
// 0x00A0 (0x0110 - 0x0070)
struct FTslAnimNode_SlotByWeapon : public FAnimNode_Slot
{
	float                                              ALPHA;                                                    // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TMap<EAnimWeaponType, struct FName>                SlotNames;                                                // 0x0078(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	EAnimWeaponType                                    InWeapon;                                                 // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x47];                                      // 0x00C9(0x0047) MISSED OFFSET
};

// ScriptStruct TslGame.TslTransitionNodeAnimationData
// 0x0030
struct FTslTransitionNodeAnimationData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Transition
// 0x0048 (0x00A0 - 0x0058)
struct FTslAnimNode_Transition : public FAnimNode_AssetPlayerBase
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTslTransitionNodeAnimationData>     SequencesData;                                            // 0x0070(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	float                                              BlendTime;                                                // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimStance                                        StanceFrom;                                               // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x009A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRelaxed;                                                 // 0x009B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendType;                                                // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslTurnSequenceData
// 0x0040
struct FTslTurnSequenceData
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0008(0x0038) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_Turns
// 0x00C0 (0x00F0 - 0x0030)
struct FTslAnimNode_Turns : public FAnimNode_Base
{
	TArray<struct FTslTurnSequenceData>                SequencesData;                                            // 0x0030(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0040(0x0060) MISSED OFFSET
	struct FVector                                     Velocity;                                                 // 0x00A0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	float                                              FeetInterpSpeed;                                          // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProceduralStepInterpSpeed;                                // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProceduralStepHeight;                                     // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProceduralStepMinDistance;                                // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DesiredAngle;                                             // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x00C8(0x0018) MISSED OFFSET
	EAnimStance                                        Stance;                                                   // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponClass                                       WeaponClass;                                              // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Relaxed;                                                  // 0x00E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00E3(0x0002) MISSED OFFSET
	EAlphaBlendOption                                  BlendType;                                                // 0x00E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00E6(0x0002) MISSED OFFSET
	class UCurveFloat*                                 CustomBlendCurve;                                         // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_Turns_v1
// 0x0010 (0x0100 - 0x00F0)
struct FTslAnimNode_Turns_v1 : public FTslAnimNode_Turns
{
	class UAnimDBMap*                                  AnimDBMap;                                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimDBMap*                                  PrevAnimDBMap;                                            // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslAnimNode_Turns_v2
// 0x0018 (0x0108 - 0x00F0)
struct FTslAnimNode_Turns_v2 : public FTslAnimNode_Turns
{
	class UCharacterAnimDBMap*                         AnimDBMap;                                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterAnimDBMap*                         PrevAnimDBMap;                                            // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EAnimWeaponSpecificClass                           AnimWeaponSpecificClass;                                  // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.BaseStatus
// 0x0008
struct FBaseStatus
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.MinMaxAverage
// 0x0090
struct FMinMaxAverage
{
	float                                              Min;                                                      // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Average;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x84];                                      // 0x000C(0x0084) MISSED OFFSET
};

// ScriptStruct TslGame.FPSStatus
// 0x0248 (0x0250 - 0x0008)
struct FFPSStatus : public FBaseStatus
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FMinMaxAverage                              Frame;                                                    // 0x0010(0x0090)
	struct FMinMaxAverage                              GameMS;                                                   // 0x00A0(0x0090)
	struct FMinMaxAverage                              DrawMS;                                                   // 0x0130(0x0090)
	struct FMinMaxAverage                              GPUMS;                                                    // 0x01C0(0x0090)
};

// ScriptStruct TslGame.MemoryStatus
// 0x0188 (0x0190 - 0x0008)
struct FMemoryStatus : public FBaseStatus
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FMinMaxAverage                              FreeCPUMemoryKB;                                          // 0x0010(0x0090)
	struct FMinMaxAverage                              FreeGPUMemoryKB;                                          // 0x00A0(0x0090)
	struct FString                                     LLMDefaultTagCSV;                                         // 0x0130(0x0010) (ZeroConstructor)
	struct FString                                     LLMDefaultValueCSV;                                       // 0x0140(0x0010) (ZeroConstructor)
	struct FString                                     LLMPlatformTagCSV;                                        // 0x0150(0x0010) (ZeroConstructor)
	struct FString                                     LLMPlatformValueCSV;                                      // 0x0160(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.InGameStatus
// 0x0020 (0x0028 - 0x0008)
struct FInGameStatus : public FBaseStatus
{
	int                                                CharacterCount;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                VehicleCount;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewPosition;                                             // 0x0014(0x000C) (IsPlainOldData)
	int64_t                                            UObjectCount;                                             // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.HealthCheckData
// 0x0410
struct FHealthCheckData
{
	struct FFPSStatus                                  FPSStatus;                                                // 0x0000(0x0250)
	struct FMemoryStatus                               MemoryStatus;                                             // 0x0250(0x0190)
	struct FInGameStatus                               InGameStatus;                                             // 0x03E0(0x0028)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.HealthCheckHeader
// 0x0040
struct FHealthCheckHeader
{
	struct FString                                     DeviceName;                                               // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     ClientVersion;                                            // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     MapName;                                                  // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0030(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslLootRestrictionRow
// 0x0010 (0x0018 - 0x0008)
struct FTslLootRestrictionRow : public FTableRowBase
{
	TArray<struct FName>                               ItemIDs;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslAnimInstanceProxy
// 0x0000 (0x0510 - 0x0510)
struct FTslAnimInstanceProxy : public FAnimInstanceProxy
{

};

// ScriptStruct TslGame.BattleVisualizationTableRowBase
// 0x0020 (0x0028 - 0x0008)
struct FBattleVisualizationTableRowBase : public FTableRowBase
{
	float                                              phase;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              killer_x;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              killer_y;                                                 // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              killer_z;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              victim_x;                                                 // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              victim_y;                                                 // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              victim_z;                                                 // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowBase
// 0x0260 (0x0268 - 0x0008)
struct FItemTableRowBase : public FTableRowBase
{
	unsigned char                                      bStackable : 1;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUsable : 1;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsConsumable : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDisableSpawnInGame : 1;                                  // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                StackCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DefaultStackCount;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FText                                       ItemName;                                                 // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemCategory;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDetailedName;                                         // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDescription;                                          // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ItemMaxInteractableDistance;                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCountMax;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpacePerItem;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TAssetPtr<class UStaticMesh>                       DroppedMesh;                                              // 0x0088(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DroppedMeshScale;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDropAsProjectile;                                        // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	TAssetPtr<class UThrowableItemDataAsset>           ProjectileConfig;                                         // 0x00B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          Icon;                                                     // 0x00D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          ToolTipIcon;                                              // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              IconSizeRatio;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ToolTipIconSizeRatio;                                     // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     DropSoundAk;                                              // 0x0118(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       DropAnimation;                                            // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     PickUpSoundAk;                                            // 0x0140(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       PickUpAnimationOverride;                                  // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     InventoryPutSoundAk;                                      // 0x0168(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                SortPriority;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemCategory                                      Category;                                                 // 0x018C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	struct FName                                       SubCategory;                                              // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsToy;                                                   // 0x0198(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLobbyItem;                                             // 0x0199(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	int                                                LobbyItemID;                                              // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLobbyItemDesc                              LobbyItemDesc;                                            // 0x01A0(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsLobbyWeapon;                                           // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	int                                                LobbyWeaponID;                                            // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UClass>                            LobbyWeaponInstance;                                      // 0x0208(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bVested;                                                  // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDropVolatility;                                          // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDropItem;                                             // 0x022A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x022B(0x0005) MISSED OFFSET
	struct FString                                     Note;                                                     // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                AIFullValue;                                              // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ItemClass;                                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CastableImplementClass;                                   // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTslItemDestructionBehavior*                 DestructionBehavior;                                      // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowAmmo
// 0x0028 (0x0290 - 0x0268)
struct FItemTableRowAmmo : public FItemTableRowBase
{
	TAssetPtr<class UTexture>                          AmmoIcon;                                                 // 0x0268(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              AmmoIconRatio;                                            // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowAttachment
// 0x02C0 (0x0528 - 0x0268)
struct FItemTableRowAttachment : public FItemTableRowBase
{
	struct FWeaponAttachmentData                       AttachmentData;                                           // 0x0268(0x0258) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UStaticMesh>                       AttachmentMeshAsset;                                      // 0x04C0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       AttachmentMeshName;                                       // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FWeaponAttachmentWeaponTagData>      AttachmentWeaponTagData;                                  // 0x04E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      AttachmentTemplate;                                       // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EquipOnPickUp;                                            // 0x0500(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	TAssetPtr<class UAkAudioEvent>                     AttachedSoundAk;                                          // 0x0508(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemTableRowCastable
// 0x0058 (0x02C0 - 0x0268)
struct FItemTableRowCastable : public FItemTableRowBase
{
	bool                                               bCanUseInWater;                                           // 0x0268(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	struct FCastConfig                                 CastConfig;                                               // 0x0270(0x0048) (Edit, DisableEditOnInstance)
	ECastableItemType                                  CastableItemType;                                         // 0x02B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02B9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowCastableEquipmentRepairKit
// 0x0008 (0x02C8 - 0x02C0)
struct FItemTableRowCastableEquipmentRepairKit : public FItemTableRowCastable
{
	EEquipSlotID                                       EquipSlot;                                                // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              RepairAmount;                                             // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowCastableHealInstant
// 0x0008 (0x02C8 - 0x02C0)
struct FItemTableRowCastableHealInstant : public FItemTableRowCastable
{
	float                                              HealLimit;                                                // 0x02C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowCastableHealOverTime
// 0x0020 (0x02E0 - 0x02C0)
struct FItemTableRowCastableHealOverTime : public FItemTableRowCastable
{
	TAssetPtr<class UClass>                            HealOverTimeBuffClass;                                    // 0x02C0(0x0020) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemTableRowCastableVehicleRepairKit
// 0x0008 (0x02C8 - 0x02C0)
struct FItemTableRowCastableVehicleRepairKit : public FItemTableRowCastable
{
	float                                              RepairAmount;                                             // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowCraft
// 0x0000 (0x0268 - 0x0268)
struct FItemTableRowCraft : public FItemTableRowBase
{
	unsigned char                                      bStackable : 1;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUsable : 1;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsConsumable : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDisableSpawnInGame : 1;                                  // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                StackCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DefaultStackCount;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FText                                       ItemName;                                                 // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemCategory;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDetailedName;                                         // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDescription;                                          // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ItemMaxInteractableDistance;                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCountMax;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpacePerItem;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TAssetPtr<class UStaticMesh>                       DroppedMesh;                                              // 0x0088(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DroppedMeshScale;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDropAsProjectile;                                        // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	TAssetPtr<class UThrowableItemDataAsset>           ProjectileConfig;                                         // 0x00B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          Icon;                                                     // 0x00D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          ToolTipIcon;                                              // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              IconSizeRatio;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ToolTipIconSizeRatio;                                     // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     DropSoundAk;                                              // 0x0118(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       DropAnimation;                                            // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     PickUpSoundAk;                                            // 0x0140(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       PickUpAnimationOverride;                                  // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     InventoryPutSoundAk;                                      // 0x0168(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                SortPriority;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemCategory                                      Category;                                                 // 0x018C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	struct FName                                       SubCategory;                                              // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsToy;                                                   // 0x0198(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLobbyItem;                                             // 0x0199(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	int                                                LobbyItemID;                                              // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLobbyItemDesc                              LobbyItemDesc;                                            // 0x01A0(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsLobbyWeapon;                                           // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	int                                                LobbyWeaponID;                                            // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UClass>                            LobbyWeaponInstance;                                      // 0x0208(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bVested;                                                  // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDropVolatility;                                          // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDropItem;                                             // 0x022A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x022B(0x0005) MISSED OFFSET
	struct FString                                     Note;                                                     // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                AIFullValue;                                              // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ItemClass;                                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CastableImplementClass;                                   // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTslItemDestructionBehavior*                 DestructionBehavior;                                      // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowEquipment
// 0x01A8 (0x0410 - 0x0268)
struct FItemTableRowEquipment : public FItemTableRowBase
{
	EEquipSlotID                                       EquipSlotID;                                              // 0x0268(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	float                                              SpaceExtension;                                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageReductionRate;                                      // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DurabilityMax;                                            // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DestroyByDurability;                                      // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	float                                              Durability;                                               // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDurabilityConsumeType                             DurabilityConsumeType;                                    // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0281(0x0003) MISSED OFFSET
	float                                              DamageTransferRate;                                       // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x0288(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x02B8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectOriginalSkin;                           // 0x02E8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     EquipedSoundAk;                                           // 0x0308(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     BlueBlockerEnterBlueZoneSoundAk;                          // 0x0328(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     BlueBlockerExitBlueZoneSoundAk;                           // 0x0348(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     BlueBlockerLowHealthSoundAk;                              // 0x0368(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     BlueBlockerNoHealthSoundAk;                               // 0x0388(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              BlueBlockerLowHealthThreshold;                            // 0x03A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EEquipableItemSoundGroup                           SoundGroup;                                               // 0x03AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EEquipableItemSoundType                            SoundType;                                                // 0x03AD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanZombieEquip;                                          // 0x03AE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESlotOffsetType                                    SlotOffsetType;                                           // 0x03AF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SkinTag;                                                  // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EEquipableItemLevelType                            EquipableItemLevelType;                                   // 0x03B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsUnequipable;                                           // 0x03B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsBlueBlocker;                                           // 0x03BA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x03BB(0x0005) MISSED OFFSET
	TAssetPtr<class UTexture>                          HudDisplayEquipIcon;                                      // 0x03C0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FConstraintSlotConfig>               ConstraintSlotConfigs;                                    // 0x03E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTslBuffType>                        BuffSpawnInfo;                                            // 0x03F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       EquipmentOverridableFilter;                               // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsHoody;                                                 // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ItemTableRowEquipmentCustom
// 0x0100 (0x0510 - 0x0410)
struct FItemTableRowEquipmentCustom : public FItemTableRowEquipment
{
	int                                                ItemLevel;                                                // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0414(0x000C) MISSED OFFSET
	struct FTransform                                  SlotOffset_Primary;                                       // 0x0420(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SlotOffset_Secondary;                                     // 0x0450(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SlotOffset_SideArm;                                       // 0x0480(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SlotOffset_Melee;                                         // 0x04B0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SlotOffset_Thrown;                                        // 0x04E0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowEvent
// 0x0000 (0x0268 - 0x0268)
struct FItemTableRowEvent : public FItemTableRowBase
{
	unsigned char                                      bStackable : 1;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUsable : 1;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsConsumable : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDisableSpawnInGame : 1;                                  // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                StackCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DefaultStackCount;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FText                                       ItemName;                                                 // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemCategory;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDetailedName;                                         // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDescription;                                          // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ItemMaxInteractableDistance;                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCountMax;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpacePerItem;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TAssetPtr<class UStaticMesh>                       DroppedMesh;                                              // 0x0088(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DroppedMeshScale;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDropAsProjectile;                                        // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	TAssetPtr<class UThrowableItemDataAsset>           ProjectileConfig;                                         // 0x00B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          Icon;                                                     // 0x00D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          ToolTipIcon;                                              // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              IconSizeRatio;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ToolTipIconSizeRatio;                                     // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     DropSoundAk;                                              // 0x0118(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       DropAnimation;                                            // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     PickUpSoundAk;                                            // 0x0140(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       PickUpAnimationOverride;                                  // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     InventoryPutSoundAk;                                      // 0x0168(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                SortPriority;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemCategory                                      Category;                                                 // 0x018C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	struct FName                                       SubCategory;                                              // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsToy;                                                   // 0x0198(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLobbyItem;                                             // 0x0199(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	int                                                LobbyItemID;                                              // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLobbyItemDesc                              LobbyItemDesc;                                            // 0x01A0(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsLobbyWeapon;                                           // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	int                                                LobbyWeaponID;                                            // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UClass>                            LobbyWeaponInstance;                                      // 0x0208(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bVested;                                                  // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDropVolatility;                                          // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDropItem;                                             // 0x022A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x022B(0x0005) MISSED OFFSET
	struct FString                                     Note;                                                     // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                AIFullValue;                                              // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ItemClass;                                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CastableImplementClass;                                   // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTslItemDestructionBehavior*                 DestructionBehavior;                                      // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowSkin
// 0x0018 (0x0280 - 0x0268)
struct FItemTableRowSkin : public FItemTableRowBase
{
	bool                                               bAutoAction;                                              // 0x0268(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	struct FSkinParam                                  SkinParam;                                                // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemTableRowUsedByAction
// 0x0000 (0x0268 - 0x0268)
struct FItemTableRowUsedByAction : public FItemTableRowBase
{
	unsigned char                                      bStackable : 1;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUsable : 1;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsConsumable : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDisableSpawnInGame : 1;                                  // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                StackCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DefaultStackCount;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FText                                       ItemName;                                                 // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemCategory;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDetailedName;                                         // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ItemDescription;                                          // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ItemMaxInteractableDistance;                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCountMax;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpacePerItem;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TAssetPtr<class UStaticMesh>                       DroppedMesh;                                              // 0x0088(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DroppedMeshScale;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDropAsProjectile;                                        // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	TAssetPtr<class UThrowableItemDataAsset>           ProjectileConfig;                                         // 0x00B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          Icon;                                                     // 0x00D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UTexture>                          ToolTipIcon;                                              // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              IconSizeRatio;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ToolTipIconSizeRatio;                                     // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     DropSoundAk;                                              // 0x0118(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       DropAnimation;                                            // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     PickUpSoundAk;                                            // 0x0140(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       PickUpAnimationOverride;                                  // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UAkAudioEvent>                     InventoryPutSoundAk;                                      // 0x0168(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                SortPriority;                                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemCategory                                      Category;                                                 // 0x018C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	struct FName                                       SubCategory;                                              // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsToy;                                                   // 0x0198(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLobbyItem;                                             // 0x0199(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	int                                                LobbyItemID;                                              // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLobbyItemDesc                              LobbyItemDesc;                                            // 0x01A0(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsLobbyWeapon;                                           // 0x0200(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	int                                                LobbyWeaponID;                                            // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UClass>                            LobbyWeaponInstance;                                      // 0x0208(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bVested;                                                  // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDropVolatility;                                          // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDropItem;                                             // 0x022A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x022B(0x0005) MISSED OFFSET
	struct FString                                     Note;                                                     // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                AIFullValue;                                              // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ItemClass;                                                // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CastableImplementClass;                                   // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTslItemDestructionBehavior*                 DestructionBehavior;                                      // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowWeaponBase
// 0x0028 (0x0438 - 0x0410)
struct FItemTableRowWeaponBase : public FItemTableRowEquipment
{
	TAssetPtr<class UClass>                            WeaponType;                                               // 0x0410(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       WeaponTag;                                                // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ItemTableRowWeapon
// 0x0080 (0x04B8 - 0x0438)
struct FItemTableRowWeapon : public FItemTableRowWeaponBase
{
	int                                                AmmoCount;                                                // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoPerClip;                                              // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FWeaponAttachmentTagData>            AttachmentTagData;                                        // 0x0440(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                ForcedPrimarySlotIndex;                                   // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisablePrimaryWeaponSwap;                                // 0x0454(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0455(0x0003) MISSED OFFSET
	TAssetPtr<class UAkAudioEvent>                     DropAllAttachmentsSoundAk;                                // 0x0458(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     InventoryPutAllAttachmentsSoundAk;                        // 0x0478(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UAkAudioEvent>                     DropAndInventoryPutAttachmentsSoundAk;                    // 0x0498(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.ItemTableRowWeaponShield
// 0x0008 (0x04C0 - 0x04B8)
struct FItemTableRowWeaponShield : public FItemTableRowWeapon
{
	int                                                DebuffChargesCount;                                       // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.KeyIconDataRow
// 0x0068 (0x0070 - 0x0008)
struct FKeyIconDataRow : public FTableRowBase
{
	struct FStringAssetReference                       IconPC;                                                   // 0x0008(0x0010) (Edit, DisableEditOnInstance)
	struct FStringAssetReference                       IconXboxOne;                                              // 0x0018(0x0010) (Edit, DisableEditOnInstance)
	struct FStringAssetReference                       IconPS4;                                                  // 0x0028(0x0010) (Edit, DisableEditOnInstance)
	struct FStringAssetReference                       IconQuail;                                                // 0x0038(0x0010) (Edit, DisableEditOnInstance)
	struct FStringAssetReference                       IconSwitch;                                               // 0x0048(0x0010) (Edit, DisableEditOnInstance)
	struct FStringAssetReference                       IconThirdParty;                                           // 0x0058(0x0010) (Edit, DisableEditOnInstance)
	float                                              Ratio;                                                    // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.NearRespawnActorList
// 0x0020
struct FNearRespawnActorList
{
	TArray<class ACaptureAreaActor*>                   RespawnActors;                                            // 0x0000(0x0010) (ZeroConstructor)
	TArray<float>                                      Distances;                                                // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.CharacterCostumeData
// 0x0010
struct FCharacterCostumeData
{
	EEquipSlotID                                       SlotName;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       AvatarItemID;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIAppearanceData
// 0x0018 (0x0020 - 0x0008)
struct FAIAppearanceData : public FTableRowBase
{
	int                                                Weight;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGender                                            GenterType;                                               // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	TArray<struct FCharacterCostumeData>               CostumeList;                                              // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.HoldInputHelper
// 0x0018
struct FHoldInputHelper
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FName                                       ActionName;                                               // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.TeamScoreData
// 0x0060
struct FTeamScoreData
{
	TMap<int, int>                                     TeamIdToIndex;                                            // 0x0000(0x0050) (ZeroConstructor)
	TArray<int>                                        TeamScores;                                               // 0x0050(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslBpRewardLogicDataTableRow_ScoreBased
// 0x0010 (0x0018 - 0x0008)
struct FTslBpRewardLogicDataTableRow_ScoreBased : public FTableRowBase
{
	float                                              TSRewardByMinute;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TSDistributionRatio;                                      // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreDistributionRatio;                                   // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              QuitterTSRewardByMinute;                                  // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AutoCompleteVehiclePaths
// 0x0020
struct FAutoCompleteVehiclePaths
{
	struct FString                                     Kind;                                                     // 0x0000(0x0010) (Edit, ZeroConstructor, Config)
	struct FString                                     path;                                                     // 0x0010(0x0010) (Edit, ZeroConstructor, Config)
};

// ScriptStruct TslGame.ScmHitbox
// 0x0050
struct FScmHitbox
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};

// ScriptStruct TslGame.ScmStaticCollisionGroup
// 0x0004
struct FScmStaticCollisionGroup
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.BoundingSpherePersistentChecker
// 0x05B0
struct FBoundingSpherePersistentChecker
{
	unsigned char                                      UnknownData00[0x5B0];                                     // 0x0000(0x05B0) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCapsulePersistentChecker
// 0x002C
struct FSimpleCapsulePersistentChecker
{
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0000(0x002C) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCapsuleCheck
// 0x0028
struct FSimpleCapsuleCheck
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCollisionLine
// 0x003C
struct FSimpleCollisionLine
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) MISSED OFFSET
};

// ScriptStruct TslGame.SimpleCollisionHull
// 0x0068
struct FSimpleCollisionHull
{
	unsigned char                                      UnknownData00[0x68];                                      // 0x0000(0x0068) MISSED OFFSET
};

// ScriptStruct TslGame.AirEngineState
// 0x002C
struct FAirEngineState
{
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0000(0x002C) MISSED OFFSET
};

// ScriptStruct TslGame.AirVehicleState
// 0x0038
struct FAirVehicleState
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0000(0x0038) MISSED OFFSET
};

// ScriptStruct TslGame.BlueZoneClientExpandData
// 0x0014
struct FBlueZoneClientExpandData
{
	float                                              ElapsedTime;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BeginRadius;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     BeginPosition;                                            // 0x0008(0x000C) (IsPlainOldData)
};

// ScriptStruct TslGame.AIEquipSpawnItem
// 0x0018
struct FAIEquipSpawnItem
{
	EAIEquipSpawnItemType                              ItemType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Item;                                                     // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AIEquipSpawnGroup
// 0x0018
struct FAIEquipSpawnGroup
{
	int                                                SpawnRandomWeight;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FAIEquipSpawnItem>                   Item;                                                     // 0x0008(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.AIEquipSpawnGroupData
// 0x0018 (0x0020 - 0x0008)
struct FAIEquipSpawnGroupData : public FTableRowBase
{
	int                                                GamePhaseIndex;                                           // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightTime;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAIEquipSpawnGroup>                  AIEquipSpawnGroupList;                                    // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.TslMusicData
// 0x0028 (0x0030 - 0x0008)
struct FTslMusicData : public FTableRowBase
{
	int                                                CategoryNum;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PriorityInCategory;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     MusicTitleKey;                                            // 0x0010(0x0010) (Edit, ZeroConstructor)
	struct FString                                     MusicTitleMsgId;                                          // 0x0020(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.ItemRequestResponse
// 0x0020
struct FItemRequestResponse
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.ItemRequest
// 0x0018
struct FItemRequest
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.LivingThingNonRepInfo
// 0x0008
struct FLivingThingNonRepInfo
{
	ELivingThingThreatLevel                            ThreatLevel;                                              // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LastServerTimeSeconds;                                    // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PrintStringParams
// 0x0018
struct FPrintStringParams
{
	struct FString                                     String;                                                   // 0x0000(0x0010) (ZeroConstructor)
	float                                              Duration;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0014(0x0004) (IsPlainOldData)
};

// ScriptStruct TslGame.Print3DStringParams
// 0x0010 (0x0028 - 0x0018)
struct FPrint3DStringParams : public FPrintStringParams
{
	struct FVector                                     TextLocation;                                             // 0x0018(0x000C) (IsPlainOldData)
	float                                              Scale;                                                    // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DrawCapsuleParams
// 0x002C
struct FDrawCapsuleParams
{
	struct FVector                                     Origin;                                                   // 0x0000(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (IsPlainOldData)
	float                                              Radius;                                                   // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0020(0x0004) (IsPlainOldData)
	float                                              DrawTime;                                                 // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Width;                                                    // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DrawSphereParams
// 0x001C
struct FDrawSphereParams
{
	struct FVector                                     Origin;                                                   // 0x0000(0x000C) (IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0010(0x0004) (IsPlainOldData)
	float                                              DrawTime;                                                 // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Width;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DrawLineParams
// 0x0024
struct FDrawLineParams
{
	struct FVector                                     Start;                                                    // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     End;                                                      // 0x000C(0x000C) (IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0018(0x0004) (IsPlainOldData)
	float                                              DrawTime;                                                 // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Width;                                                    // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslPhysicalMaterialDamageTableRow
// 0x0018 (0x0020 - 0x0008)
struct FTslPhysicalMaterialDamageTableRow : public FTableRowBase
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FPhysicalMaterialDamageInfo                 DamageInfo;                                               // 0x0010(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslPlatoonSupportDataTableRow
// 0x0020 (0x0028 - 0x0008)
struct FTslPlatoonSupportDataTableRow : public FTableRowBase
{
	EPlatoonSupportRequestType                         Type;                                                     // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FStringClassReference                       HandlerClassRef;                                          // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	float                                              CooldownTime;                                             // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PendingSpawnActorInCaptureWorld
// 0x0050
struct FPendingSpawnActorInCaptureWorld
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};

// ScriptStruct TslGame.TslRadioMessageCategoryInfo
// 0x0018 (0x0020 - 0x0008)
struct FTslRadioMessageCategoryInfo : public FTableRowBase
{
	ERadioMessageCategory                              Category;                                                 // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     StringKey;                                                // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.RadioMessageStringKey
// 0x0018
struct FRadioMessageStringKey
{
	ERadioMessageCategory                              Category;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     StringKey;                                                // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.Lv3ItemInfo
// 0x0018
struct FLv3ItemInfo
{
	struct FStringClassReference                       ItemStringReference;                                      // 0x0000(0x0010) (Edit)
	class UClass*                                      ItemClass;                                                // 0x0010(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct TslGame.TslTimeDilationCommand
// 0x000C
struct FTslTimeDilationCommand
{
	struct FVector2D                                   RealTime;                                                 // 0x0000(0x0008) (IsPlainOldData)
	float                                              TimeDilation;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslTrainPostPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FTslTrainPostPhysicsTickFunction : public FTickFunction
{
	TEnumAsByte<ETickingGroup>                         TickGroup;                                                // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETickingGroup>                         EndTickGroup;                                             // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	unsigned char                                      bTickEvenWhenPaused : 1;                                  // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCanEverTick : 1;                                         // 0x000C(0x0001)
	unsigned char                                      bStartWithTickEnabled : 1;                                // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowTickOnDedicatedServer : 1;                          // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x33];                                      // 0x000D(0x0033) MISSED OFFSET
	float                                              TickInterval;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0044(0x0014) MISSED OFFSET
};

// ScriptStruct TslGame.TslArenaLoadoutItemRow
// 0x0048 (0x0050 - 0x0008)
struct FTslArenaLoadoutItemRow : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETslArenaLoadoutItemCategory                       Category;                                                 // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                Count;                                                    // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Price;                                                    // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       AmmoItemID;                                               // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoCount;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ScopeID;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LoadoutAvailable;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              WeaponDamage;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponEffectRange;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponAccuracy;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponFiringRate;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.RoundResultModuleData
// 0x0010
struct FRoundResultModuleData
{
	bool                                               bWin;                                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowResult;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bElim;                                                    // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bLast;                                                    // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFinal;                                                   // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                NextCount;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PreviousCount;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslKeyHintSet
// 0x0028 (0x0030 - 0x0008)
struct FTslKeyHintSet : public FTableRowBase
{
	int                                                Priority;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              Conditions;                                               // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTslKeyHintInfo>                     HintInfos;                                                // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ActionArray
// 0x0010
struct FActionArray
{
	TArray<struct FName>                               ActionArray;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.ConflictActionList
// 0x0068 (0x0070 - 0x0008)
struct FConflictActionList : public FTableRowBase
{
	int                                                PrimaryKey;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FName>                               BasicTabAction;                                           // 0x0010(0x0010) (Edit, ZeroConstructor)
	TMap<struct FString, struct FActionArray>          ConflictActionList;                                       // 0x0020(0x0050) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.EssentialActionsOnKeyBinding
// 0x0038 (0x0040 - 0x0008)
struct FEssentialActionsOnKeyBinding : public FTableRowBase
{
	TArray<struct FName>                               ActionNames;                                              // 0x0008(0x0010) (Edit, ZeroConstructor)
	struct FText                                       PopupText;                                                // 0x0018(0x0018) (Edit)
	struct FString                                     TabString;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.AllCustomActionChunk
// 0x0020
struct FAllCustomActionChunk
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.VisibleActionChunk
// 0x0030
struct FVisibleActionChunk
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct TslGame.ActionAndUnAvailableKeys
// 0x0018 (0x0020 - 0x0008)
struct FActionAndUnAvailableKeys : public FTableRowBase
{
	struct FName                                       ActionName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FKey>                                KeyArray;                                                 // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.AxisNameAndScale
// 0x0010
struct FAxisNameAndScale
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Scale;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.KeyGuideDataRow
// 0x0068 (0x0070 - 0x0008)
struct FKeyGuideDataRow : public FTableRowBase
{
	struct FString                                     CategoryId;                                               // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                ColumnNum;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FText                                       ActionDesc;                                               // 0x0020(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FName>                               MappedActions;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAxisNameAndScale>                   MappedAxies;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bDummy;                                                   // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<struct FTslInputKey>                        DummyInputKeys;                                           // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.FBRClassSpawnedItemData
// 0x0010
struct FFBRClassSpawnedItemData
{
	TArray<struct FName>                               ItemIDs;                                                  // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.DamageInfo
// 0x0090
struct FDamageInfo
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0000(0x0090) MISSED OFFSET
};

// ScriptStruct TslGame.RandomBRSubtitleDataRow
// 0x0040 (0x0048 - 0x0008)
struct FRandomBRSubtitleDataRow : public FTableRowBase
{
	struct FString                                     SubtitleKey;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     BlueZoneSubtitleKey;                                      // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ItemSpawnSubtitleKey;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     VehicleSpawnSubtitleKey;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TestParachutingTestSpots
// 0x0010
struct FTestParachutingTestSpots
{
	TArray<struct FVector2D>                           TestSpots;                                                // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.AmmoAndCount
// 0x0010
struct FAmmoAndCount
{
	struct FName                                       AmmoItemID;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.PlatformFriendStateUpdateInfo
// 0x0018
struct FPlatformFriendStateUpdateInfo
{
	struct FString                                     UniqueId;                                                 // 0x0000(0x0010) (ZeroConstructor)
	bool                                               bMyFollower;                                              // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIAmFollowing;                                            // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.CommunicateTargetInfo
// 0x0030
struct FCommunicateTargetInfo
{
	struct FString                                     UniqueId;                                                 // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Nickname;                                                 // 0x0010(0x0010) (ZeroConstructor)
	EOutGamePlatformProvider                           PlatformData;                                             // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	struct FCommunicationPrivilege                     CommunicationPrivileges;                                  // 0x0024(0x0008)
	bool                                               bMyFollower;                                              // 0x002C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIAmFollowing;                                            // 0x002D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.ConsoleMemoryTrackingLogElement
// 0x0020
struct FConsoleMemoryTrackingLogElement
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.ConsoleMemoryTrackingLog
// 0x0020
struct FConsoleMemoryTrackingLog
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FConsoleMemoryTrackingLogElement>    Logs;                                                     // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.GameModeAIPlayerParams
// 0x0098
struct FGameModeAIPlayerParams
{
	struct FString                                     PlayerName;                                               // 0x0000(0x0010) (Edit, ZeroConstructor)
	uint32_t                                           PlayerKey;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TeamId;                                                   // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsGM;                                                    // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Gender;                                                   // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAIPlayer;                                                // 0x001A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x001B(0x0005) MISSED OFFSET
	TArray<int>                                        WeaponAvatarList;                                         // 0x0020(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        EquipmentAvatarList;                                      // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        VehicleAvatarList;                                        // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     Emotes;                                                   // 0x0050(0x0010) (Edit, ZeroConstructor)
	struct FName                                       CurrentPlayerState;                                       // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CurrentCharacterState;                                    // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SyncedTimestamp;                                          // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DestinyValue;                                             // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WarmScore;                                                // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RatingScore;                                              // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsObserver;                                              // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PlatformGender;                                           // 0x0081(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
	struct FString                                     Nation;                                                   // 0x0088(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.ItemClassAndCountPair
// 0x0010
struct FItemClassAndCountPair
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslStringClass
// 0x0010
struct FTslStringClass
{
	struct FStringClassReference                       ObjectClass;                                              // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct TslGame.TslKeyIconData
// 0x0030
struct FTslKeyIconData
{
	struct FKey                                        Key;                                                      // 0x0000(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UTexture*                                    KeyIcon;                                                  // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    KeyIcon_PS;                                               // 0x0020(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconRatio;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslMissionUpdate
// 0x0018
struct FTslMissionUpdate
{
	struct FString                                     MissionId;                                                // 0x0000(0x0010) (ZeroConstructor)
	int                                                UpdatedProgress;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslUserProfile
// 0x0018
struct FTslUserProfile
{
	struct FString                                     PlayerNetId;                                              // 0x0000(0x0010) (ZeroConstructor)
	float                                              TotalPlayTime_Sec;                                        // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.FixHighBitCounter
// 0x000C
struct FFixHighBitCounter
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	int                                                Counter;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WeatherChangeWeight
// 0x0008
struct FWeatherChangeWeight
{
	EWeatherChange                                     newWeather;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Weight;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslOutGameCloudRequestTimeoutDesc
// 0x00A8
struct FTslOutGameCloudRequestTimeoutDesc
{
	ETslOutGameCloudRequestType                        RequestType;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       DisplayText;                                              // 0x0008(0x0018)
	float                                              WaitingTime;                                              // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ResultMsgTime;                                            // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FText                                       GeneralSuccessMessage;                                    // 0x0028(0x0018)
	struct FText                                       GeneralFailureMessage;                                    // 0x0040(0x0018)
	TMap<ETslOutGameCloudRequestErrorType, struct FText> ErrorMessages;                                            // 0x0058(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.LostConnectionToHostLog
// 0x0020
struct FLostConnectionToHostLog
{
	struct FString                                     AccountId;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     LoadingState;                                             // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslReportedInfo
// 0x0090
struct FTslReportedInfo
{
	struct FString                                     MatchId;                                                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FTslReportUserInfo                          UserInfo;                                                 // 0x0010(0x0048) (Edit, BlueprintVisible)
	struct FString                                     Cause;                                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FString>                             DetailCauseList;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     ReportedSessionType;                                      // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              MatchElapsedTimeSec;                                      // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemV2DataRow
// 0x0000 (0x0008 - 0x0008)
struct FItemV2DataRow : public FTableRowBase
{

};

// ScriptStruct TslGame.WuLogCharacter
// 0x0078
struct FWuLogCharacter
{
	struct FString                                     Name;                                                     // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     NetId;                                                    // 0x0010(0x0010) (ZeroConstructor)
	int                                                TeamId;                                                   // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Health;                                                   // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0028(0x000C) (IsPlainOldData)
	int                                                Ranking;                                                  // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Platform;                                                 // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     AccountId;                                                // 0x0040(0x0010) (ZeroConstructor)
	bool                                               IsInBlueZone;                                             // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsInRedZone;                                              // 0x0051(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TArray<struct FString>                             Zone;                                                     // 0x0058(0x0010) (ZeroConstructor)
	struct FString                                     MovementBase;                                             // 0x0068(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogUsedBlueBlockerAndReturnedToSafeZone
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogUsedBlueBlockerAndReturnedToSafeZone : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	int                                                NumTimesUsedBlueBlockerAndReturnedToSafeZone;             // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogBlueBlockerAbsorbBlueZoneDamage
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogBlueBlockerAbsorbBlueZoneDamage : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	float                                              DamageAbsorbed;                                           // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumTimesBlueZoneAbsorbed;                                 // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogHelmetHide
// 0x0008 (0x0068 - 0x0060)
struct FWuLogHelmetHide : public FLogBase
{
	struct FLogCommon                                  common;                                                   // 0x0008(0x0028)
	int                                                _V;                                                       // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     _D;                                                       // 0x0038(0x0010) (ZeroConstructor)
	struct FString                                     _T;                                                       // 0x0048(0x0010) (ZeroConstructor)
	bool                                               _U;                                                       // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0059(0x000F) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogVoiceChatUseage
// 0x0030 (0x0090 - 0x0060)
struct FWuLogVoiceChatUseage : public FLogBase
{
	struct FString                                     AccountId;                                                // 0x0060(0x0010) (ZeroConstructor)
	TArray<struct FWuStringFloatPair>                  Option;                                                   // 0x0070(0x0010) (ZeroConstructor)
	float                                              PushTime;                                                 // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimeSpent;                                                // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PlatformProvider;                                         // 0x0088(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuEventDamage
// 0x0058 (0x0068 - 0x0010)
struct FWuEventDamage : public FGameEventBase
{
	bool                                               IsDetailStatus;                                           // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsVictimMe;                                               // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              Damage;                                                   // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     DamageTypeCategory;                                       // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     AttackerName;                                             // 0x0028(0x0010) (ZeroConstructor)
	struct FVector                                     AttackerLocation;                                         // 0x0038(0x000C) (IsPlainOldData)
	int                                                AttackerTeamId;                                           // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VictimName;                                               // 0x0048(0x0010) (ZeroConstructor)
	struct FVector                                     VictimLocation;                                           // 0x0058(0x000C) (IsPlainOldData)
	int                                                VictimTeamId;                                             // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuEventKill
// 0x0078 (0x0088 - 0x0010)
struct FWuEventKill : public FGameEventBase
{
	bool                                               IsDetailStatus;                                           // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsKillerMe;                                               // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
	struct FString                                     KillerName;                                               // 0x0018(0x0010) (ZeroConstructor)
	struct FVector                                     KillerLocation;                                           // 0x0028(0x000C) (IsPlainOldData)
	int                                                KillerTeamId;                                             // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsVictimMe;                                               // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     VictimName;                                               // 0x0040(0x0010) (ZeroConstructor)
	struct FVector                                     VictimLocation;                                           // 0x0050(0x000C) (IsPlainOldData)
	int                                                VictimTeamId;                                             // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     DamageCauser;                                             // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     DamageReason;                                             // 0x0070(0x0010) (ZeroConstructor)
	bool                                               IsGroggy;                                                 // 0x0080(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsStealKilled;                                            // 0x0081(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.WuEventDataPlayerResult
// 0x0018
struct FWuEventDataPlayerResult
{
	struct FString                                     PlayerName;                                               // 0x0000(0x0010) (ZeroConstructor)
	int                                                KillCount;                                                // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuEventDataTeamResult
// 0x0018
struct FWuEventDataTeamResult
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWuEventDataPlayerResult>            Members;                                                  // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuEventMatchResult
// 0x0028 (0x0038 - 0x0010)
struct FWuEventMatchResult : public FGameEventBase
{
	struct FString                                     MatchId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	int                                                StartPlayerCount;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartTeamCount;                                           // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWuEventDataTeamResult>              Teams;                                                    // 0x0028(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuEventPlayerMatchResult
// 0x0038 (0x0048 - 0x0010)
struct FWuEventPlayerMatchResult : public FGameEventBase
{
	struct FString                                     MatchId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	int                                                StartPlayerCount;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartTeamCount;                                           // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0028(0x0010) (ZeroConstructor)
	int                                                Ranking;                                                  // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                KillCount;                                                // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                HeadShotCount;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GivenDamages;                                             // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuEventDataPlayerInfo
// 0x0050
struct FWuEventDataPlayerInfo
{
	struct FString                                     PlayerName;                                               // 0x0000(0x0010) (ZeroConstructor)
	int                                                TeamId;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0014(0x000C) (IsPlainOldData)
	float                                              Health;                                                   // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BoostGauge;                                               // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     State;                                                    // 0x0028(0x0010) (ZeroConstructor)
	struct FString                                     ArmedWeapon;                                              // 0x0038(0x0010) (ZeroConstructor)
	int                                                ArmedAmmoCount;                                           // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InventoryAmmoCount;                                       // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuEventMatchStatus
// 0x00B8 (0x00C8 - 0x0010)
struct FWuEventMatchStatus : public FGameEventBase
{
	bool                                               IsDetailStatus;                                           // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     MatchId;                                                  // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     TeamMode;                                                 // 0x0028(0x0010) (ZeroConstructor)
	struct FString                                     CameraMode;                                               // 0x0038(0x0010) (ZeroConstructor)
	struct FString                                     MatchState;                                               // 0x0048(0x0010) (ZeroConstructor)
	int                                                ElapsedTime;                                              // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BlueZonePhase;                                            // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsBlueZoneMoving;                                         // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              BlueZoneRadius;                                           // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     BlueZoneLocation;                                         // 0x0068(0x000C) (IsPlainOldData)
	float                                              WhiteZoneRadius;                                          // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     WhiteZoneLocation;                                        // 0x0078(0x000C) (IsPlainOldData)
	float                                              RedZoneRadius;                                            // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     RedZoneLocation;                                          // 0x0088(0x000C) (IsPlainOldData)
	float                                              BlackZoneRadius;                                          // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     BlackZoneLocation;                                        // 0x0098(0x000C) (IsPlainOldData)
	int                                                StartPlayerCount;                                         // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AlivePlayerCount;                                         // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartTeamCount;                                           // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AliveTeamCount;                                           // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	TArray<struct FWuEventDataPlayerInfo>              PlayerInfos;                                              // 0x00B8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuEventPlayerStatus
// 0x0090 (0x00A0 - 0x0010)
struct FWuEventPlayerStatus : public FGameEventBase
{
	struct FString                                     MatchId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     MyPlayerName;                                             // 0x0020(0x0010) (ZeroConstructor)
	bool                                               IsSpetating;                                              // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FVector                                     SpectatingCameraLocation;                                 // 0x0034(0x000C) (IsPlainOldData)
	struct FWuEventDataPlayerInfo                      CurrentPlayerInfo;                                        // 0x0040(0x0050)
	TArray<struct FWuEventDataPlayerInfo>              TeamMatesInfo;                                            // 0x0090(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuEventMatchLeave
// 0x0010 (0x0020 - 0x0010)
struct FWuEventMatchLeave : public FGameEventBase
{
	struct FString                                     MatchId;                                                  // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuEventMatchJoin
// 0x0038 (0x0048 - 0x0010)
struct FWuEventMatchJoin : public FGameEventBase
{
	struct FString                                     MatchId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     TeamMode;                                                 // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     CameraMode;                                               // 0x0030(0x0010) (ZeroConstructor)
	bool                                               IsDetailObserver;                                         // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogArenaEndData
// 0x0008
struct FWuLogArenaEndData
{
	int                                                ArenaID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinnerTeamId;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogCharacterWeapons
// 0x00B0
struct FWuLogCharacterWeapons
{
	struct FWuLogCharacter                             Character;                                                // 0x0000(0x0078)
	struct FString                                     PrimaryWeaponFirst;                                       // 0x0078(0x0010) (ZeroConstructor)
	struct FString                                     PrimaryWeaponSecond;                                      // 0x0088(0x0010) (ZeroConstructor)
	struct FString                                     SecondaryWeapon;                                          // 0x0098(0x0010) (ZeroConstructor)
	int                                                SpawnKitIndex;                                            // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogTeamInfoData
// 0x0030
struct FWuLogTeamInfoData
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Chances;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalKills;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalMoney;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     KeyPlayer;                                                // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FWuLogCharacterWeapons>              Characters;                                               // 0x0020(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaRoundEnd
// 0x0028 (0x0088 - 0x0060)
struct FWuLogArenaRoundEnd : public FLogBase
{
	int                                                Round;                                                    // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsLastRound;                                              // 0x0064(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	TArray<struct FWuLogArenaEndData>                  Arenas;                                                   // 0x0068(0x0010) (ZeroConstructor)
	TArray<struct FWuLogTeamInfoData>                  Teams;                                                    // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaStartData
// 0x0018
struct FWuLogArenaStartData
{
	int                                                ArenaID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FWuLogTeamInfoData>                  Teams;                                                    // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaRoundStart
// 0x0018 (0x0078 - 0x0060)
struct FWuLogArenaRoundStart : public FLogBase
{
	int                                                Round;                                                    // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsLastRound;                                              // 0x0064(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	TArray<struct FWuLogArenaStartData>                Arenas;                                                   // 0x0068(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaLoadoutBuy
// 0x0038 (0x0098 - 0x0060)
struct FWuLogArenaLoadoutBuy : public FLogBase
{
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (ZeroConstructor)
	int                                                Sum;                                                      // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemsNum;                                                 // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ItemID;                                                   // 0x0078(0x0010) (ZeroConstructor)
	struct FString                                     ReplacedItemId;                                           // 0x0088(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaCurrencyChange
// 0x0028 (0x0088 - 0x0060)
struct FWuLogArenaCurrencyChange : public FLogBase
{
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (ZeroConstructor)
	int                                                CurrencyDif;                                              // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FString                                     Source;                                                   // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaScreenOpen
// 0x0020 (0x0080 - 0x0060)
struct FWuLogArenaScreenOpen : public FLogBase
{
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     ScreenName;                                               // 0x0070(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArena
// 0x0024
struct FWuLogArena
{
	struct FVector                                     SafetyZonePosition;                                       // 0x0000(0x000C) (IsPlainOldData)
	float                                              SafetyZoneRadius;                                         // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PoisonGasWarningPosition;                                 // 0x0010(0x000C) (IsPlainOldData)
	float                                              PoisonGasWarningRadius;                                   // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ArenaID;                                                  // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogArenaGameState
// 0x0028 (0x0088 - 0x0060)
struct FWuLogArenaGameState : public FLogBase
{
	int                                                ElapsedTime;                                              // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAliveTeams;                                            // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumJoinPlayers;                                           // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumStartPlayers;                                          // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAlivePlayers;                                          // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Round;                                                    // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWuLogArena>                         Arenas;                                                   // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogArenaGameStatePeriodic
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogArenaGameStatePeriodic : public FLogBase
{
	struct FWuLogArenaGameState                        ArenaGameState;                                           // 0x0060(0x0088)
};

// ScriptStruct TslGame.WuLogLobbyMusic
// 0x0010 (0x0070 - 0x0060)
struct FWuLogLobbyMusic : public FLogBase
{
	struct FString                                     MusicEventName;                                           // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogBZBUsedBlueBlockerAndReturnedToSafeZone
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogBZBUsedBlueBlockerAndReturnedToSafeZone : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	int                                                didUseBZBAndReturnedToSafeZone;                           // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogBZBAbsorbBlueZoneDamage
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogBZBAbsorbBlueZoneDamage : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	float                                              DamageAbsorbed;                                           // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumTimesBlueZoneAbsorbed;                                 // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLostPacketData
// 0x000C
struct FWuLostPacketData
{
	int                                                NumLoss;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SizeBitsPlain;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SizeBitsEncryped;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLostBunchData
// 0x0018
struct FWuLostBunchData
{
	int                                                NumSent;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumLoss;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Content;                                                  // 0x0008(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogOutPacketLoss
// 0x0070 (0x00D0 - 0x0060)
struct FWuLogOutPacketLoss : public FLogBase
{
	struct FString                                     LeagueType;                                               // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     Name;                                                     // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0090(0x0010) (ZeroConstructor)
	float                                              ElapsedTimeSec;                                           // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumOutBunch;                                              // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumOutPacket;                                             // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumOutPacketNaked;                                        // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWuLostPacketData>                   NakedPacketDataList;                                      // 0x00B0(0x0010) (ZeroConstructor)
	TArray<struct FWuLostBunchData>                    NakedBunchDataList;                                       // 0x00C0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogParachuteFollowReleaseByHoldKey
// 0x0078 (0x00D8 - 0x0060)
struct FWuLogParachuteFollowReleaseByHoldKey : public FLogBase
{
	struct FWuLogCharacter                             UserInfo;                                                 // 0x0060(0x0078)
};

// ScriptStruct TslGame.WuLogParachuteFollow
// 0x00A0 (0x0100 - 0x0060)
struct FWuLogParachuteFollow : public FLogBase
{
	struct FWuLogCharacter                             UserInfo;                                                 // 0x0060(0x0078)
	bool                                               IsFollower;                                               // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	int                                                FollowerNum;                                              // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     TargetName;                                               // 0x00E0(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x00F0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerScore
// 0x00C0 (0x0120 - 0x0060)
struct FWuLogPlayerScore : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	int                                                KillScore;                                                // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                KillCount;                                                // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DeathScore;                                               // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DeathCount;                                               // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AssistScore;                                              // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AssistCount;                                              // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ChainKillScore;                                           // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ChainKillCount;                                           // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinRoundScore;                                            // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinRoundCount;                                            // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DefeatRoundScore;                                         // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DefeatRoundCount;                                         // 0x0104(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinMatchScore;                                            // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinMatchCount;                                            // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DefeatMatchScore;                                         // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DefeatMatchCount;                                         // 0x0114(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalScore;                                               // 0x0118(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerMovementBaseChanged
// 0x00A0 (0x0100 - 0x0060)
struct FWuLogPlayerMovementBaseChanged : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     NewMovementBase;                                          // 0x00D8(0x0010) (ZeroConstructor)
	struct FString                                     OldMovementBase;                                          // 0x00E8(0x0010) (ZeroConstructor)
	float                                              MovedDistance;                                            // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerHealed
// 0x0118 (0x0178 - 0x0060)
struct FWuLogPlayerHealed : public FLogBase
{
	struct FWuLogCharacter                             Healer;                                                   // 0x0060(0x0078)
	struct FWuLogCharacter                             Target;                                                   // 0x00D8(0x0078)
	int                                                HealId;                                                   // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealAmount;                                               // 0x0154(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     HealCauserName;                                           // 0x0158(0x0010) (ZeroConstructor)
	struct FString                                     HealTypeCategory;                                         // 0x0168(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerBuffed
// 0x0118 (0x0178 - 0x0060)
struct FWuLogPlayerBuffed : public FLogBase
{
	struct FWuLogCharacter                             Buffer;                                                   // 0x0060(0x0078)
	struct FWuLogCharacter                             Target;                                                   // 0x00D8(0x0078)
	int                                                BuffId;                                                   // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	struct FString                                     BuffCauserName;                                           // 0x0158(0x0010) (ZeroConstructor)
	struct FString                                     BuffType;                                                 // 0x0168(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogItem
// 0x0050
struct FWuLogItem
{
	struct FString                                     ItemID;                                                   // 0x0000(0x0010) (ZeroConstructor)
	int                                                StackCount;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     Category;                                                 // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     SubCategory;                                              // 0x0028(0x0010) (ZeroConstructor)
	TArray<struct FString>                             AttachedItems;                                            // 0x0038(0x0010) (ZeroConstructor)
	bool                                               HasRandomAttachments;                                     // 0x0048(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsUnique;                                                 // 0x0049(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogItemSkillSpawn
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogItemSkillSpawn : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogCraftResult
// 0x0100 (0x0160 - 0x0060)
struct FWuLogCraftResult : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	bool                                               SUCCESS;                                                  // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	struct FString                                     FailedReason;                                             // 0x00E0(0x0010) (ZeroConstructor)
	struct FString                                     CraftItem;                                                // 0x00F0(0x0010) (ZeroConstructor)
	struct FWuLogItem                                  ItemResult;                                               // 0x0100(0x0050)
	TArray<struct FWuLogItem>                          Materials;                                                // 0x0150(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogConnectionTimeOutError
// 0x0040 (0x00A0 - 0x0060)
struct FWuLogConnectionTimeOutError : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	float                                              DriverTime;                                               // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Threshold;                                                // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     RemoteAddress;                                            // 0x0078(0x0010) (ZeroConstructor)
	bool                                               IsServer;                                                 // 0x0088(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FString                                     UniqueId;                                                 // 0x0090(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogServerInfo
// 0x0090 (0x00F0 - 0x0060)
struct FWuLogServerInfo : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     InstanceId;                                               // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     PublicIp;                                                 // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     InstanceType;                                             // 0x0090(0x0010) (ZeroConstructor)
	struct FString                                     GameServerVersion;                                        // 0x00A0(0x0010) (ZeroConstructor)
	struct FString                                     Weather;                                                  // 0x00B0(0x0010) (ZeroConstructor)
	struct FString                                     MapName;                                                  // 0x00C0(0x0010) (ZeroConstructor)
	struct FString                                     StartTimeStamp;                                           // 0x00D0(0x0010) (ZeroConstructor)
	struct FString                                     EndTimeStamp;                                             // 0x00E0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPing
// 0x0060 (0x00C0 - 0x0060)
struct FWuLogPing : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     LeagueType;                                               // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0080(0x0010) (ZeroConstructor)
	float                                              MissRate;                                                 // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ReliableDelay;                                            // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              UnreliableDelay;                                          // 0x0098(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FString                                     Nickname;                                                 // 0x00A0(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x00B0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogNickname
// 0x0050 (0x00B0 - 0x0060)
struct FWuLogNickname : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     PlayerNetId;                                              // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     Nickname;                                                 // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     Ip;                                                       // 0x0090(0x0010) (ZeroConstructor)
	struct FString                                     ClientVersion;                                            // 0x00A0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogLocation
// 0x0048 (0x00A8 - 0x0060)
struct FWuLogLocation : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0070(0x0010) (ZeroConstructor)
	float                                              LocDiff;                                                  // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AllowedDiff;                                              // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x0088(0x000C) (IsPlainOldData)
	float                                              Speed;                                                    // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     AccountId;                                                // 0x0098(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogFps
// 0x0040 (0x00A0 - 0x0060)
struct FWuLogFps : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     LeagueType;                                               // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0080(0x0010) (ZeroConstructor)
	int                                                ServerFps;                                                // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AlivePlayers;                                             // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                JoinPlayers;                                              // 0x0098(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x009C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogVehicle
// 0x0058
struct FWuLogVehicle
{
	struct FString                                     VehicleType;                                              // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     SpawnId;                                                  // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     VehicleId;                                                // 0x0020(0x0010) (ZeroConstructor)
	int                                                VehicleUniqueId;                                          // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SeatIndex;                                                // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealthPercent;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FeulPercent;                                              // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RotationPitch;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AltitudeAbs;                                              // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AltitudeRel;                                              // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Velocity;                                                 // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsWheelsInAir;                                            // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsInWaterVolume;                                          // 0x0051(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsEngineOn;                                               // 0x0052(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogVehicleInteraction
// 0x00F0 (0x0150 - 0x0060)
struct FWuLogVehicleInteraction : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00D8(0x0058)
	struct FString                                     EventType;                                                // 0x0130(0x0010) (ZeroConstructor)
	TArray<struct FWuStringIntPair>                    EventInfo;                                                // 0x0140(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogObjectInteraction
// 0x00A8 (0x0108 - 0x0060)
struct FWuLogObjectInteraction : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     ObjectType;                                               // 0x00D8(0x0010) (ZeroConstructor)
	struct FString                                     ObjectTypeStatus;                                         // 0x00E8(0x0010) (ZeroConstructor)
	TArray<struct FWuStringIntPair>                    ObjectTypeAdditionalInfo;                                 // 0x00F8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogFlaregunCalled
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogFlaregunCalled : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	bool                                               IsInWhiteZone;                                            // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsCalledSuccessfully;                                     // 0x00D9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00DA(0x0006) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerDeath
// 0x0098 (0x00F8 - 0x0060)
struct FWuLogPlayerDeath : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	TArray<struct FString>                             Weapons;                                                  // 0x00D8(0x0010) (ZeroConstructor)
	TArray<struct FString>                             Equips;                                                   // 0x00E8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogXboxUnautorizedDevice
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogXboxUnautorizedDevice : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	int                                                KillCount;                                                // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuDdosInfo
// 0x0028
struct FWuDdosInfo
{
	struct FString                                     ErrorType;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Ip;                                                       // 0x0010(0x0010) (ZeroConstructor)
	int                                                Port;                                                     // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogNetDriverError
// 0x0010 (0x0070 - 0x0060)
struct FWuLogNetDriverError : public FLogBase
{
	TArray<struct FWuDdosInfo>                         Infos;                                                    // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogMissionListOpen
// 0x0078 (0x00D8 - 0x0060)
struct FWuLogMissionListOpen : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
};

// ScriptStruct TslGame.WuLogWeaponFireCount
// 0x0090 (0x00F0 - 0x0060)
struct FWuLogWeaponFireCount : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     WeaponId;                                                 // 0x00D8(0x0010) (ZeroConstructor)
	int                                                FireCount;                                                // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogRedZoneEnded
// 0x0010 (0x0070 - 0x0060)
struct FWuLogRedZoneEnded : public FLogBase
{
	TArray<struct FWuLogCharacter>                     Drivers;                                                  // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogParachuteLanding
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogParachuteLanding : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	float                                              Distance;                                                 // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogObjectDestroy
// 0x0098 (0x00F8 - 0x0060)
struct FWuLogObjectDestroy : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     ObjectType;                                               // 0x00D8(0x0010) (ZeroConstructor)
	struct FVector                                     ObjectLocation;                                           // 0x00E8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogEmote
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogEmote : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     EmoteName;                                                // 0x00D8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogVaultStart
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogVaultStart : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	bool                                               IsLedgeGrab;                                              // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogSkinUpdate
// 0x00E8 (0x0148 - 0x0060)
struct FWuLogSkinUpdate : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	struct FString                                     SkinName;                                                 // 0x0128(0x0010) (ZeroConstructor)
	struct FString                                     SkinCategory;                                             // 0x0138(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogStatAccuracy
// 0x0018 (0x0078 - 0x0060)
struct FWuLogStatAccuracy : public FLogBase
{
	struct FString                                     AccountId;                                                // 0x0060(0x0010) (ZeroConstructor)
	int                                                NumShots;                                                 // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumHits;                                                  // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogLoadingFinished
// 0x00F0 (0x0150 - 0x0060)
struct FWuLogLoadingFinished : public FLogBase
{
	struct FString                                     DeviceName;                                               // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     Timestamp;                                                // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     MatchId;                                                  // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     ServerName;                                               // 0x0090(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x00A0(0x0010) (ZeroConstructor)
	struct FString                                     Date;                                                     // 0x00B0(0x0010) (ZeroConstructor)
	struct FString                                     State;                                                    // 0x00C0(0x0010) (ZeroConstructor)
	int                                                LoadingTime;                                              // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Character;                                                // 0x00D8(0x0078)
};

// ScriptStruct TslGame.WuLogFreeMemory
// 0x0040 (0x00A0 - 0x0060)
struct FWuLogFreeMemory : public FLogBase
{
	struct FString                                     DeviceName;                                               // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     PlayerNetId;                                              // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0080(0x0010) (ZeroConstructor)
	TArray<struct FWuMemoryStat>                       MemoryStats;                                              // 0x0090(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogMatchSetting
// 0x0058 (0x00B8 - 0x0060)
struct FWuLogMatchSetting : public FLogBase
{
	bool                                               IsCustomGame;                                             // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0068(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0078(0x0010) (ZeroConstructor)
	struct FString                                     MatchId;                                                  // 0x0088(0x0010) (ZeroConstructor)
	int                                                TeamCount;                                                // 0x0098(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinPlayerCount;                                           // 0x009C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerCount;                                           // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FWuStringStringPair>                 MatchSettings;                                            // 0x00A8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogBulletShotDistance
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogBulletShotDistance : public FLogBase
{
	struct FVector                                     VictimLocation;                                           // 0x0060(0x000C) (IsPlainOldData)
	struct FVector                                     HitLocation;                                              // 0x006C(0x000C) (IsPlainOldData)
	float                                              Distance;                                                 // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsVictimInVehicle;                                        // 0x007C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	float                                              VictimSpeed;                                              // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FString                                     VictimStanceMode;                                         // 0x0088(0x0010) (ZeroConstructor)
	struct FString                                     VictimMovementMode;                                       // 0x0098(0x0010) (ZeroConstructor)
	struct FString                                     AttackerAccountId;                                        // 0x00A8(0x0010) (ZeroConstructor)
	float                                              AttackerPing;                                             // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AttackerRDelay;                                           // 0x00BC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AttackerUDelay;                                           // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AttackerUMissPercent;                                     // 0x00C4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VictimAccountId;                                          // 0x00C8(0x0010) (ZeroConstructor)
	float                                              VictimPing;                                               // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              VictimRDelay;                                             // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              VictimUDelay;                                             // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              VictimUMissPercent;                                       // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogSteamNoNetworkConnection
// 0x0028 (0x0088 - 0x0060)
struct FWuLogSteamNoNetworkConnection : public FLogBase
{
	int                                                DisconnectionCountPerGame;                                // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     SteamKickReason;                                          // 0x0068(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogBodyPenetrationDamageInfo
// 0x0098 (0x00F8 - 0x0060)
struct FWuLogBodyPenetrationDamageInfo : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	float                                              DamageDiff;                                               // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FString                                     DamageZone;                                               // 0x00E8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogCheat
// 0x00C0 (0x0120 - 0x0060)
struct FWuLogCheat : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     CheatType;                                                // 0x00D8(0x0010) (ZeroConstructor)
	struct FString                                     Description;                                              // 0x00E8(0x0010) (ZeroConstructor)
	float                                              ParamFloat1;                                              // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ParamFloat2;                                              // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ParamString1;                                             // 0x0100(0x0010) (ZeroConstructor)
	struct FString                                     ParamString2;                                             // 0x0110(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogSwimEnd
// 0x0080 (0x00E0 - 0x0060)
struct FWuLogSwimEnd : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	float                                              SwimDistance;                                             // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxSwimDepthOfWater;                                      // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogSwimStart
// 0x0078 (0x00D8 - 0x0060)
struct FWuLogSwimStart : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
};

// ScriptStruct TslGame.WuLogWheelDestroy
// 0x00F8 (0x0158 - 0x0060)
struct FWuLogWheelDestroy : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00E0(0x0058)
	struct FString                                     DamageTypeCategory;                                       // 0x0138(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x0148(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogVehicleDestroy
// 0x0100 (0x0160 - 0x0060)
struct FWuLogVehicleDestroy : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00E0(0x0058)
	struct FString                                     DamageTypeCategory;                                       // 0x0138(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x0148(0x0010) (ZeroConstructor)
	float                                              Distance;                                                 // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogVehicleDamage
// 0x0100 (0x0160 - 0x0060)
struct FWuLogVehicleDamage : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00E0(0x0058)
	struct FString                                     DamageTypeCategory;                                       // 0x0138(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x0148(0x0010) (ZeroConstructor)
	float                                              Damage;                                                   // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x015C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogVehicleLeave
// 0x00F0 (0x0150 - 0x0060)
struct FWuLogVehicleLeave : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00D8(0x0058)
	float                                              RideDistance;                                             // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SeatIndex;                                                // 0x0134(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TArray<struct FWuLogCharacter>                     FellowPassengers;                                         // 0x0140(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogVehicleRide
// 0x00E8 (0x0148 - 0x0060)
struct FWuLogVehicleRide : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00D8(0x0058)
	int                                                SeatIndex;                                                // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	TArray<struct FWuLogCharacter>                     FellowPassengers;                                         // 0x0138(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogVehicleSpawn
// 0x0020 (0x0080 - 0x0060)
struct FWuLogVehicleSpawn : public FLogBase
{
	struct FString                                     VehicleId;                                                // 0x0060(0x0010) (ZeroConstructor)
	struct FVector                                     Location;                                                 // 0x0070(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogVehicleAISpawn
// 0x0068 (0x00C8 - 0x0060)
struct FWuLogVehicleAISpawn : public FLogBase
{
	struct FString                                     SpawnId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x0070(0x0058)
};

// ScriptStruct TslGame.WuLogItemPackage
// 0x0030
struct FWuLogItemPackage
{
	struct FString                                     ItemPackageId;                                            // 0x0000(0x0010) (ZeroConstructor)
	struct FVector                                     Location;                                                 // 0x0010(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<struct FWuLogItem>                          Items;                                                    // 0x0020(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogCarePackageLand
// 0x0030 (0x0090 - 0x0060)
struct FWuLogCarePackageLand : public FLogBase
{
	struct FWuLogItemPackage                           ItemPackage;                                              // 0x0060(0x0030)
};

// ScriptStruct TslGame.WuLogCarePackageSpawn
// 0x0030 (0x0090 - 0x0060)
struct FWuLogCarePackageSpawn : public FLogBase
{
	struct FWuLogItemPackage                           ItemPackage;                                              // 0x0060(0x0030)
};

// ScriptStruct TslGame.WuLogLootTruckPackageSpawn
// 0x0100 (0x0160 - 0x0060)
struct FWuLogLootTruckPackageSpawn : public FLogBase
{
	struct FWuLogItemPackage                           ItemPackage;                                              // 0x0060(0x0030)
	struct FWuLogCharacter                             Character;                                                // 0x0090(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x0108(0x0058)
};

// ScriptStruct TslGame.WuLogLanguage
// 0x0098 (0x00F8 - 0x0060)
struct FWuLogLanguage : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     WindowsLanguage;                                          // 0x00D8(0x0010) (ZeroConstructor)
	struct FString                                     GameLanguage;                                             // 0x00E8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGraphicSettings
// 0x003C
struct FWuGraphicSettings
{
	int                                                ResolutionWidth;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ResolutionHeight;                                         // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               VSync;                                                    // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                DisplayMode;                                              // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FOV;                                                      // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ScreenScale;                                              // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AntiAliasing;                                             // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PostProcessing;                                           // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Shadows;                                                  // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Textures;                                                 // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Effects;                                                  // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Foliage;                                                  // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ViewDistance;                                             // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               MotionBlur;                                               // 0x0034(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               MinimapDynamicZoom;                                       // 0x0035(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               FreelockInterpolation;                                    // 0x0036(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               Replay;                                                   // 0x0037(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               DeathCam;                                                 // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.WuSystemInfo
// 0x01C0 (0x0220 - 0x0060)
struct FWuSystemInfo : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     OsLanguage;                                               // 0x00D8(0x0010) (ZeroConstructor)
	struct FString                                     GameLanguage;                                             // 0x00E8(0x0010) (ZeroConstructor)
	struct FString                                     OsVersion;                                                // 0x00F8(0x0010) (ZeroConstructor)
	struct FString                                     CpuName;                                                  // 0x0108(0x0010) (ZeroConstructor)
	struct FString                                     GpuName;                                                  // 0x0118(0x0010) (ZeroConstructor)
	int                                                RamInGB;                                                  // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FString                                     BaseBoardSerial;                                          // 0x0130(0x0010) (ZeroConstructor)
	TArray<struct FString>                             MemorySerials;                                            // 0x0140(0x0010) (ZeroConstructor)
	int                                                ArpIpCount;                                               // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	struct FString                                     OsUserAccount;                                            // 0x0158(0x0010) (ZeroConstructor)
	TArray<struct FString>                             DiskModelNames;                                           // 0x0168(0x0010) (ZeroConstructor)
	TArray<struct FString>                             DiskSerials;                                              // 0x0178(0x0010) (ZeroConstructor)
	TArray<struct FString>                             MonitorModelNames;                                        // 0x0188(0x0010) (ZeroConstructor)
	TArray<struct FString>                             MonitorSerials;                                           // 0x0198(0x0010) (ZeroConstructor)
	TArray<struct FString>                             MemoryModelNames;                                         // 0x01A8(0x0010) (ZeroConstructor)
	struct FString                                     BaseBoardModelName;                                       // 0x01B8(0x0010) (ZeroConstructor)
	TArray<struct FString>                             GatewayMacAddress;                                        // 0x01C8(0x0010) (ZeroConstructor)
	bool                                               UsingXenuine;                                             // 0x01D8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01D9(0x0003) MISSED OFFSET
	struct FWuGraphicSettings                          GraphicSettings;                                          // 0x01DC(0x003C)
	uint64_t                                           CpuClock;                                                 // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogHeal
// 0x00D0 (0x0130 - 0x0060)
struct FWuLogHeal : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	float                                              HealAmount;                                               // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogItemThrow
// 0x0148 (0x01A8 - 0x0060)
struct FWuLogItemThrow : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogCharacter                             Target;                                                   // 0x00D8(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x0150(0x0050)
	float                                              Distance;                                                 // 0x01A0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsSuccess;                                                // 0x01A4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogItemUse
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogItemUse : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogItemDetach
// 0x0118 (0x0178 - 0x0060)
struct FWuLogItemDetach : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  ParentItem;                                               // 0x00D8(0x0050)
	struct FWuLogItem                                  ChildItem;                                                // 0x0128(0x0050)
};

// ScriptStruct TslGame.WuLogItemAttachedAll
// 0x0118 (0x0178 - 0x0060)
struct FWuLogItemAttachedAll : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  ParentItem;                                               // 0x00D8(0x0050)
	struct FWuLogItem                                  ChildItem;                                                // 0x0128(0x0050)
};

// ScriptStruct TslGame.WuLogItemAttach
// 0x0118 (0x0178 - 0x0060)
struct FWuLogItemAttach : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  ParentItem;                                               // 0x00D8(0x0050)
	struct FWuLogItem                                  ChildItem;                                                // 0x0128(0x0050)
};

// ScriptStruct TslGame.WuLogItemUnequip
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogItemUnequip : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogItemEquip
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogItemEquip : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogItemDrop
// 0x00D0 (0x0130 - 0x0060)
struct FWuLogItemDrop : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	bool                                               IsDropVolatility;                                         // 0x0128(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogItemPickupFromCustomPackage
// 0x00E8 (0x0148 - 0x0060)
struct FWuLogItemPickupFromCustomPackage : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	struct FString                                     SourceUniqueId;                                           // 0x0128(0x0010) (ZeroConstructor)
	struct FString                                     CustomPackageUniqueId;                                    // 0x0138(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogItemPickupFromLootBox
// 0x00E0 (0x0140 - 0x0060)
struct FWuLogItemPickupFromLootBox : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	int                                                OwnerTeamId;                                              // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FString                                     CreatorAccountId;                                         // 0x0130(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogItemPickupFromCarepackage
// 0x00D0 (0x0130 - 0x0060)
struct FWuLogItemPickupFromCarepackage : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
	int                                                CarePackageUniqueId;                                      // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogItemPickup
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogItemPickup : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogItem                                  Item;                                                     // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogItemSpawn
// 0x0018 (0x0078 - 0x0060)
struct FWuLogItemSpawn : public FLogBase
{
	struct FString                                     ItemID;                                                   // 0x0060(0x0010) (ZeroConstructor)
	int                                                SpawnCount;                                               // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StackCount;                                               // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuGameResultStatsPerPlayer
// 0x0020
struct FWuGameResultStatsPerPlayer
{
	int                                                KillCount;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Score;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Xp;                                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceOnFoot;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceOnSwim;                                           // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceOnVehicle;                                        // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceOnParachute;                                      // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceOnFreefall;                                       // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuGameResultPerPlayer
// 0x0060
struct FWuGameResultPerPlayer
{
	struct FString                                     PlayerNetId;                                              // 0x0000(0x0010) (ZeroConstructor)
	int                                                Rank;                                                     // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     GameResult;                                               // 0x0018(0x0010) (ZeroConstructor)
	int                                                TeamId;                                                   // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuGameResultStatsPerPlayer                 Stats;                                                    // 0x002C(0x0020)
	bool                                               IsBpGrinder;                                              // 0x004C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsXpGrinder;                                              // 0x004D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	struct FString                                     AccountId;                                                // 0x0050(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerKill
// 0x0248 (0x02A8 - 0x0060)
struct FWuLogPlayerKill : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Killer;                                                   // 0x0068(0x0078)
	struct FWuLogCharacter                             Victim;                                                   // 0x00E0(0x0078)
	struct FWuLogCharacter                             Assistant;                                                // 0x0158(0x0078)
	int                                                DBNOId;                                                   // 0x01D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	struct FString                                     DamageReason;                                             // 0x01D8(0x0010) (ZeroConstructor)
	struct FString                                     DamageTypeCategory;                                       // 0x01E8(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x01F8(0x0010) (ZeroConstructor)
	TArray<struct FString>                             DamageCauserAdditionalInfo;                               // 0x0208(0x0010) (ZeroConstructor)
	struct FString                                     VictimWeapon;                                             // 0x0218(0x0010) (ZeroConstructor)
	TArray<struct FString>                             VictimWeaponAdditionalInfo;                               // 0x0228(0x0010) (ZeroConstructor)
	float                                              Distance;                                                 // 0x0238(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	struct FWuGameResultPerPlayer                      VictimGameResult;                                         // 0x0240(0x0060)
	bool                                               IsThroughPenetrableWall;                                  // 0x02A0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerRevive
// 0x00F8 (0x0158 - 0x0060)
struct FWuLogPlayerRevive : public FLogBase
{
	struct FWuLogCharacter                             Reviver;                                                  // 0x0060(0x0078)
	struct FWuLogCharacter                             Victim;                                                   // 0x00D8(0x0078)
	int                                                DBNOId;                                                   // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogArmorDestroy
// 0x0180 (0x01E0 - 0x0060)
struct FWuLogArmorDestroy : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogCharacter                             Victim;                                                   // 0x00E0(0x0078)
	struct FString                                     DamageTypeCategory;                                       // 0x0158(0x0010) (ZeroConstructor)
	struct FString                                     DamageReason;                                             // 0x0168(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x0178(0x0010) (ZeroConstructor)
	struct FWuLogItem                                  Item;                                                     // 0x0188(0x0050)
	float                                              Distance;                                                 // 0x01D8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerMakeGroggy
// 0x0168 (0x01C8 - 0x0060)
struct FWuLogPlayerMakeGroggy : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogCharacter                             Victim;                                                   // 0x00E0(0x0078)
	struct FString                                     DamageReason;                                             // 0x0158(0x0010) (ZeroConstructor)
	struct FString                                     DamageTypeCategory;                                       // 0x0168(0x0010) (ZeroConstructor)
	struct FString                                     DamageCauserName;                                         // 0x0178(0x0010) (ZeroConstructor)
	TArray<struct FString>                             DamageCauserAdditionalInfo;                               // 0x0188(0x0010) (ZeroConstructor)
	struct FString                                     VictimWeapon;                                             // 0x0198(0x0010) (ZeroConstructor)
	TArray<struct FString>                             VictimWeaponAdditionalInfo;                               // 0x01A8(0x0010) (ZeroConstructor)
	float                                              Distance;                                                 // 0x01B8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsAttackerInVehicle;                                      // 0x01BC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01BD(0x0003) MISSED OFFSET
	int                                                DBNOId;                                                   // 0x01C0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsThroughPenetrableWall;                                  // 0x01C4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01C5(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerTakeDamage
// 0x0138 (0x0198 - 0x0060)
struct FWuLogPlayerTakeDamage : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FWuLogCharacter                             Victim;                                                   // 0x00E0(0x0078)
	struct FString                                     DamageTypeCategory;                                       // 0x0158(0x0010) (ZeroConstructor)
	struct FString                                     DamageReason;                                             // 0x0168(0x0010) (ZeroConstructor)
	float                                              Damage;                                                   // 0x0178(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	struct FString                                     DamageCauserName;                                         // 0x0180(0x0010) (ZeroConstructor)
	bool                                               IsThroughPenetrableWall;                                  // 0x0190(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerUseFlareGun
// 0x00E0 (0x0140 - 0x0060)
struct FWuLogPlayerUseFlareGun : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FireWeaponStackCount;                                     // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FString                                     AttackType;                                               // 0x00E0(0x0010) (ZeroConstructor)
	struct FWuLogItem                                  Weapon;                                                   // 0x00F0(0x0050)
};

// ScriptStruct TslGame.WuLogPlayerDestroyBreachableWall
// 0x00C8 (0x0128 - 0x0060)
struct FWuLogPlayerDestroyBreachableWall : public FLogBase
{
	struct FWuLogCharacter                             Attacker;                                                 // 0x0060(0x0078)
	struct FWuLogItem                                  Weapon;                                                   // 0x00D8(0x0050)
};

// ScriptStruct TslGame.WuLogPlayerDestroyProp
// 0x0098 (0x00F8 - 0x0060)
struct FWuLogPlayerDestroyProp : public FLogBase
{
	struct FWuLogCharacter                             Attacker;                                                 // 0x0060(0x0078)
	struct FString                                     ObjectType;                                               // 0x00D8(0x0010) (ZeroConstructor)
	struct FVector                                     ObjectLocation;                                           // 0x00E8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogBlackZoneEnded
// 0x0010 (0x0070 - 0x0060)
struct FWuLogBlackZoneEnded : public FLogBase
{
	TArray<struct FWuLogCharacter>                     Survivors;                                                // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerSummonBlackZone
// 0x0078 (0x00D8 - 0x0060)
struct FWuLogPlayerSummonBlackZone : public FLogBase
{
	struct FWuLogCharacter                             Player;                                                   // 0x0060(0x0078)
};

// ScriptStruct TslGame.WuLogPlayerUseProjDecoy
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogPlayerUseProjDecoy : public FLogBase
{
	struct FWuLogCharacter                             DecoyInstigator;                                          // 0x0060(0x0078)
	struct FVector                                     Location;                                                 // 0x00D8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerUseWeapDecoy
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogPlayerUseWeapDecoy : public FLogBase
{
	struct FWuLogCharacter                             DecoyInstigator;                                          // 0x0060(0x0078)
	struct FVector                                     Location;                                                 // 0x00D8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerUseThrowable
// 0x00E0 (0x0140 - 0x0060)
struct FWuLogPlayerUseThrowable : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FireWeaponStackCount;                                     // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FString                                     AttackType;                                               // 0x00E0(0x0010) (ZeroConstructor)
	struct FWuLogItem                                  Weapon;                                                   // 0x00F0(0x0050)
};

// ScriptStruct TslGame.WuLogPlayerAttack
// 0x0138 (0x0198 - 0x0060)
struct FWuLogPlayerAttack : public FLogBase
{
	int                                                AttackId;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FireWeaponStackCount;                                     // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuLogCharacter                             Attacker;                                                 // 0x0068(0x0078)
	struct FString                                     AttackType;                                               // 0x00E0(0x0010) (ZeroConstructor)
	struct FWuLogItem                                  Weapon;                                                   // 0x00F0(0x0050)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x0140(0x0058)
};

// ScriptStruct TslGame.WuLogPlayerPosition
// 0x00F8 (0x0158 - 0x0060)
struct FWuLogPlayerPosition : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FWuLogVehicle                               Vehicle;                                                  // 0x00D8(0x0058)
	float                                              ElapsedTime;                                              // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAlivePlayers;                                          // 0x0134(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ClientFPS;                                                // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Under10FPS;                                               // 0x013C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Under20FPS;                                               // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Under30FPS;                                               // 0x0144(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Under60FPS;                                               // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinFPS;                                                   // 0x014C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxFPS;                                                   // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayerKicked
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogPlayerKicked : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	struct FString                                     Reason;                                                   // 0x00D8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerLogout
// 0x0020 (0x0080 - 0x0060)
struct FWuLogPlayerLogout : public FLogBase
{
	struct FString                                     NetId;                                                    // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0070(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerLogin
// 0x0058 (0x00B8 - 0x0060)
struct FWuLogPlayerLogin : public FLogBase
{
	struct FString                                     NetId;                                                    // 0x0060(0x0010) (ZeroConstructor)
	bool                                               Result;                                                   // 0x0070(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FString                                     ErrorMessage;                                             // 0x0078(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0088(0x0010) (ZeroConstructor)
	struct FString                                     Ip;                                                       // 0x0098(0x0010) (ZeroConstructor)
	struct FString                                     ClientVersion;                                            // 0x00A8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPlayerCreate
// 0x0088 (0x00E8 - 0x0060)
struct FWuLogPlayerCreate : public FLogBase
{
	struct FWuLogCharacter                             Character;                                                // 0x0060(0x0078)
	TArray<struct FString>                             Equips;                                                   // 0x00D8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogServerStat
// 0x0030 (0x0090 - 0x0060)
struct FWuLogServerStat : public FLogBase
{
	int                                                ElapsedTime;                                              // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAliveTeams;                                            // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumJoinPlayers;                                           // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumStartPlayers;                                          // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAlivePlayers;                                          // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PingMin;                                                  // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PingMax;                                                  // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PingAvg;                                                  // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FrameRateMin;                                             // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FrameRateMax;                                             // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FrameRateAvg;                                             // 0x0088(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogGameState
// 0x0054
struct FWuLogGameState
{
	int                                                ElapsedTime;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAliveTeams;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumJoinPlayers;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumStartPlayers;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumAlivePlayers;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SafetyZonePosition;                                       // 0x0014(0x000C) (IsPlainOldData)
	float                                              SafetyZoneRadius;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PoisonGasWarningPosition;                                 // 0x0024(0x000C) (IsPlainOldData)
	float                                              PoisonGasWarningRadius;                                   // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     RedZonePosition;                                          // 0x0034(0x000C) (IsPlainOldData)
	float                                              RedZoneRadius;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     BlackZonePosition;                                        // 0x0044(0x000C) (IsPlainOldData)
	float                                              BlackZoneRadius;                                          // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogGameStatePeriodic
// 0x0058 (0x00B8 - 0x0060)
struct FWuLogGameStatePeriodic : public FLogBase
{
	struct FWuLogGameState                             GameState;                                                // 0x0060(0x0054)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogPlayTimeRecord
// 0x0008
struct FWuLogPlayTimeRecord
{
	int                                                SurvivalTime;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamSpectatingTime;                                       // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogBpReward
// 0x001C
struct FWuLogBpReward
{
	int                                                PlayTime;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Kill;                                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Damage;                                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Boosting;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RawTotal;                                                 // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BoostedTotal;                                             // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuLogRewardDetail
// 0x0038
struct FWuLogRewardDetail
{
	struct FString                                     AccountId;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FWuLogPlayTimeRecord                        PlayTimeRecord;                                           // 0x0010(0x0008)
	struct FWuLogBpReward                              BpReward;                                                 // 0x0018(0x001C)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuGameFinishedResult
// 0x0010
struct FWuGameFinishedResult
{
	TArray<struct FWuGameResultPerPlayer>              Results;                                                  // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuWaypointStat
// 0x0018
struct FWuWaypointStat
{
	struct FString                                     UserName;                                                 // 0x0000(0x0010) (ZeroConstructor)
	int                                                WaypointUsedCount;                                        // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogMatchEnd
// 0x0040 (0x00A0 - 0x0060)
struct FWuLogMatchEnd : public FLogBase
{
	TArray<struct FWuLogCharacterWeapons>              Characters;                                               // 0x0060(0x0010) (ZeroConstructor)
	TArray<struct FWuLogRewardDetail>                  RewardDetail;                                             // 0x0070(0x0010) (ZeroConstructor)
	struct FWuGameFinishedResult                       GameResultOnFinished;                                     // 0x0080(0x0010)
	TArray<struct FWuWaypointStat>                     WaypointStats;                                            // 0x0090(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogMatchStart
// 0x0058 (0x00B8 - 0x0060)
struct FWuLogMatchStart : public FLogBase
{
	struct FString                                     MapName;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     WeatherId;                                                // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FWuLogCharacterWeapons>              Characters;                                               // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     CameraViewBehaviour;                                      // 0x0090(0x0010) (ZeroConstructor)
	int                                                TeamSize;                                                 // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsCustomGame;                                             // 0x00A4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsEventMode;                                              // 0x00A5(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsAIMode;                                                 // 0x00A6(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x00A7(0x0001) MISSED OFFSET
	struct FString                                     BlueZoneCustomOptions;                                    // 0x00A8(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogCharacterRating
// 0x0030
struct FWuLogCharacterRating
{
	struct FString                                     AccountId;                                                // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     NetId;                                                    // 0x0010(0x0010) (ZeroConstructor)
	int                                                MMR;                                                      // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RankPoint;                                                // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Ping;                                                     // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuLogMatchDefinition
// 0x0090 (0x00F0 - 0x0060)
struct FWuLogMatchDefinition : public FLogBase
{
	struct FString                                     MatchId;                                                  // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     PingQuality;                                              // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     SeasonState;                                              // 0x0080(0x0010) (ZeroConstructor)
	TArray<struct FWuLogCharacterRating>               Ratings;                                                  // 0x0090(0x0010) (ZeroConstructor)
	struct FString                                     DivisionId;                                               // 0x00A0(0x0010) (ZeroConstructor)
	struct FString                                     InstanceId;                                               // 0x00B0(0x0010) (ZeroConstructor)
	struct FString                                     PublicId;                                                 // 0x00C0(0x0010) (ZeroConstructor)
	struct FString                                     InstanceType;                                             // 0x00D0(0x0010) (ZeroConstructor)
	struct FString                                     GameServerVersion;                                        // 0x00E0(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLogPhaseChange
// 0x0008 (0x0068 - 0x0060)
struct FWuLogPhaseChange : public FLogBase
{
	int                                                phase;                                                    // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ElapsedTime;                                              // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuTeamUpPlayer
// 0x0028
struct FWuTeamUpPlayer
{
	struct FString                                     AcceptedTeamUpAt;                                         // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0010(0x0010) (ZeroConstructor)
	bool                                               IsHost;                                                   // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.WuTeamUpPartyInfo
// 0x0010
struct FWuTeamUpPartyInfo
{
	TArray<struct FWuTeamUpPlayer>                     PartyMembers;                                             // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuExitToLobbyData
// 0x0028
struct FWuExitToLobbyData
{
	struct FString                                     AccountId;                                                // 0x0000(0x0010) (ZeroConstructor)
	bool                                               FromDeathCam;                                             // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     TeamUpStartedAt;                                          // 0x0018(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuPrepareUsersResult
// 0x0010
struct FWuPrepareUsersResult
{
	TArray<struct FString>                             AccountIds;                                               // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGameStartInfoPerPlayer
// 0x0020
struct FWuGameStartInfoPerPlayer
{
	struct FString                                     PlayerNetId;                                              // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     AccountId;                                                // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGameStartInfo
// 0x0010
struct FWuGameStartInfo
{
	TArray<struct FWuGameStartInfoPerPlayer>           Players;                                                  // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGameInitializedResult
// 0x0008
struct FWuGameInitializedResult
{
	bool                                               IsSuccess;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Port;                                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuGameStartRequest
// 0x0010
struct FWuGameStartRequest
{
	TArray<struct FWuStringStringPair>                 StringParameters;                                         // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGameOverrideParameterRequest
// 0x0020
struct FWuGameOverrideParameterRequest
{
	struct FString                                     MatchId;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FWuStringStringPair>                 StringParameters;                                         // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuGameInitializeRequest
// 0x0048
struct FWuGameInitializeRequest
{
	bool                                               IsCustomGame;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0008(0x0010) (ZeroConstructor)
	struct FString                                     ModeName;                                                 // 0x0018(0x0010) (ZeroConstructor)
	int                                                TeamCount;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinPlayerCount;                                           // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerCount;                                           // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FWuStringStringPair>                 StringParameters;                                         // 0x0038(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuMatchRating
// 0x0008
struct FWuMatchRating
{
	int                                                RankPoint;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MMR;                                                      // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WuCharacterWeaponMasteryInfo
// 0x0010
struct FWuCharacterWeaponMasteryInfo
{
	TArray<struct FWuStringFloatPair>                  WeaponMasteryLevels;                                      // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuCharacterInfo
// 0x0230
struct FWuCharacterInfo
{
	struct FString                                     Nickname;                                                 // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     ClanName;                                                 // 0x0010(0x0010) (ZeroConstructor)
	bool                                               Gender;                                                   // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FWuCharacterCustomizationOptions            CustomizationOptions;                                     // 0x0028(0x0060)
	struct FWuCharacterWeaponMasteryInfo               WeaponMasteryInfo;                                        // 0x0088(0x0010)
	struct FWuUnrealPlayerCard                         PlayerCard;                                               // 0x0098(0x0198)
};

// ScriptStruct TslGame.WuUdpEncryptionKey
// 0x0030
struct FWuUdpEncryptionKey
{
	struct FString                                     Key;                                                      // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     ServerIV;                                                 // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     ClientIV;                                                 // 0x0020(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuLobbyPartyInfo
// 0x0038
struct FWuLobbyPartyInfo
{
	struct FString                                     PartyId;                                                  // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     TeamUpId;                                                 // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     PartyLeaderId;                                            // 0x0020(0x0010) (ZeroConstructor)
	int                                                PartySize;                                                // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.WuUserAuthInfo
// 0x0338
struct FWuUserAuthInfo
{
	struct FString                                     PlayerNetId;                                              // 0x0000(0x0010) (ZeroConstructor)
	int                                                TeamId;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamMemberIndex;                                          // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SquadIndex;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuMatchRating                              Rating;                                                   // 0x001C(0x0008)
	bool                                               IsZombie;                                                 // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsMaster;                                                 // 0x0025(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0026(0x0002) MISSED OFFSET
	struct FWuCharacterInfo                            CharacterInfo;                                            // 0x0028(0x0230)
	int                                                Platform;                                                 // 0x0258(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsStreamerModeOn;                                         // 0x025C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x025D(0x0003) MISSED OFFSET
	struct FString                                     PartnerLevel;                                             // 0x0260(0x0010) (ZeroConstructor)
	int                                                ObserverAuthorityType;                                    // 0x0270(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               BattlEyeDisabled;                                         // 0x0274(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               TPAntibotDisabled;                                        // 0x0275(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               EACDisabled;                                              // 0x0276(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsSuspect;                                                // 0x0277(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               DisallowVoiceChat;                                        // 0x0278(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsBypassAnticheat;                                        // 0x0279(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x027A(0x0006) MISSED OFFSET
	struct FString                                     AccountId;                                                // 0x0280(0x0010) (ZeroConstructor)
	int                                                v1;                                                       // 0x0290(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                v2;                                                       // 0x0294(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                V3;                                                       // 0x0298(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                V4;                                                       // 0x029C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWuUdpEncryptionKey                         UdpEncryptionKey;                                         // 0x02A0(0x0030)
	TArray<struct FWuStringStringPair>                 CustomParameters;                                         // 0x02D0(0x0010) (ZeroConstructor)
	float                                              BpBoost;                                                  // 0x02E0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              XpBoost;                                                  // 0x02E4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentDailyXp;                                           // 0x02E8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsMaxLevel;                                               // 0x02EC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	TArray<struct FWuStringIntPair>                    StatTrakDataPairs;                                        // 0x02F0(0x0010) (ZeroConstructor)
	struct FWuLobbyPartyInfo                           LobbyPartyInfo;                                           // 0x0300(0x0038)
};

// ScriptStruct TslGame.WuTeamInfo
// 0x0038
struct FWuTeamInfo
{
	int                                                TeamId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FString>                             AccountIds;                                               // 0x0008(0x0010) (ZeroConstructor)
	TArray<int>                                        TeamMemberIndices;                                        // 0x0018(0x0010) (ZeroConstructor)
	TArray<int>                                        SquadIndices;                                             // 0x0028(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.WuCustomizableObjectIdPair
// 0x0020
struct FWuCustomizableObjectIdPair
{
	struct FString                                     CustomizableObjectKey;                                    // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     CustomizableObjectValue;                                  // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.PendingVaultingTask
// 0x0740
struct FPendingVaultingTask
{
	unsigned char                                      UnknownData00[0x740];                                     // 0x0000(0x0740) MISSED OFFSET
};

// ScriptStruct TslGame.TslPointDamageEvent
// 0x0008 (0x00B8 - 0x00B0)
struct FTslPointDamageEvent : public FPointDamageEvent
{
	bool                                               bDestructibleDoor;                                        // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.SkinItemDataRow
// 0x0008 (0x0010 - 0x0008)
struct FSkinItemDataRow : public FTableRowBase
{
	struct FName                                       SkinItemID;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkinTargetData
// 0x0010
struct FSkinTargetData
{
	struct FName                                       TargetName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkinDataConfig*                             SkinDataConfig;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkinData
// 0x0010
struct FSkinData
{
	TArray<struct FSkinTargetData>                     SkinTargetDatas;                                          // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance)
};

// ScriptStruct TslGame.SkinMesh
// 0x0028
struct FSkinMesh
{
	ESkinMeshType                                      MeshType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TAssetPtr<class UObject>                           MeshAsset;                                                // 0x0008(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.SkinMeshMaterials
// 0x0018
struct FSkinMeshMaterials
{
	ESkinApplicationType                               SkinApplicationType;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FSkinMaterialData>                   SkinMaterials;                                            // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslBaseSkinData
// 0x00C0 (0x00C8 - 0x0008)
struct FTslBaseSkinData : public FTableRowBase
{
	TMap<struct FName, struct FSkinMesh>               SkinnedMeshSet;                                           // 0x0008(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, struct FSkinMeshMaterials>      SkinnedMaterialSet;                                       // 0x0058(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               SkinnableTagList;                                         // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FRotator                                    DefaultViewModeRotation;                                  // 0x00B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslVehicleSkinData
// 0x0000 (0x00C8 - 0x00C8)
struct FTslVehicleSkinData : public FTslBaseSkinData
{
	TMap<struct FName, struct FSkinMesh>               SkinnedMeshSet;                                           // 0x0008(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, struct FSkinMeshMaterials>      SkinnedMaterialSet;                                       // 0x0058(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               SkinnableTagList;                                         // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FRotator                                    DefaultViewModeRotation;                                  // 0x00B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.TslEquipSkinData
// 0x0080 (0x0148 - 0x00C8)
struct FTslEquipSkinData : public FTslBaseSkinData
{
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x00C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x00F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectSkin;                                   // 0x0128(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslParachuteSkinData
// 0x0000 (0x0148 - 0x0148)
struct FTslParachuteSkinData : public FTslEquipSkinData
{
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x00C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x00F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectSkin;                                   // 0x0128(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslTorsoArmorSkinData
// 0x0000 (0x0148 - 0x0148)
struct FTslTorsoArmorSkinData : public FTslEquipSkinData
{
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x00C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x00F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectSkin;                                   // 0x0128(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslBackpackSkinData
// 0x0000 (0x0148 - 0x0148)
struct FTslBackpackSkinData : public FTslEquipSkinData
{
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x00C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x00F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectSkin;                                   // 0x0128(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslHelmetSkinData
// 0x0000 (0x0148 - 0x0148)
struct FTslHelmetSkinData : public FTslEquipSkinData
{
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForMale;                      // 0x00C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdentifier               CustomizableObjectIdentifierForFemale;                    // 0x00F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCustomizableObjectIdPair                   CustomizableObjectSkin;                                   // 0x0128(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslWeaponSkinData
// 0x0018 (0x00E0 - 0x00C8)
struct FTslWeaponSkinData : public FTslBaseSkinData
{
	unsigned char                                      bStatTrak : 1;                                            // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FStringAssetReference                       StatTrakActorClass;                                       // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslMeleeWeaponSkinData
// 0x0000 (0x00E0 - 0x00E0)
struct FTslMeleeWeaponSkinData : public FTslWeaponSkinData
{
	unsigned char                                      bStatTrak : 1;                                            // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FStringAssetReference                       StatTrakActorClass;                                       // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.SkinSketalMesh
// 0x0008
struct FSkinSketalMesh
{
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SkinTargetInfo
// 0x0010
struct FSkinTargetInfo
{
	struct FName                                       TargetName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              TargetMesh;                                               // 0x0008(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
};

// ScriptStruct TslGame.SandboxItemDataTable
// 0x0050 (0x0058 - 0x0008)
struct FSandboxItemDataTable : public FTableRowBase
{
	struct FName                                       CategoryName;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       ItemStringClassRef;                                       // 0x0010(0x0010) (Edit)
	struct FName                                       ItemID;                                                   // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     Vehicle_NameSpace;                                        // 0x0028(0x0010) (Edit, ZeroConstructor)
	struct FString                                     Vehicle_Key;                                              // 0x0038(0x0010) (Edit, ZeroConstructor)
	struct FString                                     Vehicle_MsgId;                                            // 0x0048(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.SandboxL10NDataTable
// 0x0030 (0x0038 - 0x0008)
struct FSandboxL10NDataTable : public FTableRowBase
{
	struct FString                                     NameSpace;                                                // 0x0008(0x0010) (Edit, ZeroConstructor)
	struct FString                                     Key;                                                      // 0x0018(0x0010) (Edit, ZeroConstructor)
	struct FString                                     MsgId;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayRecordTargetEvent
// 0x0020
struct FReplayRecordTargetEvent
{
	struct FString                                     RecordTargetNetId;                                        // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RecordTargetName;                                         // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayEtceteraEvent
// 0x0030
struct FReplayEtceteraEvent
{
	struct FString                                     EtceteraEventCode;                                        // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TargetNetId;                                              // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TargetName;                                               // 0x0020(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayGroggyEvent
// 0x0098
struct FReplayGroggyEvent
{
	struct FString                                     InstigatorNetId;                                          // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     InstigatorName;                                           // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimNetId;                                              // 0x0020(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0030(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageCauseClassName;                                     // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageTypeCategory;                                       // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageReason;                                             // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bGroggy;                                                  // 0x0070(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FString                                     KillerPlayerId;                                           // 0x0078(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimPlayerId;                                           // 0x0088(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.ReplayKillEvent
// 0x0098
struct FReplayKillEvent
{
	struct FString                                     KillerNetId;                                              // 0x0000(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     KillerName;                                               // 0x0010(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimNetId;                                              // 0x0020(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0030(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageCauseClassName;                                     // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageTypeCategory;                                       // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DamageReason;                                             // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bGroggy;                                                  // 0x0070(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FString                                     KillerPlayerId;                                           // 0x0078(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimPlayerId;                                           // 0x0088(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct TslGame.CheatDataArray
// 0x0010
struct FCheatDataArray
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.TslAnimNode_MirrorAnimation
// 0x0078 (0x00A8 - 0x0030)
struct FTslAnimNode_MirrorAnimation : public FAnimNode_Base
{
	struct FPoseLink                                   BasePose;                                                 // 0x0030(0x0018) (Edit)
	class UBoneMirrorSettings*                         BoneMirrorSettings;                                       // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBoneMirrorSettings*                         PrevBoneMirrorSettings;                                   // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FBoneReference                              ItemBone;                                                 // 0x0058(0x0018) (Edit)
	struct FBoneReference                              ItemBoneNewParent;                                        // 0x0070(0x0018) (Edit)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0088(0x0020) MISSED OFFSET
};

// ScriptStruct TslGame.RoamingActionInfo
// 0x0002
struct FRoamingActionInfo
{
	ERoamingActionType                                 ActionType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0001(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.AIParachuteJumpAreaCount
// 0x0010
struct FAIParachuteJumpAreaCount
{
	int                                                AreaID;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistToPlaneRoute;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CurAICount;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxAICount;                                               // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.AIParachuteJumpArea
// 0x0014
struct FAIParachuteJumpArea
{
	struct FVector                                     Center;                                                   // 0x0000(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0010(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AirplanePath
// 0x0034
struct FAirplanePath
{
	struct FVector                                     AirplaneStartLoc;                                         // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     AirplaneStopLoc;                                          // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     AirplaneCanJumpLoc;                                       // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     AirplaneForceJumpLoc;                                     // 0x0024(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              PlaneSpeed;                                               // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PlaneData
// 0x0090
struct FPlaneData
{
	class AActor*                                      ThePlane;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanJump;                                                 // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FVector                                     PlaneVelocity;                                            // 0x000C(0x000C) (IsPlainOldData)
	struct FAirplanePath                               PlanePath;                                                // 0x0018(0x0034)
	int                                                TotalPlayerNum;                                           // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class APlayerController*>                   TotalPlayers;                                             // 0x0050(0x0010) (ZeroConstructor)
	TArray<class APlayerController*>                   CurPlayers;                                               // 0x0060(0x0010) (ZeroConstructor)
	int                                                TotalAINum;                                               // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<class AAIController*>                       TotalAIs;                                                 // 0x0078(0x0010) (ZeroConstructor)
	int                                                CurAINum;                                                 // 0x0088(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AIEquipSpawnGroupDataBase
// 0x0018
struct FAIEquipSpawnGroupDataBase
{
	int                                                GamePhaseIndex;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAIEquipSpawnGroup>                  AIEquipSpawnGroupList;                                    // 0x0008(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.AITriggerTupple
// 0x0008
struct FAITriggerTupple
{
	int                                                Probability;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TriggerSetValue;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WeaponTypeToRange
// 0x0008
struct FWeaponTypeToRange
{
	EWeaponClass                                       WeaponType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Range;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.WeatherToRange
// 0x0010
struct FWeatherToRange
{
	TArray<struct FWeaponTypeToRange>                  Ranges;                                                   // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.WeaponType2Range
// 0x000C
struct FWeaponType2Range
{
	EWeaponClass                                       WeaponType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Range;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NightRange;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DeliverControlRatingConfig
// 0x0010
struct FDeliverControlRatingConfig
{
	int                                                Rating;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius1;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius2;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.AIDistantJudgeNoftify
// 0x0030
struct FAIDistantJudgeNoftify
{
	float                                              RightValue;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SetBBValue;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      NotifyBlackBoardKey;                                      // 0x0008(0x0028) (Edit)
};

// ScriptStruct TslGame.PotentialWaypointPath
// 0x0020
struct FPotentialWaypointPath
{
	class UBTTask_VehicleSearchForNextPathPoint*       ContextNode;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class ATslAIWaypointSegment*                       path;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                PathInputKey;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bPathingInReverse;                                        // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsCurrentPath;                                           // 0x0015(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsTurningAround;                                         // 0x0016(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0017(0x0001) MISSED OFFSET
	int                                                DistanceToPlayZone;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.LeaderboardData
// 0x0010
struct FLeaderboardData
{
	TArray<struct FLeaderboardTeamInfo>                TeamsInfo;                                                // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.SurvivalIngameRewardItem
// 0x0010
struct FSurvivalIngameRewardItem
{
	struct FTslItemStringClass                         ItemClass;                                                // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	int                                                Quantity;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SurvivalIngameRewardItemDataRow
// 0x0010 (0x0018 - 0x0008)
struct FSurvivalIngameRewardItemDataRow : public FTableRowBase
{
	TArray<struct FSurvivalIngameRewardItem>           Items;                                                    // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.RunAwayTarget
// 0x0014
struct FRunAwayTarget
{
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Raduis;                                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               ValidTarget;                                              // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x000D(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.ParticleInstance
// 0x0010
struct FParticleInstance
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.PingPongSummary
// 0x000C
struct FPingPongSummary
{
	float                                              UnreliableAverageDelayMsec;                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ReliableAverageDelayMsec;                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int8_t                                             UnreliableSentCount;                                      // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             UnreliableMissCount;                                      // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             ReliableCount;                                            // 0x000A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
};

// ScriptStruct TslGame.TslBpRewardLogicDataTableRow_Public
// 0x0058 (0x0060 - 0x0008)
struct FTslBpRewardLogicDataTableRow_Public : public FTableRowBase
{
	float                                              OverallGain;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayTimeGain;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RankingGain;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KillGain;                                                 // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageGain;                                               // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExpectedMatchParticipantsNum;                             // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SessionWarmingUpTimeInMinutes;                            // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AvgMatchInProgressTimeInMinutes;                          // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AvgTotalKillsInSession;                                   // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AvgTotalDamageInSession;                                  // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SurvivalTimeFactor;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TeamSpectatingTimeFactor;                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BasePlayTimeInMinutes;                                    // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EarlyPlayTimeSlopePerMinutes;                             // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaterPlayTimeSlopePerMinutes;                             // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TotalBpAmountForRankingPerHour;                           // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RankingDistributionFunctionWeight;                        // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RankingBonusWinner;                                       // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RankingBonusTop10;                                        // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TotalBpAmountForKillPerHour;                              // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TotalBpAmountForDamagePerHour;                            // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.SpawnKitDataRow
// 0x0018 (0x0020 - 0x0008)
struct FSpawnKitDataRow : public FTableRowBase
{
	struct FName                                       SpawnKitName;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSpawnKitInfo>                       SpawnKitInfos;                                            // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.VehicleVariationDataRow
// 0x0030 (0x0038 - 0x0008)
struct FVehicleVariationDataRow : public FTableRowBase
{
	struct FName                                       SubCategoryFilter;                                        // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TAssetPtr<class UClass>                            Vehicle;                                                  // 0x0010(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              SubCategoryFilterWeight;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.NewVehicleSpawnDataRow
// 0x0018 (0x0020 - 0x0008)
struct FNewVehicleSpawnDataRow : public FTableRowBase
{
	struct FName                                       CategoryFilter;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubCategoryFilter;                                        // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CategoryFilterWeight;                                     // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleSpawnGroupDataRow
// 0x0020 (0x0028 - 0x0008)
struct FVehicleSpawnGroupDataRow : public FTableRowBase
{
	struct FName                                       CategoryFilter;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CategoryFilterWeight;                                     // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinTotalCountRange;                                       // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxTotalCountRange;                                       // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinFuelPercentRange;                                      // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFuelPercentRange;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EThingSpotGroupType                                GroupType;                                                // 0x0024(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSnapToFloor;                                             // 0x0025(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0026(0x0002) MISSED OFFSET
};

// ScriptStruct TslGame.VehicleSpawnDataRow
// 0x0020 (0x0028 - 0x0008)
struct FVehicleSpawnDataRow : public FTableRowBase
{
	struct FName                                       CategoryFilter;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubCategoryFilter;                                        // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      Vehicle;                                                  // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Weight;                                                   // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSnapToFloor;                                             // 0x0024(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.RandomVehicleSpawnProcessorDataRow
// 0x0080 (0x0088 - 0x0008)
struct FRandomVehicleSpawnProcessorDataRow : public FTableRowBase
{
	struct FString                                     Description;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     VehicleSpawnSubtitleKey;                                  // 0x0018(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        VehicleSpotGroupDataTable;                                // 0x0028(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        VehicleSpawnDataTable;                                    // 0x0048(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        VehicleVariationDataTable;                                // 0x0068(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.FBREquipableLevel
// 0x0008 (0x0010 - 0x0008)
struct FFBREquipableLevel : public FTableRowBase
{
	int                                                Level;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AIBeginAttackEachOther
// 0x0008
struct FAIBeginAttackEachOther
{
	float                                              BeginAttackEachOtherTime;                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightRatingSection;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslSplinePoint
// 0x001C
struct FTslSplinePoint
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
};

// ScriptStruct TslGame.TslFriendPresence
// 0x0005
struct FTslFriendPresence
{
	bool                                               IsOnline;                                                 // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsPlaying;                                                // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayingThisGame;                                        // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsJoinable;                                               // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Status;                                                   // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslFriend
// 0x0038
struct FTslFriend
{
	struct FString                                     UserSerial;                                               // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     UserRealName;                                             // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     UserDisplayName;                                          // 0x0020(0x0010) (ZeroConstructor)
	struct FTslFriendPresence                          Presence;                                                 // 0x0030(0x0005)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct TslGame.TslClientAuthData
// 0x0070
struct FTslClientAuthData
{
	struct FString                                     PlatformType;                                             // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     AppID;                                                    // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     FullGameVersion;                                          // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     UserSerial;                                               // 0x0030(0x0010) (ZeroConstructor)
	struct FString                                     AccessToken;                                              // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     UserDisplayName;                                          // 0x0050(0x0010) (ZeroConstructor)
	struct FString                                     PlayerNetId;                                              // 0x0060(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.CraftItemDataRow
// 0x0030 (0x0038 - 0x0008)
struct FCraftItemDataRow : public FTableRowBase
{
	struct FName                                       AllowFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CraftItemID;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CraftTime;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<struct FCraftMaterialCount>                 MaterialItems;                                            // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bShouldTransferAmmoInClip;                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.DestructibleBlackZoneBeaconCache
// 0x0010
struct FDestructibleBlackZoneBeaconCache
{
	TArray<struct FDestructibleBlackZoneBeacon>        Beacons;                                                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst)
};

// ScriptStruct TslGame.RicochetResult
// 0x0030
struct FRicochetResult
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct TslGame.RichPresenceHideListDataRow
// 0x0000 (0x0008 - 0x0008)
struct FRichPresenceHideListDataRow : public FTableRowBase
{

};

// ScriptStruct TslGame.MasteryItemBase
// 0x0020 (0x0028 - 0x0008)
struct FMasteryItemBase : public FTableRowBase
{
	struct FText                                       MasteryItemName;                                          // 0x0008(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0020(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.MasteryItemCharm
// 0x0098 (0x00C0 - 0x0028)
struct FMasteryItemCharm : public FMasteryItemBase
{
	TAssetPtr<class UObject>                           CharmAsset;                                               // 0x0028(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UStaticMesh>                       CharmAssetStatic;                                         // 0x0048(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      CharmAnimBlueprint;                                       // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<struct FName, TAssetPtr<class UMaterialInterface>> MaterialOverrides;                                        // 0x0070(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct TslGame.TslProjectile_SpeedUpTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FTslProjectile_SpeedUpTickFunction : public FTickFunction
{
	TEnumAsByte<ETickingGroup>                         TickGroup;                                                // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETickingGroup>                         EndTickGroup;                                             // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	unsigned char                                      bTickEvenWhenPaused : 1;                                  // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCanEverTick : 1;                                         // 0x000C(0x0001)
	unsigned char                                      bStartWithTickEnabled : 1;                                // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowTickOnDedicatedServer : 1;                          // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x33];                                      // 0x000D(0x0033) MISSED OFFSET
	float                                              TickInterval;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0044(0x0014) MISSED OFFSET
};

// ScriptStruct TslGame.DroppedItemInfo
// 0x0018
struct FDroppedItemInfo
{
	class UItem*                                       Item;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.ItemInitiator
// 0x0010
struct FItemInitiator
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                StackCount;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.RemainingItemSpawnMap
// 0x0050
struct FRemainingItemSpawnMap
{
	TMap<struct FName, int>                            RemainingSpawns;                                          // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct TslGame.ItemSpawnLimitDataRow
// 0x0010 (0x0018 - 0x0008)
struct FItemSpawnLimitDataRow : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpawnLimit;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemSpawnTogetherDataRow
// 0x0030 (0x0038 - 0x0008)
struct FItemSpawnTogetherDataRow : public FTableRowBase
{
	struct FName                                       ValueFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryFilter;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCount;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CountMin;                                                 // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CountMax;                                                 // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       SpawnedItemID;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TogetherItemID;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.ItemSpawnDataRow
// 0x0028 (0x0030 - 0x0008)
struct FItemSpawnDataRow : public FTableRowBase
{
	struct FName                                       ValueFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryFilter;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubCategoryFilter;                                        // 0x0018(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StackCount;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Weight;                                                   // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.EventItemData
// 0x0018
struct FEventItemData
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                StackCountMin;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                StackCountMax;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.EventItemPackageSpawnTableDataRow
// 0x0038 (0x0040 - 0x0008)
struct FEventItemPackageSpawnTableDataRow : public FTableRowBase
{
	struct FName                                       PackageName;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FEventItemData>                      EventItemData;                                            // 0x0018(0x0010) (Edit, ZeroConstructor)
	TArray<struct FEventItemData>                      EventItemCandidateData;                                   // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
};

// ScriptStruct TslGame.TracerInstance
// 0x0088
struct FTracerInstance
{
	unsigned char                                      UnknownData00[0x88];                                      // 0x0000(0x0088) MISSED OFFSET
};

// ScriptStruct TslGame.TracerSimulationData
// 0x0030
struct FTracerSimulationData
{
	struct FVector                                     ServerStartTrace;                                         // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     Dir;                                                      // 0x000C(0x000C) (IsPlainOldData)
	struct FAttackId                                   AttackId;                                                 // 0x0018(0x0004)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class UClass*                                      WeaponClass;                                              // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      Instigator;                                               // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TracerSimulationServerData
// 0x0008 (0x0038 - 0x0030)
struct FTracerSimulationServerData : public FTracerSimulationData
{
	float                                              LatencyOffset;                                            // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.AnimationPlayData
// 0x0018
struct FAnimationPlayData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct TslGame.LoadingScreenImageDataRow
// 0x0028 (0x0030 - 0x0008)
struct FLoadingScreenImageDataRow : public FTableRowBase
{
	TAssetPtr<class UTexture2D>                        BackgroundImage;                                          // 0x0008(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ApperanceModifier;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.LoadingScreenDataRowBase
// 0x0048 (0x0050 - 0x0008)
struct FLoadingScreenDataRowBase : public FTableRowBase
{
	ELoadingScreenType                                 LoadingScreenType;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       GameModeAlias;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERankGuideType                                     RankGuideType;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TAssetPtr<class UTexture2D>                        BackgroundImage;                                          // 0x0020(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsKeyGuide;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnPCAndKeyboard;                                  // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnPCAndGamepad;                                   // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnXboxOne;                                        // 0x0043(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnPS4;                                            // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnQuail;                                          // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExposedOnQuailThirdParty;                                // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	float                                              ApperanceModifier;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.LoadingScreenDataRow
// 0x0030 (0x0080 - 0x0050)
struct FLoadingScreenDataRow : public FLoadingScreenDataRowBase
{
	struct FText                                       Title;                                                    // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.LoadingScreenDataRow_KeyGuide
// 0x0008 (0x0058 - 0x0050)
struct FLoadingScreenDataRow_KeyGuide : public FLoadingScreenDataRowBase
{
	class UClass*                                      TipWidget;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.GamepadOverWriteAction
// 0x0018 (0x0020 - 0x0008)
struct FGamepadOverWriteAction : public FTableRowBase
{
	struct FName                                       BaseActionName;                                           // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FActionOrAxis>                       OverWriteActionOrAxis;                                    // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct TslGame.TslGamepadInputDataRow
// 0x00B8 (0x00C0 - 0x0008)
struct FTslGamepadInputDataRow : public FTableRowBase
{
	EGamepadPresets                                    GamepadPreset;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EActionType                                        ActionType;                                               // 0x0009(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FName                                       ActionName;                                               // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FKey                                        Key;                                                      // 0x0018(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EGamepadInputResponseTypes                         ResponseType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              ResponseTime;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Scale;                                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlockDuplicatedKeyAction;                                // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FString                                     GuideTabCategory;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FText                                       GuideText;                                                // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FKey                                        CombinationKey;                                           // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FString                                     FakeResponseTypeForGuide;                                 // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     BindingTabName;                                           // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                BindingGroupNumber;                                       // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FunctionalGroupNumber;                                    // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FKey                                        RelatedAxisKey;                                           // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct TslGame.OutgameUserDataSet
// 0x0010
struct FOutgameUserDataSet
{
	TArray<struct FOutgameUserData>                    OutGameUserDateSet;                                       // 0x0000(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslReplayWeather
// 0x0020
struct FTslReplayWeather
{
	float                                              ReplayEventTime;                                          // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETslWeatherAction                                  Action;                                                   // 0x0004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                WeatherIndex;                                             // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                OldWeatherIndex;                                          // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InitElapsedTime;                                          // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SaturateTime;                                             // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.DualMatchingInfo
// 0x0088
struct FDualMatchingInfo
{
	struct FString                                     MatchingState;                                            // 0x0000(0x0010) (ZeroConstructor)
	int                                                MatchingElasedSeconds;                                    // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     Address;                                                  // 0x0018(0x0010) (ZeroConstructor)
	struct FWuUdpEncryptionKey                         Key;                                                      // 0x0028(0x0030)
	struct FString                                     InSessionId;                                              // 0x0058(0x0010) (ZeroConstructor)
	struct FString                                     InSessionZkToken;                                         // 0x0068(0x0010) (ZeroConstructor)
	struct FString                                     InModeName;                                               // 0x0078(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.DualMatchingPacket
// 0x0020
struct FDualMatchingPacket
{
	struct FString                                     URL;                                                      // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Packet;                                                   // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.TslPsnLog
// 0x0038
struct FTslPsnLog
{
	struct FString                                     FunctionName;                                             // 0x0000(0x0010) (ZeroConstructor)
	bool                                               isSuccessful;                                             // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     failResult;                                               // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     additionalData;                                           // 0x0028(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.BluezoneDataRow
// 0x0068 (0x0070 - 0x0008)
struct FBluezoneDataRow : public FTableRowBase
{
	float                                              StartDelay;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WarningDuration;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReleaseDuration;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RadiusRate;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomRadiusRate;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PoisonGasDPS;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpreadRatio;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageMagnifierForDistance;                               // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageMagnifier;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TAssetPtr<class UCurveFloat>                       DamageMagnifierCurve;                                     // 0x0030(0x0020) (Edit, BlueprintVisible)
	EBluezoneType                                      BluezoneType;                                             // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                CircleAlgorithm;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandRatio;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FastPlayerCount;                                          // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FastReleaseDuration;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FastWarningDuration;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreSafetyZone;                                        // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct TslGame.VendingMachineCategoryDataTableRow
// 0x0028 (0x0030 - 0x0008)
struct FVendingMachineCategoryDataTableRow : public FTableRowBase
{
	EVendingMachineType                                VendingMachineType;                                       // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	TAssetPtr<class UClass>                            VendingMachineActorClass;                                 // 0x0010(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct TslGame.InteractionSupplySpawnRateTableRow
// 0x0038 (0x0040 - 0x0008)
struct FInteractionSupplySpawnRateTableRow : public FTableRowBase
{
	struct FString                                     MapName;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	EVendingMachineType                                Category;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TArray<struct FItemClassAndCountPair>              ItemsToDrop;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Weight;                                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bJackpot;                                                 // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	class UAkAudioEvent*                               AkAudioEvent;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.InteractionSupplySpawnCountTableRow
// 0x0018 (0x0020 - 0x0008)
struct FInteractionSupplySpawnCountTableRow : public FTableRowBase
{
	struct FString                                     MapName;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	EVendingMachineType                                Category;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                SpawnCount;                                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.PathPair
// 0x0010
struct FPathPair
{
	struct FVector2D                                   StartPosition;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   EndPosition;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.TslStringArray
// 0x0010
struct FTslStringArray
{
	TArray<struct FString>                             Values;                                                   // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct TslGame.AmbientSoundInstance
// 0x0010
struct FAmbientSoundInstance
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct TslGame.WeaponAnim
// 0x0010
struct FWeaponAnim
{
	class UAnimMontage*                                Pawn1P;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Pawn3P;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.MasteryMeshConfig
// 0x0018
struct FMasteryMeshConfig
{
	struct FName                                       WeaponMasteryCharmSocket;                                 // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponMasteryCharmAttachSocket;                           // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CharmWeaponLODVisibility;                                 // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VariantWeaponLODVisibility;                               // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct TslGame.TslItemSwitchDataRow
// 0x0018 (0x0020 - 0x0008)
struct FTslItemSwitchDataRow : public FTableRowBase
{
	struct FName                                       OriginItemID;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SwitchItemID;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SwitchItemCount;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemFilterDataRow
// 0x0018 (0x0020 - 0x0008)
struct FItemFilterDataRow : public FTableRowBase
{
	struct FName                                       ValueFilter;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryFilter;                                           // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CategoryFilterWeight;                                     // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.ItemSpotGroupDataRow
// 0x0030 (0x0038 - 0x0008)
struct FItemSpotGroupDataRow : public FTableRowBase
{
	EItemSpotGroupType                                 SpotGroupType;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              SpotGroupPercent;                                         // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemSpotType                                      SpotType;                                                 // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              SpotPercentMin;                                           // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpotPercentMax;                                           // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemsPerSpotMin;                                          // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemsPerSpotMax;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       ValueFilter;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ValueFilterWeight;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct TslGame.RandomItemSpawnProcessorDataRow
// 0x0098 (0x00A0 - 0x0008)
struct FRandomItemSpawnProcessorDataRow : public FTableRowBase
{
	struct FString                                     ItemSpawnSubtitleKey;                                     // 0x0008(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        SpotGroupDataTable;                                       // 0x0018(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        ItemFilterDataTable;                                      // 0x0038(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        ItemSpawnDataTable;                                       // 0x0058(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TAssetPtr<class UDataTable>                        ItemSpawnTogetherDataTable;                               // 0x0078(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EItemSpawnType                                     ItemSpawnType;                                            // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	float                                              ItemSpawnRate;                                            // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.MapLocationZoomTableRow
// 0x0020 (0x0028 - 0x0008)
struct FMapLocationZoomTableRow : public FTableRowBase
{
	ELocationType                                      LocationType;                                             // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	TArray<bool>                                       VisibilityByZoom;                                         // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              DesiredAlpha;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DesiredFontSize;                                          // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct TslGame.SplashObject
// 0x000C
struct FSplashObject
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct TslGame.MasteryPoseRow
// 0x0088 (0x0090 - 0x0008)
struct FMasteryPoseRow : public FTableRowBase
{
	class UAnimSequence*                               PlayerPose;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SurvivalPageTransform;                                    // 0x0010(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FString                                     SurvivalPageScene;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      PoseAsset;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	struct FTransform                                  PlayerCardTransform;                                      // 0x0060(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct TslGame.MaterialParametersData
// 0x0020
struct FMaterialParametersData
{
	TArray<struct FLinearColor>                        Vectors;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<class UTexture*>                            Textures;                                                 // 0x0010(0x0010) (ZeroConstructor)
};

// ScriptStruct TslGame.RandomBlueZoneDataRow
// 0x0068 (0x0070 - 0x0008)
struct FRandomBlueZoneDataRow : public FTableRowBase
{
	int                                                SeqID;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     BlueZoneSubtitleKey;                                      // 0x0010(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     BlueZoneDescription;                                      // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                PhaseNumber;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StartDelay;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WarningDuration;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReleaseDuration;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RadiusRate;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RandomRadiusRate;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PoisonGasDPS;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpreadRatio;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageMagnifierForDistance;                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageMagnifier;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CircleAlgorithm;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LandRatio;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FastPlayerCount;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastReleaseDuration;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastWarningDuration;                                      // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
